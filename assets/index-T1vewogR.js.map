{"version":3,"file":"index-T1vewogR.js","sources":["../../node_modules/outvariant/lib/index.mjs","../../node_modules/msw/lib/core/utils/internal/devUtils.mjs","../../node_modules/msw/lib/core/utils/internal/getCallFrame.mjs","../../node_modules/msw/lib/core/utils/internal/isIterable.mjs","../../node_modules/msw/lib/core/handlers/RequestHandler.mjs","../../node_modules/@open-draft/until/lib/index.mjs","../../node_modules/msw/lib/core/utils/executeHandlers.mjs","../../node_modules/msw/lib/core/utils/request/toPublicUrl.mjs","../../node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs","../../node_modules/@mswjs/cookies/lib/index.mjs","../../node_modules/msw/lib/core/utils/request/readResponseCookies.mjs","../../node_modules/msw/lib/core/utils/handleRequest.mjs","../../node_modules/msw/lib/core/utils/toResponseInit.mjs","../../node_modules/msw/lib/core/utils/internal/isObject.mjs","../../node_modules/msw/lib/core/utils/internal/mergeRight.mjs","../../node_modules/strict-event-emitter/lib/index.mjs","../../node_modules/msw/lib/core/utils/internal/pipeEvents.mjs","../../node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs","../../node_modules/msw/lib/core/utils/internal/Disposable.mjs","../../node_modules/msw/lib/core/SetupApi.mjs","../../node_modules/msw/lib/browser/index.mjs","../../node_modules/msw/lib/core/utils/internal/checkGlobals.mjs","../../node_modules/msw/lib/core/utils/internal/isStringEqual.mjs","../../node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs","../../node_modules/msw/lib/core/utils/logging/getTimestamp.mjs","../../node_modules/msw/lib/core/utils/logging/serializeRequest.mjs","../../node_modules/@bundled-es-modules/statuses/index-esm.js","../../node_modules/msw/lib/core/utils/logging/serializeResponse.mjs","../../node_modules/path-to-regexp/dist.es2015/index.js","../../node_modules/@mswjs/interceptors/lib/browser/chunk-UJZOJSMP.mjs","../../node_modules/is-node-process/lib/index.mjs","../../node_modules/@mswjs/interceptors/lib/browser/index.mjs","../../node_modules/msw/lib/core/utils/url/cleanUrl.mjs","../../node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs","../../node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs","../../node_modules/msw/lib/core/utils/matching/normalizePath.mjs","../../node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs","../../node_modules/@bundled-es-modules/cookie/index-esm.js","../../node_modules/msw/lib/core/utils/request/getRequestCookies.mjs","../../node_modules/msw/lib/core/handlers/HttpHandler.mjs","../../node_modules/msw/lib/core/http.mjs","../../node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs","../../node_modules/msw/lib/core/HttpResponse.mjs","../../node_modules/msw/lib/core/delay.mjs","../../node_modules/msw/lib/core/index.mjs","../../src/data/mock/api/veilarboppfolging.ts","../../src/data/mock/api/veilarbperson.ts","../../src/data/mock/api/veilarbveileder.ts","../../node_modules/@mswjs/storage/lib/LiveStorage.js","../../node_modules/@mswjs/storage/lib/index.js","../../src/data/mock/api/veilarbfilter.ts","../../src/data/mock/api/index.ts","../../src/data/mock/index.ts"],"sourcesContent":["// src/format.ts\nvar POSITIONALS_EXP = /(%?)(%([sdijo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\": {\n      if (typeof positional === \"string\") {\n        return positional;\n      }\n      const json = JSON.stringify(positional);\n      if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n        return positional;\n      }\n      return json;\n    }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex];\n      const value = serializePositional(positional, flag);\n      if (!isEscaped) {\n        positionalIndex++;\n        return value;\n      }\n      return match;\n    }\n  );\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\n\n// src/invariant.ts\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error) {\n  if (!error.stack) {\n    return;\n  }\n  const nextStack = error.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage = positionals.length === 0 ? message : format(message, positionals);\n    let error;\n    try {\n      error = Reflect.construct(ErrorConstructor, [formatMessage]);\n    } catch (err) {\n      error = ErrorConstructor(formatMessage);\n    }\n    throw error;\n  }\n};\nexport {\n  InvariantError,\n  format,\n  invariant\n};\n//# sourceMappingURL=index.mjs.map","import { format } from \"outvariant\";\nconst LIBRARY_PREFIX = \"[MSW]\";\nfunction formatMessage(message, ...positionals) {\n  const interpolatedMessage = format(message, ...positionals);\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`;\n}\nfunction warn(message, ...positionals) {\n  console.warn(formatMessage(message, ...positionals));\n}\nfunction error(message, ...positionals) {\n  console.error(formatMessage(message, ...positionals));\n}\nconst devUtils = {\n  formatMessage,\n  warn,\n  error\n};\nexport {\n  devUtils\n};\n//# sourceMappingURL=devUtils.mjs.map","const SOURCE_FRAME = /[\\/\\\\]msw[\\/\\\\]src[\\/\\\\](.+)/;\nconst BUILD_FRAME = /(node_modules)?[\\/\\\\]lib[\\/\\\\](core|browser|node|native|iife)[\\/\\\\]|^[^\\/\\\\]*$/;\nfunction getCallFrame(error) {\n  const stack = error.stack;\n  if (!stack) {\n    return;\n  }\n  const frames = stack.split(\"\\n\").slice(1);\n  const declarationFrame = frames.find((frame) => {\n    return !(SOURCE_FRAME.test(frame) || BUILD_FRAME.test(frame));\n  });\n  if (!declarationFrame) {\n    return;\n  }\n  const declarationPath = declarationFrame.replace(/\\s*at [^()]*\\(([^)]+)\\)/, \"$1\").replace(/^@/, \"\");\n  return declarationPath;\n}\nexport {\n  getCallFrame\n};\n//# sourceMappingURL=getCallFrame.mjs.map","function isIterable(fn) {\n  if (!fn) {\n    return false;\n  }\n  return typeof fn[Symbol.iterator] == \"function\";\n}\nexport {\n  isIterable\n};\n//# sourceMappingURL=isIterable.mjs.map","import { invariant } from \"outvariant\";\nimport { getCallFrame } from '../utils/internal/getCallFrame.mjs';\nimport { isIterable } from '../utils/internal/isIterable.mjs';\nclass RequestHandler {\n  static cache = /* @__PURE__ */ new WeakMap();\n  info;\n  /**\n   * Indicates whether this request handler has been used\n   * (its resolver has successfully executed).\n   */\n  isUsed;\n  resolver;\n  resolverGenerator;\n  resolverGeneratorResult;\n  options;\n  constructor(args) {\n    this.resolver = args.resolver;\n    this.options = args.options;\n    const callFrame = getCallFrame(new Error());\n    this.info = {\n      ...args.info,\n      callFrame\n    };\n    this.isUsed = false;\n  }\n  /**\n   * Parse the intercepted request to extract additional information from it.\n   * Parsed result is then exposed to other methods of this request handler.\n   */\n  async parse(_args) {\n    return {};\n  }\n  /**\n   * Test if this handler matches the given request.\n   *\n   * This method is not used internally but is exposed\n   * as a convenience method for consumers writing custom\n   * handlers.\n   */\n  async test(args) {\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext\n    });\n    return this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext\n    });\n  }\n  extendResolverArgs(_args) {\n    return {};\n  }\n  // Clone the request instance before it's passed to the handler phases\n  // and the response resolver so we can always read it for logging.\n  // We only clone it once per request to avoid unnecessary overhead.\n  cloneRequestOrGetFromCache(request) {\n    const existingClone = RequestHandler.cache.get(request);\n    if (typeof existingClone !== \"undefined\") {\n      return existingClone;\n    }\n    const clonedRequest = request.clone();\n    RequestHandler.cache.set(request, clonedRequest);\n    return clonedRequest;\n  }\n  /**\n   * Execute this request handler and produce a mocked response\n   * using the given resolver function.\n   */\n  async run(args) {\n    if (this.isUsed && this.options?.once) {\n      return null;\n    }\n    const requestClone = this.cloneRequestOrGetFromCache(args.request);\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext\n    });\n    const shouldInterceptRequest = this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext\n    });\n    if (!shouldInterceptRequest) {\n      return null;\n    }\n    if (this.isUsed && this.options?.once) {\n      return null;\n    }\n    this.isUsed = true;\n    const executeResolver = this.wrapResolver(this.resolver);\n    const resolverExtras = this.extendResolverArgs({\n      request: args.request,\n      parsedResult\n    });\n    const mockedResponsePromise = executeResolver({\n      ...resolverExtras,\n      requestId: args.requestId,\n      request: args.request\n    }).catch((errorOrResponse) => {\n      if (errorOrResponse instanceof Response) {\n        return errorOrResponse;\n      }\n      throw errorOrResponse;\n    });\n    const mockedResponse = await mockedResponsePromise;\n    const executionResult = this.createExecutionResult({\n      // Pass the cloned request to the result so that logging\n      // and other consumers could read its body once more.\n      request: requestClone,\n      requestId: args.requestId,\n      response: mockedResponse,\n      parsedResult\n    });\n    return executionResult;\n  }\n  wrapResolver(resolver) {\n    return async (info) => {\n      const result = this.resolverGenerator || await resolver(info);\n      if (isIterable(result)) {\n        this.isUsed = false;\n        const { value, done } = result[Symbol.iterator]().next();\n        const nextResponse = await value;\n        if (done) {\n          this.isUsed = true;\n        }\n        if (!nextResponse && done) {\n          invariant(\n            this.resolverGeneratorResult,\n            \"Failed to returned a previously stored generator response: the value is not a valid Response.\"\n          );\n          return this.resolverGeneratorResult.clone();\n        }\n        if (!this.resolverGenerator) {\n          this.resolverGenerator = result;\n        }\n        if (nextResponse) {\n          this.resolverGeneratorResult = nextResponse?.clone();\n        }\n        return nextResponse;\n      }\n      return result;\n    };\n  }\n  createExecutionResult(args) {\n    return {\n      handler: this,\n      request: args.request,\n      requestId: args.requestId,\n      response: args.response,\n      parsedResult: args.parsedResult\n    };\n  }\n}\nexport {\n  RequestHandler\n};\n//# sourceMappingURL=RequestHandler.mjs.map","// src/until.ts\nvar until = async (promise) => {\n  try {\n    const data = await promise().catch((error) => {\n      throw error;\n    });\n    return { error: null, data };\n  } catch (error) {\n    return { error, data: null };\n  }\n};\nexport {\n  until\n};\n//# sourceMappingURL=index.mjs.map","const executeHandlers = async ({\n  request,\n  requestId,\n  handlers,\n  resolutionContext\n}) => {\n  let matchingHandler = null;\n  let result = null;\n  for (const handler of handlers) {\n    result = await handler.run({ request, requestId, resolutionContext });\n    if (result !== null) {\n      matchingHandler = handler;\n    }\n    if (result?.response) {\n      break;\n    }\n  }\n  if (matchingHandler) {\n    return {\n      handler: matchingHandler,\n      parsedResult: result?.parsedResult,\n      response: result?.response\n    };\n  }\n  return null;\n};\nexport {\n  executeHandlers\n};\n//# sourceMappingURL=executeHandlers.mjs.map","function toPublicUrl(url) {\n  if (typeof location === \"undefined\") {\n    return url.toString();\n  }\n  const urlInstance = url instanceof URL ? url : new URL(url);\n  return urlInstance.origin === location.origin ? urlInstance.pathname : urlInstance.origin + urlInstance.pathname;\n}\nexport {\n  toPublicUrl\n};\n//# sourceMappingURL=toPublicUrl.mjs.map","import { toPublicUrl } from './toPublicUrl.mjs';\nimport { devUtils } from '../internal/devUtils.mjs';\nasync function onUnhandledRequest(request, strategy = \"warn\") {\n  const url = new URL(request.url);\n  const publicUrl = toPublicUrl(url);\n  const unhandledRequestMessage = `intercepted a request without a matching request handler:\n\n  \\u2022 ${request.method} ${publicUrl}\n\nIf you still wish to intercept this unhandled request, please create a request handler for it.\nRead more: https://mswjs.io/docs/getting-started/mocks`;\n  function applyStrategy(strategy2) {\n    switch (strategy2) {\n      case \"error\": {\n        devUtils.error(\"Error: %s\", unhandledRequestMessage);\n        throw new Error(\n          devUtils.formatMessage(\n            'Cannot bypass a request when using the \"error\" strategy for the \"onUnhandledRequest\" option.'\n          )\n        );\n      }\n      case \"warn\": {\n        devUtils.warn(\"Warning: %s\", unhandledRequestMessage);\n        break;\n      }\n      case \"bypass\":\n        break;\n      default:\n        throw new Error(\n          devUtils.formatMessage(\n            'Failed to react to an unhandled request: unknown strategy \"%s\". Please provide one of the supported strategies (\"bypass\", \"warn\", \"error\") or a custom callback function as the value of the \"onUnhandledRequest\" option.',\n            strategy2\n          )\n        );\n    }\n  }\n  if (typeof strategy === \"function\") {\n    strategy(request, {\n      warning: applyStrategy.bind(null, \"warn\"),\n      error: applyStrategy.bind(null, \"error\")\n    });\n    return;\n  }\n  if (url.protocol === \"file:\") {\n    return;\n  }\n  applyStrategy(strategy);\n}\nexport {\n  onUnhandledRequest\n};\n//# sourceMappingURL=onUnhandledRequest.mjs.map","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/set-cookie-parser/lib/set-cookie.js\nvar require_set_cookie = __commonJS({\n  \"node_modules/set-cookie-parser/lib/set-cookie.js\"(exports, module) {\n    \"use strict\";\n    var defaultParseOptions = {\n      decodeValues: true,\n      map: false,\n      silent: false\n    };\n    function isNonEmptyString(str) {\n      return typeof str === \"string\" && !!str.trim();\n    }\n    function parseString(setCookieValue, options) {\n      var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n      var nameValuePairStr = parts.shift();\n      var parsed = parseNameValuePair(nameValuePairStr);\n      var name = parsed.name;\n      var value = parsed.value;\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      try {\n        value = options.decodeValues ? decodeURIComponent(value) : value;\n      } catch (e) {\n        console.error(\n          \"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\",\n          e\n        );\n      }\n      var cookie = {\n        name,\n        value\n      };\n      parts.forEach(function(part) {\n        var sides = part.split(\"=\");\n        var key = sides.shift().trimLeft().toLowerCase();\n        var value2 = sides.join(\"=\");\n        if (key === \"expires\") {\n          cookie.expires = new Date(value2);\n        } else if (key === \"max-age\") {\n          cookie.maxAge = parseInt(value2, 10);\n        } else if (key === \"secure\") {\n          cookie.secure = true;\n        } else if (key === \"httponly\") {\n          cookie.httpOnly = true;\n        } else if (key === \"samesite\") {\n          cookie.sameSite = value2;\n        } else {\n          cookie[key] = value2;\n        }\n      });\n      return cookie;\n    }\n    function parseNameValuePair(nameValuePairStr) {\n      var name = \"\";\n      var value = \"\";\n      var nameValueArr = nameValuePairStr.split(\"=\");\n      if (nameValueArr.length > 1) {\n        name = nameValueArr.shift();\n        value = nameValueArr.join(\"=\");\n      } else {\n        value = nameValuePairStr;\n      }\n      return { name, value };\n    }\n    function parse(input, options) {\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!input) {\n        if (!options.map) {\n          return [];\n        } else {\n          return {};\n        }\n      }\n      if (input.headers) {\n        if (typeof input.headers.getSetCookie === \"function\") {\n          input = input.headers.getSetCookie();\n        } else if (input.headers[\"set-cookie\"]) {\n          input = input.headers[\"set-cookie\"];\n        } else {\n          var sch = input.headers[Object.keys(input.headers).find(function(key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })];\n          if (!sch && input.headers.cookie && !options.silent) {\n            console.warn(\n              \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n            );\n          }\n          input = sch;\n        }\n      }\n      if (!Array.isArray(input)) {\n        input = [input];\n      }\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!options.map) {\n        return input.filter(isNonEmptyString).map(function(str) {\n          return parseString(str, options);\n        });\n      } else {\n        var cookies = {};\n        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {\n          var cookie = parseString(str, options);\n          cookies2[cookie.name] = cookie;\n          return cookies2;\n        }, cookies);\n      }\n    }\n    function splitCookiesString(cookiesString) {\n      if (Array.isArray(cookiesString)) {\n        return cookiesString;\n      }\n      if (typeof cookiesString !== \"string\") {\n        return [];\n      }\n      var cookiesStrings = [];\n      var pos = 0;\n      var start;\n      var ch;\n      var lastComma;\n      var nextStart;\n      var cookiesSeparatorFound;\n      function skipWhitespace() {\n        while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n          pos += 1;\n        }\n        return pos < cookiesString.length;\n      }\n      function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n      }\n      while (pos < cookiesString.length) {\n        start = pos;\n        cookiesSeparatorFound = false;\n        while (skipWhitespace()) {\n          ch = cookiesString.charAt(pos);\n          if (ch === \",\") {\n            lastComma = pos;\n            pos += 1;\n            skipWhitespace();\n            nextStart = pos;\n            while (pos < cookiesString.length && notSpecialChar()) {\n              pos += 1;\n            }\n            if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n              cookiesSeparatorFound = true;\n              pos = nextStart;\n              cookiesStrings.push(cookiesString.substring(start, lastComma));\n              start = pos;\n            } else {\n              pos = lastComma + 1;\n            }\n          } else {\n            pos += 1;\n          }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n      }\n      return cookiesStrings;\n    }\n    module.exports = parse;\n    module.exports.parse = parse;\n    module.exports.parseString = parseString;\n    module.exports.splitCookiesString = splitCookiesString;\n  }\n});\n\n// src/store.ts\nvar import_set_cookie_parser = __toESM(require_set_cookie());\nvar PERSISTENCY_KEY = \"MSW_COOKIE_STORE\";\nfunction supportsLocalStorage() {\n  try {\n    if (localStorage == null) {\n      return false;\n    }\n    const testKey = PERSISTENCY_KEY + \"_test\";\n    localStorage.setItem(testKey, \"test\");\n    localStorage.getItem(testKey);\n    localStorage.removeItem(testKey);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nfunction isPropertyAccessible(object, method) {\n  try {\n    object[method];\n    return true;\n  } catch {\n    return false;\n  }\n}\nvar CookieStore = class {\n  constructor() {\n    this.store = /* @__PURE__ */ new Map();\n  }\n  add(request, response) {\n    if (isPropertyAccessible(request, \"credentials\") && request.credentials === \"omit\") {\n      return;\n    }\n    const requestUrl = new URL(request.url);\n    const responseCookies = response.headers.get(\"set-cookie\");\n    if (!responseCookies) {\n      return;\n    }\n    const now = Date.now();\n    const parsedResponseCookies = (0, import_set_cookie_parser.parse)(responseCookies).map(\n      ({ maxAge, ...cookie }) => ({\n        ...cookie,\n        expires: maxAge === void 0 ? cookie.expires : new Date(now + maxAge * 1e3),\n        maxAge\n      })\n    );\n    const prevCookies = this.store.get(requestUrl.origin) || /* @__PURE__ */ new Map();\n    parsedResponseCookies.forEach((cookie) => {\n      this.store.set(requestUrl.origin, prevCookies.set(cookie.name, cookie));\n    });\n  }\n  get(request) {\n    this.deleteExpiredCookies();\n    const requestUrl = new URL(request.url);\n    const originCookies = this.store.get(requestUrl.origin) || /* @__PURE__ */ new Map();\n    if (!isPropertyAccessible(request, \"credentials\")) {\n      return originCookies;\n    }\n    switch (request.credentials) {\n      case \"include\": {\n        if (typeof document === \"undefined\") {\n          return originCookies;\n        }\n        const documentCookies = (0, import_set_cookie_parser.parse)(document.cookie);\n        documentCookies.forEach((cookie) => {\n          originCookies.set(cookie.name, cookie);\n        });\n        return originCookies;\n      }\n      case \"same-origin\": {\n        return originCookies;\n      }\n      default:\n        return /* @__PURE__ */ new Map();\n    }\n  }\n  getAll() {\n    this.deleteExpiredCookies();\n    return this.store;\n  }\n  deleteAll(request) {\n    const requestUrl = new URL(request.url);\n    this.store.delete(requestUrl.origin);\n  }\n  clear() {\n    this.store.clear();\n  }\n  hydrate() {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    const persistedCookies = localStorage.getItem(PERSISTENCY_KEY);\n    if (!persistedCookies) {\n      return;\n    }\n    try {\n      const parsedCookies = JSON.parse(persistedCookies);\n      parsedCookies.forEach(([origin, cookies]) => {\n        this.store.set(\n          origin,\n          new Map(\n            cookies.map(([token, { expires, ...cookie }]) => [\n              token,\n              expires === void 0 ? cookie : { ...cookie, expires: new Date(expires) }\n            ])\n          )\n        );\n      });\n    } catch (error) {\n      console.warn(`\n[virtual-cookie] Failed to parse a stored cookie from the localStorage (key \"${PERSISTENCY_KEY}\").\n\nStored value:\n${localStorage.getItem(PERSISTENCY_KEY)}\n\nThrown exception:\n${error}\n\nInvalid value has been removed from localStorage to prevent subsequent failed parsing attempts.`);\n      localStorage.removeItem(PERSISTENCY_KEY);\n    }\n  }\n  persist() {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    const serializedCookies = Array.from(this.store.entries()).map(\n      ([origin, cookies]) => {\n        return [origin, Array.from(cookies.entries())];\n      }\n    );\n    localStorage.setItem(PERSISTENCY_KEY, JSON.stringify(serializedCookies));\n  }\n  deleteExpiredCookies() {\n    const now = Date.now();\n    this.store.forEach((originCookies, origin) => {\n      originCookies.forEach(({ expires, name }) => {\n        if (expires !== void 0 && expires.getTime() <= now) {\n          originCookies.delete(name);\n        }\n      });\n      if (originCookies.size === 0) {\n        this.store.delete(origin);\n      }\n    });\n  }\n};\nvar store = new CookieStore();\nexport {\n  PERSISTENCY_KEY,\n  store\n};\n//# sourceMappingURL=index.mjs.map","import { store } from \"@mswjs/cookies\";\nfunction readResponseCookies(request, response) {\n  store.add({ ...request, url: request.url.toString() }, response);\n  store.persist();\n}\nexport {\n  readResponseCookies\n};\n//# sourceMappingURL=readResponseCookies.mjs.map","import { until } from \"@open-draft/until\";\nimport { executeHandlers } from './executeHandlers.mjs';\nimport { onUnhandledRequest } from './request/onUnhandledRequest.mjs';\nimport { readResponseCookies } from './request/readResponseCookies.mjs';\nasync function handleRequest(request, requestId, handlers, options, emitter, handleRequestOptions) {\n  emitter.emit(\"request:start\", { request, requestId });\n  if (request.headers.get(\"x-msw-intention\") === \"bypass\") {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  const lookupResult = await until(() => {\n    return executeHandlers({\n      request,\n      requestId,\n      handlers,\n      resolutionContext: handleRequestOptions?.resolutionContext\n    });\n  });\n  if (lookupResult.error) {\n    emitter.emit(\"unhandledException\", {\n      error: lookupResult.error,\n      request,\n      requestId\n    });\n    throw lookupResult.error;\n  }\n  if (!lookupResult.data) {\n    await onUnhandledRequest(request, options.onUnhandledRequest);\n    emitter.emit(\"request:unhandled\", { request, requestId });\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  const { response } = lookupResult.data;\n  if (!response) {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  if (response.status === 302 && response.headers.get(\"x-msw-intention\") === \"passthrough\") {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  readResponseCookies(request, response);\n  emitter.emit(\"request:match\", { request, requestId });\n  const requiredLookupResult = lookupResult.data;\n  const transformedResponse = handleRequestOptions?.transformResponse?.(response) || response;\n  handleRequestOptions?.onMockedResponse?.(\n    transformedResponse,\n    requiredLookupResult\n  );\n  emitter.emit(\"request:end\", { request, requestId });\n  return transformedResponse;\n}\nexport {\n  handleRequest\n};\n//# sourceMappingURL=handleRequest.mjs.map","function toResponseInit(response) {\n  return {\n    status: response.status,\n    statusText: response.statusText,\n    headers: Object.fromEntries(response.headers.entries())\n  };\n}\nexport {\n  toResponseInit\n};\n//# sourceMappingURL=toResponseInit.mjs.map","function isObject(value) {\n  return value != null && typeof value === \"object\" && !Array.isArray(value);\n}\nexport {\n  isObject\n};\n//# sourceMappingURL=isObject.mjs.map","import { isObject } from './isObject.mjs';\nfunction mergeRight(left, right) {\n  return Object.entries(right).reduce((result, [key, rightValue]) => {\n    const leftValue = result[key];\n    if (Array.isArray(leftValue) && Array.isArray(rightValue)) {\n      result[key] = leftValue.concat(rightValue);\n      return result;\n    }\n    if (isObject(leftValue) && isObject(rightValue)) {\n      result[key] = mergeRight(leftValue, rightValue);\n      return result;\n    }\n    result[key] = rightValue;\n    return result;\n  }, Object.assign({}, left));\n}\nexport {\n  mergeRight\n};\n//# sourceMappingURL=mergeRight.mjs.map","// src/MemoryLeakError.ts\nvar MemoryLeakError = class extends Error {\n  constructor(emitter, type, count) {\n    super(\n      `Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`\n    );\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = \"MaxListenersExceededWarning\";\n  }\n};\n\n// src/Emitter.ts\nvar _Emitter = class {\n  static listenerCount(emitter, eventName) {\n    return emitter.listenerCount(eventName);\n  }\n  constructor() {\n    this.events = /* @__PURE__ */ new Map();\n    this.maxListeners = _Emitter.defaultMaxListeners;\n    this.hasWarnedAboutPotentialMemoryLeak = false;\n  }\n  _emitInternalEvent(internalEventName, eventName, listener) {\n    this.emit(\n      internalEventName,\n      ...[eventName, listener]\n    );\n  }\n  _getListeners(eventName) {\n    return Array.prototype.concat.apply([], this.events.get(eventName)) || [];\n  }\n  _removeListener(listeners, listener) {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n    return [];\n  }\n  _wrapOnceListener(eventName, listener) {\n    const onceListener = (...data) => {\n      this.removeListener(eventName, onceListener);\n      return listener.apply(this, data);\n    };\n    Object.defineProperty(onceListener, \"name\", { value: listener.name });\n    return onceListener;\n  }\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  eventNames() {\n    return Array.from(this.events.keys());\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  emit(eventName, ...data) {\n    const listeners = this._getListeners(eventName);\n    listeners.forEach((listener) => {\n      listener.apply(this, data);\n    });\n    return listeners.length > 0;\n  }\n  addListener(eventName, listener) {\n    this._emitInternalEvent(\"newListener\", eventName, listener);\n    const nextListeners = this._getListeners(eventName).concat(listener);\n    this.events.set(eventName, nextListeners);\n    if (this.maxListeners > 0 && this.listenerCount(eventName) > this.maxListeners && !this.hasWarnedAboutPotentialMemoryLeak) {\n      this.hasWarnedAboutPotentialMemoryLeak = true;\n      const memoryLeakWarning = new MemoryLeakError(\n        this,\n        eventName,\n        this.listenerCount(eventName)\n      );\n      console.warn(memoryLeakWarning);\n    }\n    return this;\n  }\n  on(eventName, listener) {\n    return this.addListener(eventName, listener);\n  }\n  once(eventName, listener) {\n    return this.addListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  prependListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners);\n      this.events.set(eventName, nextListeners);\n    } else {\n      this.events.set(eventName, listeners.concat(listener));\n    }\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    return this.prependListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  removeListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener);\n      this.events.set(eventName, listeners);\n      this._emitInternalEvent(\"removeListener\", eventName, listener);\n    }\n    return this;\n  }\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener);\n  }\n  removeAllListeners(eventName) {\n    if (eventName) {\n      this.events.delete(eventName);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  listeners(eventName) {\n    return Array.from(this._getListeners(eventName));\n  }\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  listenerCount(eventName) {\n    return this._getListeners(eventName).length;\n  }\n  rawListeners(eventName) {\n    return this.listeners(eventName);\n  }\n};\nvar Emitter = _Emitter;\nEmitter.defaultMaxListeners = 10;\nexport {\n  Emitter,\n  MemoryLeakError\n};\n//# sourceMappingURL=index.mjs.map","function pipeEvents(source, destination) {\n  const rawEmit = source.emit;\n  if (rawEmit._isPiped) {\n    return;\n  }\n  const sourceEmit = function sourceEmit2(event, ...data) {\n    destination.emit(event, ...data);\n    return rawEmit.call(this, event, ...data);\n  };\n  sourceEmit._isPiped = true;\n  source.emit = sourceEmit;\n}\nexport {\n  pipeEvents\n};\n//# sourceMappingURL=pipeEvents.mjs.map","function toReadonlyArray(source) {\n  const clone = [...source];\n  Object.freeze(clone);\n  return clone;\n}\nexport {\n  toReadonlyArray\n};\n//# sourceMappingURL=toReadonlyArray.mjs.map","class Disposable {\n  subscriptions = [];\n  async dispose() {\n    await Promise.all(this.subscriptions.map((subscription) => subscription()));\n  }\n}\nexport {\n  Disposable\n};\n//# sourceMappingURL=Disposable.mjs.map","import { invariant } from \"outvariant\";\nimport { Emitter } from \"strict-event-emitter\";\nimport { devUtils } from './utils/internal/devUtils.mjs';\nimport { pipeEvents } from './utils/internal/pipeEvents.mjs';\nimport { toReadonlyArray } from './utils/internal/toReadonlyArray.mjs';\nimport { Disposable } from './utils/internal/Disposable.mjs';\nclass SetupApi extends Disposable {\n  initialHandlers;\n  currentHandlers;\n  emitter;\n  publicEmitter;\n  events;\n  constructor(...initialHandlers) {\n    super();\n    invariant(\n      this.validateHandlers(initialHandlers),\n      devUtils.formatMessage(\n        `Failed to apply given request handlers: invalid input. Did you forget to spread the request handlers Array?`\n      )\n    );\n    this.initialHandlers = toReadonlyArray(initialHandlers);\n    this.currentHandlers = [...initialHandlers];\n    this.emitter = new Emitter();\n    this.publicEmitter = new Emitter();\n    pipeEvents(this.emitter, this.publicEmitter);\n    this.events = this.createLifeCycleEvents();\n    this.subscriptions.push(() => {\n      this.emitter.removeAllListeners();\n      this.publicEmitter.removeAllListeners();\n    });\n  }\n  validateHandlers(handlers) {\n    return handlers.every((handler) => !Array.isArray(handler));\n  }\n  use(...runtimeHandlers) {\n    invariant(\n      this.validateHandlers(runtimeHandlers),\n      devUtils.formatMessage(\n        `Failed to call \"use()\" with the given request handlers: invalid input. Did you forget to spread the array of request handlers?`\n      )\n    );\n    this.currentHandlers.unshift(...runtimeHandlers);\n  }\n  restoreHandlers() {\n    this.currentHandlers.forEach((handler) => {\n      handler.isUsed = false;\n    });\n  }\n  resetHandlers(...nextHandlers) {\n    this.currentHandlers = nextHandlers.length > 0 ? [...nextHandlers] : [...this.initialHandlers];\n  }\n  listHandlers() {\n    return toReadonlyArray(this.currentHandlers);\n  }\n  createLifeCycleEvents() {\n    return {\n      on: (...args) => {\n        return this.publicEmitter.on(...args);\n      },\n      removeListener: (...args) => {\n        return this.publicEmitter.removeListener(...args);\n      },\n      removeAllListeners: (...args) => {\n        return this.publicEmitter.removeAllListeners(...args);\n      }\n    };\n  }\n}\nexport {\n  SetupApi\n};\n//# sourceMappingURL=SetupApi.mjs.map","// node_modules/.pnpm/outvariant@1.4.2/node_modules/outvariant/lib/index.mjs\nvar POSITIONALS_EXP = /(%?)(%([sdijo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\": {\n      if (typeof positional === \"string\") {\n        return positional;\n      }\n      const json = JSON.stringify(positional);\n      if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n        return positional;\n      }\n      return json;\n    }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex];\n      const value = serializePositional(positional, flag);\n      if (!isEscaped) {\n        positionalIndex++;\n        return value;\n      }\n      return match;\n    }\n  );\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error2) {\n  if (!error2.stack) {\n    return;\n  }\n  const nextStack = error2.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error2.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage = positionals.length === 0 ? message : format(message, positionals);\n    let error2;\n    try {\n      error2 = Reflect.construct(ErrorConstructor, [formatMessage]);\n    } catch (err) {\n      error2 = ErrorConstructor(formatMessage);\n    }\n    throw error2;\n  }\n};\n\n// node_modules/.pnpm/is-node-process@1.2.0/node_modules/is-node-process/lib/index.mjs\nfunction isNodeProcess() {\n  if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    return true;\n  }\n  if (typeof process !== \"undefined\") {\n    const type = process.type;\n    if (type === \"renderer\" || type === \"worker\") {\n      return false;\n    }\n    return !!(process.versions && process.versions.node);\n  }\n  return false;\n}\n\n// node_modules/.pnpm/@open-draft+until@2.1.0/node_modules/@open-draft/until/lib/index.mjs\nvar until = async (promise) => {\n  try {\n    const data = await promise().catch((error2) => {\n      throw error2;\n    });\n    return { error: null, data };\n  } catch (error2) {\n    return { error: error2, data: null };\n  }\n};\n\n// src/browser/setupWorker/start/createStartHandler.ts\nimport { devUtils as devUtils6 } from '../core/utils/internal/devUtils.mjs';\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\nimport { devUtils } from '../core/utils/internal/devUtils.mjs';\n\n// src/browser/utils/getAbsoluteWorkerUrl.ts\nfunction getAbsoluteWorkerUrl(workerUrl) {\n  return new URL(workerUrl, location.href).href;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerByRegistration.ts\nfunction getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker) {\n  const allStates = [\n    registration.active,\n    registration.installing,\n    registration.waiting\n  ];\n  const relevantStates = allStates.filter((state) => {\n    return state != null;\n  });\n  const worker = relevantStates.find((worker2) => {\n    return findWorker(worker2.scriptURL, absoluteWorkerUrl);\n  });\n  return worker || null;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\nvar getWorkerInstance = async (url, options = {}, findWorker) => {\n  const absoluteWorkerUrl = getAbsoluteWorkerUrl(url);\n  const mockRegistrations = await navigator.serviceWorker.getRegistrations().then(\n    (registrations) => registrations.filter(\n      (registration) => getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker)\n    )\n  );\n  if (!navigator.serviceWorker.controller && mockRegistrations.length > 0) {\n    location.reload();\n  }\n  const [existingRegistration] = mockRegistrations;\n  if (existingRegistration) {\n    return existingRegistration.update().then(() => {\n      return [\n        getWorkerByRegistration(\n          existingRegistration,\n          absoluteWorkerUrl,\n          findWorker\n        ),\n        existingRegistration\n      ];\n    });\n  }\n  const registrationResult = await until(\n    async () => {\n      const registration = await navigator.serviceWorker.register(url, options);\n      return [\n        // Compare existing worker registration by its worker URL,\n        // to prevent irrelevant workers to resolve here (such as Codesandbox worker).\n        getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker),\n        registration\n      ];\n    }\n  );\n  if (registrationResult.error) {\n    const isWorkerMissing = registrationResult.error.message.includes(\"(404)\");\n    if (isWorkerMissing) {\n      const scopeUrl = new URL(options?.scope || \"/\", location.href);\n      throw new Error(\n        devUtils.formatMessage(`Failed to register a Service Worker for scope ('${scopeUrl.href}') with script ('${absoluteWorkerUrl}'): Service Worker script does not exist at the given path.\n\nDid you forget to run \"npx msw init <PUBLIC_DIR>\"?\n\nLearn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`)\n      );\n    }\n    throw new Error(\n      devUtils.formatMessage(\n        \"Failed to register the Service Worker:\\n\\n%s\",\n        registrationResult.error.message\n      )\n    );\n  }\n  return registrationResult.data;\n};\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\nimport { devUtils as devUtils3 } from '../core/utils/internal/devUtils.mjs';\n\n// src/browser/setupWorker/start/utils/printStartMessage.ts\nimport { devUtils as devUtils2 } from '../core/utils/internal/devUtils.mjs';\nfunction printStartMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  const message = args.message || \"Mocking enabled.\";\n  console.groupCollapsed(\n    `%c${devUtils2.formatMessage(message)}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n  console.log(\n    \"%cDocumentation: %chttps://mswjs.io/docs\",\n    \"font-weight:bold\",\n    \"font-weight:normal\"\n  );\n  console.log(\"Found an issue? https://github.com/mswjs/msw/issues\");\n  if (args.workerUrl) {\n    console.log(\"Worker script URL:\", args.workerUrl);\n  }\n  if (args.workerScope) {\n    console.log(\"Worker scope:\", args.workerScope);\n  }\n  console.groupEnd();\n}\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\nasync function enableMocking(context, options) {\n  context.workerChannel.send(\"MOCK_ACTIVATE\");\n  await context.events.once(\"MOCKING_ENABLED\");\n  if (context.isMockingEnabled) {\n    devUtils3.warn(\n      `Found a redundant \"worker.start()\" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this \"worker.start()\" call.`\n    );\n    return;\n  }\n  context.isMockingEnabled = true;\n  printStartMessage({\n    quiet: options.quiet,\n    workerScope: context.registration?.scope,\n    workerUrl: context.worker?.scriptURL\n  });\n}\n\n// src/browser/setupWorker/start/utils/createMessageChannel.ts\nvar WorkerChannel = class {\n  constructor(port) {\n    this.port = port;\n  }\n  postMessage(event, ...rest) {\n    const [data, transfer] = rest;\n    this.port.postMessage({ type: event, data }, { transfer });\n  }\n};\n\n// src/browser/utils/pruneGetRequestBody.ts\nfunction pruneGetRequestBody(request) {\n  if ([\"HEAD\", \"GET\"].includes(request.method)) {\n    return void 0;\n  }\n  return request.body;\n}\n\n// src/browser/utils/parseWorkerRequest.ts\nfunction parseWorkerRequest(incomingRequest) {\n  return new Request(incomingRequest.url, {\n    ...incomingRequest,\n    body: pruneGetRequestBody(incomingRequest)\n  });\n}\n\n// src/browser/setupWorker/start/createRequestListener.ts\nimport { RequestHandler } from '../core/handlers/RequestHandler.mjs';\nimport { handleRequest } from '../core/utils/handleRequest.mjs';\nimport { devUtils as devUtils4 } from '../core/utils/internal/devUtils.mjs';\nimport { toResponseInit } from '../core/utils/toResponseInit.mjs';\nvar createRequestListener = (context, options) => {\n  return async (event, message) => {\n    const messageChannel = new WorkerChannel(event.ports[0]);\n    const requestId = message.payload.id;\n    const request = parseWorkerRequest(message.payload);\n    const requestCloneForLogs = request.clone();\n    const requestClone = request.clone();\n    RequestHandler.cache.set(request, requestClone);\n    context.requests.set(requestId, requestClone);\n    try {\n      await handleRequest(\n        request,\n        requestId,\n        context.requestHandlers,\n        options,\n        context.emitter,\n        {\n          onPassthroughResponse() {\n            messageChannel.postMessage(\"NOT_FOUND\");\n          },\n          async onMockedResponse(response, { handler, parsedResult }) {\n            const responseClone = response.clone();\n            const responseCloneForLogs = response.clone();\n            const responseInit = toResponseInit(response);\n            if (context.supports.readableStreamTransfer) {\n              const responseStreamOrNull = response.body;\n              messageChannel.postMessage(\n                \"MOCK_RESPONSE\",\n                {\n                  ...responseInit,\n                  body: responseStreamOrNull\n                },\n                responseStreamOrNull ? [responseStreamOrNull] : void 0\n              );\n            } else {\n              const responseBufferOrNull = response.body === null ? null : await responseClone.arrayBuffer();\n              messageChannel.postMessage(\"MOCK_RESPONSE\", {\n                ...responseInit,\n                body: responseBufferOrNull\n              });\n            }\n            if (!options.quiet) {\n              context.emitter.once(\"response:mocked\", () => {\n                handler.log({\n                  request: requestCloneForLogs,\n                  response: responseCloneForLogs,\n                  parsedResult\n                });\n              });\n            }\n          }\n        }\n      );\n    } catch (error2) {\n      if (error2 instanceof Error) {\n        devUtils4.error(\n          `Uncaught exception in the request handler for \"%s %s\":\n\n%s\n\nThis exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/recipes/mocking-error-responses`,\n          request.method,\n          request.url,\n          error2.stack ?? error2\n        );\n        messageChannel.postMessage(\"MOCK_RESPONSE\", {\n          status: 500,\n          statusText: \"Request Handler Error\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: error2.name,\n            message: error2.message,\n            stack: error2.stack\n          })\n        });\n      }\n    }\n  };\n};\n\n// src/browser/utils/requestIntegrityCheck.ts\nasync function requestIntegrityCheck(context, serviceWorker) {\n  context.workerChannel.send(\"INTEGRITY_CHECK_REQUEST\");\n  const { payload: actualChecksum } = await context.events.once(\n    \"INTEGRITY_CHECK_RESPONSE\"\n  );\n  if (actualChecksum !== \"223d191a56023cd36aa88c802961b911\") {\n    throw new Error(\n      `Currently active Service Worker (${actualChecksum}) is behind the latest published one (${\"223d191a56023cd36aa88c802961b911\"}).`\n    );\n  }\n  return serviceWorker;\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.25.15/node_modules/@mswjs/interceptors/lib/browser/chunk-UJZOJSMP.mjs\nvar encoder = new TextEncoder();\nfunction encodeBuffer(text) {\n  return encoder.encode(text);\n}\nfunction decodeBuffer(buffer, encoding) {\n  const decoder = new TextDecoder(encoding);\n  return decoder.decode(buffer);\n}\nfunction toArrayBuffer(array) {\n  return array.buffer.slice(\n    array.byteOffset,\n    array.byteOffset + array.byteLength\n  );\n}\nvar RESPONSE_STATUS_CODES_WITHOUT_BODY = /* @__PURE__ */ new Set([\n  101,\n  103,\n  204,\n  205,\n  304\n]);\nfunction isResponseWithoutBody(status) {\n  return RESPONSE_STATUS_CODES_WITHOUT_BODY.has(status);\n}\n\n// node_modules/.pnpm/@open-draft+logger@0.3.0/node_modules/@open-draft/logger/lib/index.mjs\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar colors_exports = {};\n__export(colors_exports, {\n  blue: () => blue,\n  gray: () => gray,\n  green: () => green,\n  red: () => red,\n  yellow: () => yellow\n});\nfunction yellow(text) {\n  return `\\x1B[33m${text}\\x1B[0m`;\n}\nfunction blue(text) {\n  return `\\x1B[34m${text}\\x1B[0m`;\n}\nfunction gray(text) {\n  return `\\x1B[90m${text}\\x1B[0m`;\n}\nfunction red(text) {\n  return `\\x1B[31m${text}\\x1B[0m`;\n}\nfunction green(text) {\n  return `\\x1B[32m${text}\\x1B[0m`;\n}\nvar IS_NODE = isNodeProcess();\nvar Logger = class {\n  constructor(name) {\n    this.name = name;\n    this.prefix = `[${this.name}]`;\n    const LOGGER_NAME = getVariable(\"DEBUG\");\n    const LOGGER_LEVEL = getVariable(\"LOG_LEVEL\");\n    const isLoggingEnabled = LOGGER_NAME === \"1\" || LOGGER_NAME === \"true\" || typeof LOGGER_NAME !== \"undefined\" && this.name.startsWith(LOGGER_NAME);\n    if (isLoggingEnabled) {\n      this.debug = isDefinedAndNotEquals(LOGGER_LEVEL, \"debug\") ? noop : this.debug;\n      this.info = isDefinedAndNotEquals(LOGGER_LEVEL, \"info\") ? noop : this.info;\n      this.success = isDefinedAndNotEquals(LOGGER_LEVEL, \"success\") ? noop : this.success;\n      this.warning = isDefinedAndNotEquals(LOGGER_LEVEL, \"warning\") ? noop : this.warning;\n      this.error = isDefinedAndNotEquals(LOGGER_LEVEL, \"error\") ? noop : this.error;\n    } else {\n      this.info = noop;\n      this.success = noop;\n      this.warning = noop;\n      this.error = noop;\n      this.only = noop;\n    }\n  }\n  prefix;\n  extend(domain) {\n    return new Logger(`${this.name}:${domain}`);\n  }\n  /**\n   * Print a debug message.\n   * @example\n   * logger.debug('no duplicates found, creating a document...')\n   */\n  debug(message, ...positionals) {\n    this.logEntry({\n      level: \"debug\",\n      message: gray(message),\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"gray\"\n      }\n    });\n  }\n  /**\n   * Print an info message.\n   * @example\n   * logger.info('start parsing...')\n   */\n  info(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"blue\"\n      }\n    });\n    const performance2 = new PerformanceEntry();\n    return (message2, ...positionals2) => {\n      performance2.measure();\n      this.logEntry({\n        level: \"info\",\n        message: `${message2} ${gray(`${performance2.deltaTime}ms`)}`,\n        positionals: positionals2,\n        prefix: this.prefix,\n        colors: {\n          prefix: \"blue\"\n        }\n      });\n    };\n  }\n  /**\n   * Print a success message.\n   * @example\n   * logger.success('successfully created document')\n   */\n  success(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: `\\u2714 ${this.prefix}`,\n      colors: {\n        timestamp: \"green\",\n        prefix: \"green\"\n      }\n    });\n  }\n  /**\n   * Print a warning.\n   * @example\n   * logger.warning('found legacy document format')\n   */\n  warning(message, ...positionals) {\n    this.logEntry({\n      level: \"warning\",\n      message,\n      positionals,\n      prefix: `\\u26A0 ${this.prefix}`,\n      colors: {\n        timestamp: \"yellow\",\n        prefix: \"yellow\"\n      }\n    });\n  }\n  /**\n   * Print an error message.\n   * @example\n   * logger.error('something went wrong')\n   */\n  error(message, ...positionals) {\n    this.logEntry({\n      level: \"error\",\n      message,\n      positionals,\n      prefix: `\\u2716 ${this.prefix}`,\n      colors: {\n        timestamp: \"red\",\n        prefix: \"red\"\n      }\n    });\n  }\n  /**\n   * Execute the given callback only when the logging is enabled.\n   * This is skipped in its entirety and has no runtime cost otherwise.\n   * This executes regardless of the log level.\n   * @example\n   * logger.only(() => {\n   *   logger.info('additional info')\n   * })\n   */\n  only(callback) {\n    callback();\n  }\n  createEntry(level, message) {\n    return {\n      timestamp: /* @__PURE__ */ new Date(),\n      level,\n      message\n    };\n  }\n  logEntry(args) {\n    const {\n      level,\n      message,\n      prefix,\n      colors: customColors,\n      positionals = []\n    } = args;\n    const entry = this.createEntry(level, message);\n    const timestampColor = customColors?.timestamp || \"gray\";\n    const prefixColor = customColors?.prefix || \"gray\";\n    const colorize = {\n      timestamp: colors_exports[timestampColor],\n      prefix: colors_exports[prefixColor]\n    };\n    const write = this.getWriter(level);\n    write(\n      [colorize.timestamp(this.formatTimestamp(entry.timestamp))].concat(prefix != null ? colorize.prefix(prefix) : []).concat(serializeInput(message)).join(\" \"),\n      ...positionals.map(serializeInput)\n    );\n  }\n  formatTimestamp(timestamp) {\n    return `${timestamp.toLocaleTimeString(\n      \"en-GB\"\n    )}:${timestamp.getMilliseconds()}`;\n  }\n  getWriter(level) {\n    switch (level) {\n      case \"debug\":\n      case \"success\":\n      case \"info\": {\n        return log;\n      }\n      case \"warning\": {\n        return warn;\n      }\n      case \"error\": {\n        return error;\n      }\n    }\n  }\n};\nvar PerformanceEntry = class {\n  startTime;\n  endTime;\n  deltaTime;\n  constructor() {\n    this.startTime = performance.now();\n  }\n  measure() {\n    this.endTime = performance.now();\n    const deltaTime = this.endTime - this.startTime;\n    this.deltaTime = deltaTime.toFixed(2);\n  }\n};\nvar noop = () => void 0;\nfunction log(message, ...positionals) {\n  if (IS_NODE) {\n    process.stdout.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.log(message, ...positionals);\n}\nfunction warn(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.warn(message, ...positionals);\n}\nfunction error(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.error(message, ...positionals);\n}\nfunction getVariable(variableName) {\n  if (IS_NODE) {\n    return process.env[variableName];\n  }\n  return globalThis[variableName]?.toString();\n}\nfunction isDefinedAndNotEquals(value, expected) {\n  return value !== void 0 && value !== expected;\n}\nfunction serializeInput(message) {\n  if (typeof message === \"undefined\") {\n    return \"undefined\";\n  }\n  if (message === null) {\n    return \"null\";\n  }\n  if (typeof message === \"string\") {\n    return message;\n  }\n  if (typeof message === \"object\") {\n    return JSON.stringify(message);\n  }\n  return message.toString();\n}\n\n// node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/lib/index.mjs\nvar MemoryLeakError = class extends Error {\n  constructor(emitter, type, count) {\n    super(\n      `Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`\n    );\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = \"MaxListenersExceededWarning\";\n  }\n};\nvar _Emitter = class {\n  static listenerCount(emitter, eventName) {\n    return emitter.listenerCount(eventName);\n  }\n  constructor() {\n    this.events = /* @__PURE__ */ new Map();\n    this.maxListeners = _Emitter.defaultMaxListeners;\n    this.hasWarnedAboutPotentialMemoryLeak = false;\n  }\n  _emitInternalEvent(internalEventName, eventName, listener) {\n    this.emit(\n      internalEventName,\n      ...[eventName, listener]\n    );\n  }\n  _getListeners(eventName) {\n    return Array.prototype.concat.apply([], this.events.get(eventName)) || [];\n  }\n  _removeListener(listeners, listener) {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n    return [];\n  }\n  _wrapOnceListener(eventName, listener) {\n    const onceListener = (...data) => {\n      this.removeListener(eventName, onceListener);\n      return listener.apply(this, data);\n    };\n    Object.defineProperty(onceListener, \"name\", { value: listener.name });\n    return onceListener;\n  }\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  eventNames() {\n    return Array.from(this.events.keys());\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  emit(eventName, ...data) {\n    const listeners = this._getListeners(eventName);\n    listeners.forEach((listener) => {\n      listener.apply(this, data);\n    });\n    return listeners.length > 0;\n  }\n  addListener(eventName, listener) {\n    this._emitInternalEvent(\"newListener\", eventName, listener);\n    const nextListeners = this._getListeners(eventName).concat(listener);\n    this.events.set(eventName, nextListeners);\n    if (this.maxListeners > 0 && this.listenerCount(eventName) > this.maxListeners && !this.hasWarnedAboutPotentialMemoryLeak) {\n      this.hasWarnedAboutPotentialMemoryLeak = true;\n      const memoryLeakWarning = new MemoryLeakError(\n        this,\n        eventName,\n        this.listenerCount(eventName)\n      );\n      console.warn(memoryLeakWarning);\n    }\n    return this;\n  }\n  on(eventName, listener) {\n    return this.addListener(eventName, listener);\n  }\n  once(eventName, listener) {\n    return this.addListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  prependListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners);\n      this.events.set(eventName, nextListeners);\n    } else {\n      this.events.set(eventName, listeners.concat(listener));\n    }\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    return this.prependListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  removeListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener);\n      this.events.set(eventName, listeners);\n      this._emitInternalEvent(\"removeListener\", eventName, listener);\n    }\n    return this;\n  }\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener);\n  }\n  removeAllListeners(eventName) {\n    if (eventName) {\n      this.events.delete(eventName);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  listeners(eventName) {\n    return Array.from(this._getListeners(eventName));\n  }\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  listenerCount(eventName) {\n    return this._getListeners(eventName).length;\n  }\n  rawListeners(eventName) {\n    return this.listeners(eventName);\n  }\n};\nvar Emitter = _Emitter;\nEmitter.defaultMaxListeners = 10;\n\n// node_modules/.pnpm/@mswjs+interceptors@0.25.15/node_modules/@mswjs/interceptors/lib/browser/chunk-WZQN3FMY.mjs\nvar IS_PATCHED_MODULE = Symbol(\"isPatchedModule\");\nfunction getGlobalSymbol(symbol) {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || void 0\n  );\n}\nfunction setGlobalSymbol(symbol, value) {\n  globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n  delete globalThis[symbol];\n}\nvar Interceptor = class {\n  constructor(symbol) {\n    this.symbol = symbol;\n    this.readyState = \"INACTIVE\";\n    this.emitter = new Emitter();\n    this.subscriptions = [];\n    this.logger = new Logger(symbol.description);\n    this.emitter.setMaxListeners(0);\n    this.logger.info(\"constructing the interceptor...\");\n  }\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  checkEnvironment() {\n    return true;\n  }\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  apply() {\n    const logger = this.logger.extend(\"apply\");\n    logger.info(\"applying the interceptor...\");\n    if (this.readyState === \"APPLIED\") {\n      logger.info(\"intercepted already applied!\");\n      return;\n    }\n    const shouldApply = this.checkEnvironment();\n    if (!shouldApply) {\n      logger.info(\"the interceptor cannot be applied in this environment!\");\n      return;\n    }\n    this.readyState = \"APPLYING\";\n    const runningInstance = this.getInstance();\n    if (runningInstance) {\n      logger.info(\"found a running instance, reusing...\");\n      this.on = (event, listener) => {\n        logger.info('proxying the \"%s\" listener', event);\n        runningInstance.emitter.addListener(event, listener);\n        this.subscriptions.push(() => {\n          runningInstance.emitter.removeListener(event, listener);\n          logger.info('removed proxied \"%s\" listener!', event);\n        });\n        return this;\n      };\n      this.readyState = \"APPLIED\";\n      return;\n    }\n    logger.info(\"no running instance found, setting up a new instance...\");\n    this.setup();\n    this.setInstance();\n    this.readyState = \"APPLIED\";\n  }\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  setup() {\n  }\n  /**\n   * Listen to the interceptor's public events.\n   */\n  on(event, listener) {\n    const logger = this.logger.extend(\"on\");\n    if (this.readyState === \"DISPOSING\" || this.readyState === \"DISPOSED\") {\n      logger.info(\"cannot listen to events, already disposed!\");\n      return this;\n    }\n    logger.info('adding \"%s\" event listener:', event, listener);\n    this.emitter.on(event, listener);\n    return this;\n  }\n  once(event, listener) {\n    this.emitter.once(event, listener);\n    return this;\n  }\n  off(event, listener) {\n    this.emitter.off(event, listener);\n    return this;\n  }\n  removeAllListeners(event) {\n    this.emitter.removeAllListeners(event);\n    return this;\n  }\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  dispose() {\n    const logger = this.logger.extend(\"dispose\");\n    if (this.readyState === \"DISPOSED\") {\n      logger.info(\"cannot dispose, already disposed!\");\n      return;\n    }\n    logger.info(\"disposing the interceptor...\");\n    this.readyState = \"DISPOSING\";\n    if (!this.getInstance()) {\n      logger.info(\"no interceptors running, skipping dispose...\");\n      return;\n    }\n    this.clearInstance();\n    logger.info(\"global symbol deleted:\", getGlobalSymbol(this.symbol));\n    if (this.subscriptions.length > 0) {\n      logger.info(\"disposing of %d subscriptions...\", this.subscriptions.length);\n      for (const dispose of this.subscriptions) {\n        dispose();\n      }\n      this.subscriptions = [];\n      logger.info(\"disposed of all subscriptions!\", this.subscriptions.length);\n    }\n    this.emitter.removeAllListeners();\n    logger.info(\"destroyed the listener!\");\n    this.readyState = \"DISPOSED\";\n  }\n  getInstance() {\n    var _a;\n    const instance = getGlobalSymbol(this.symbol);\n    this.logger.info(\"retrieved global instance:\", (_a = instance == null ? void 0 : instance.constructor) == null ? void 0 : _a.name);\n    return instance;\n  }\n  setInstance() {\n    setGlobalSymbol(this.symbol, this);\n    this.logger.info(\"set global instance!\", this.symbol.description);\n  }\n  clearInstance() {\n    deleteGlobalSymbol(this.symbol);\n    this.logger.info(\"cleared global instance!\", this.symbol.description);\n  }\n};\n\n// node_modules/.pnpm/@mswjs+interceptors@0.25.15/node_modules/@mswjs/interceptors/lib/browser/index.mjs\nvar BatchInterceptor = class extends Interceptor {\n  constructor(options) {\n    BatchInterceptor.symbol = Symbol(options.name);\n    super(BatchInterceptor.symbol);\n    this.interceptors = options.interceptors;\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info(\"applying all %d interceptors...\", this.interceptors.length);\n    for (const interceptor of this.interceptors) {\n      logger.info('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      logger.info(\"adding interceptor dispose subscription\");\n      this.subscriptions.push(() => interceptor.dispose());\n    }\n  }\n  on(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.on(event, listener);\n    }\n    return this;\n  }\n  once(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.once(event, listener);\n    }\n    return this;\n  }\n  off(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.off(event, listener);\n    }\n    return this;\n  }\n  removeAllListeners(event) {\n    for (const interceptors of this.interceptors) {\n      interceptors.removeAllListeners(event);\n    }\n    return this;\n  }\n};\n\n// src/browser/setupWorker/start/createResponseListener.ts\nfunction createResponseListener(context) {\n  return (_, message) => {\n    const { payload: responseJson } = message;\n    const { requestId } = responseJson;\n    const request = context.requests.get(requestId);\n    context.requests.delete(requestId);\n    if (responseJson.type?.includes(\"opaque\")) {\n      return;\n    }\n    const response = responseJson.status === 0 ? Response.error() : new Response(\n      /**\n       * Responses may be streams here, but when we create a response object\n       * with null-body status codes, like 204, 205, 304 Response will\n       * throw when passed a non-null body, so ensure it's null here\n       * for those codes\n       */\n      isResponseWithoutBody(responseJson.status) ? null : responseJson.body,\n      responseJson\n    );\n    context.emitter.emit(\n      responseJson.isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n      {\n        response,\n        request,\n        requestId: responseJson.requestId\n      }\n    );\n  };\n}\n\n// src/browser/setupWorker/start/utils/validateWorkerScope.ts\nimport { devUtils as devUtils5 } from '../core/utils/internal/devUtils.mjs';\nfunction validateWorkerScope(registration, options) {\n  if (!options?.quiet && !location.href.startsWith(registration.scope)) {\n    devUtils5.warn(\n      `Cannot intercept requests on this page because it's outside of the worker's scope (\"${registration.scope}\"). If you wish to mock API requests on this page, you must resolve this scope issue.\n\n- (Recommended) Register the worker at the root level (\"/\") of your application.\n- Set the \"Service-Worker-Allowed\" response header to allow out-of-scope workers.`\n    );\n  }\n}\n\n// src/browser/setupWorker/start/createStartHandler.ts\nvar createStartHandler = (context) => {\n  return function start(options, customOptions) {\n    const startWorkerInstance = async () => {\n      context.events.removeAllListeners();\n      context.workerChannel.on(\n        \"REQUEST\",\n        createRequestListener(context, options)\n      );\n      context.workerChannel.on(\"RESPONSE\", createResponseListener(context));\n      const instance = await getWorkerInstance(\n        options.serviceWorker.url,\n        options.serviceWorker.options,\n        options.findWorker\n      );\n      const [worker, registration] = instance;\n      if (!worker) {\n        const missingWorkerMessage = customOptions?.findWorker ? devUtils6.formatMessage(\n          `Failed to locate the Service Worker registration using a custom \"findWorker\" predicate.\n\nPlease ensure that the custom predicate properly locates the Service Worker registration at \"%s\".\nMore details: https://mswjs.io/docs/api/setup-worker/start#findworker\n`,\n          options.serviceWorker.url\n        ) : devUtils6.formatMessage(\n          `Failed to locate the Service Worker registration.\n\nThis most likely means that the worker script URL \"%s\" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.\n\nPlease consider using a custom \"serviceWorker.url\" option to point to the actual worker script location, or a custom \"findWorker\" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start`,\n          options.serviceWorker.url,\n          location.host\n        );\n        throw new Error(missingWorkerMessage);\n      }\n      context.worker = worker;\n      context.registration = registration;\n      context.events.addListener(window, \"beforeunload\", () => {\n        if (worker.state !== \"redundant\") {\n          context.workerChannel.send(\"CLIENT_CLOSED\");\n        }\n        window.clearInterval(context.keepAliveInterval);\n      });\n      const integrityCheckResult = await until(\n        () => requestIntegrityCheck(context, worker)\n      );\n      if (integrityCheckResult.error) {\n        devUtils6.error(`Detected outdated Service Worker: ${integrityCheckResult.error.message}\n\nThe mocking is still enabled, but it's highly recommended that you update your Service Worker by running:\n\n$ npx msw init <PUBLIC_DIR>\n\nThis is necessary to ensure that the Service Worker is in sync with the library to guarantee its stability.\nIf this message still persists after updating, please report an issue: https://github.com/open-draft/msw/issues      `);\n      }\n      context.keepAliveInterval = window.setInterval(\n        () => context.workerChannel.send(\"KEEPALIVE_REQUEST\"),\n        5e3\n      );\n      validateWorkerScope(registration, context.startOptions);\n      return registration;\n    };\n    const workerRegistration = startWorkerInstance().then(\n      async (registration) => {\n        const pendingInstance = registration.installing || registration.waiting;\n        if (pendingInstance) {\n          await new Promise((resolve) => {\n            pendingInstance.addEventListener(\"statechange\", () => {\n              if (pendingInstance.state === \"activated\") {\n                return resolve();\n              }\n            });\n          });\n        }\n        await enableMocking(context, options).catch((error2) => {\n          throw new Error(`Failed to enable mocking: ${error2?.message}`);\n        });\n        return registration;\n      }\n    );\n    return workerRegistration;\n  };\n};\n\n// src/browser/setupWorker/stop/createStop.ts\nimport { devUtils as devUtils8 } from '../core/utils/internal/devUtils.mjs';\n\n// src/browser/setupWorker/stop/utils/printStopMessage.ts\nimport { devUtils as devUtils7 } from '../core/utils/internal/devUtils.mjs';\nfunction printStopMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  console.log(\n    `%c${devUtils7.formatMessage(\"Mocking disabled.\")}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n}\n\n// src/browser/setupWorker/stop/createStop.ts\nvar createStop = (context) => {\n  return function stop() {\n    if (!context.isMockingEnabled) {\n      devUtils8.warn(\n        'Found a redundant \"worker.stop()\" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this \"worker.stop()\" call.'\n      );\n      return;\n    }\n    context.workerChannel.send(\"MOCK_DEACTIVATE\");\n    context.isMockingEnabled = false;\n    window.clearInterval(context.keepAliveInterval);\n    printStopMessage({ quiet: context.startOptions?.quiet });\n  };\n};\n\n// src/browser/setupWorker/start/utils/prepareStartHandler.ts\nimport { mergeRight } from '../core/utils/internal/mergeRight.mjs';\nvar DEFAULT_START_OPTIONS = {\n  serviceWorker: {\n    url: \"/mockServiceWorker.js\",\n    options: null\n  },\n  quiet: false,\n  waitUntilReady: true,\n  onUnhandledRequest: \"warn\",\n  findWorker(scriptURL, mockServiceWorkerUrl) {\n    return scriptURL === mockServiceWorkerUrl;\n  }\n};\n\n// node_modules/.pnpm/@open-draft+deferred-promise@2.2.0/node_modules/@open-draft/deferred-promise/build/index.mjs\nfunction createDeferredExecutor() {\n  const executor = (resolve, reject) => {\n    executor.state = \"pending\";\n    executor.resolve = (data) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      executor.result = data;\n      const onFulfilled = (value) => {\n        executor.state = \"fulfilled\";\n        return value;\n      };\n      return resolve(\n        data instanceof Promise ? data : Promise.resolve(data).then(onFulfilled)\n      );\n    };\n    executor.reject = (reason) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      queueMicrotask(() => {\n        executor.state = \"rejected\";\n      });\n      return reject(executor.rejectionReason = reason);\n    };\n  };\n  return executor;\n}\nvar DeferredPromise = class extends Promise {\n  #executor;\n  resolve;\n  reject;\n  constructor(executor = null) {\n    const deferredExecutor = createDeferredExecutor();\n    super((originalResolve, originalReject) => {\n      deferredExecutor(originalResolve, originalReject);\n      executor?.(deferredExecutor.resolve, deferredExecutor.reject);\n    });\n    this.#executor = deferredExecutor;\n    this.resolve = this.#executor.resolve;\n    this.reject = this.#executor.reject;\n  }\n  get state() {\n    return this.#executor.state;\n  }\n  get rejectionReason() {\n    return this.#executor.rejectionReason;\n  }\n  then(onFulfilled, onRejected) {\n    return this.#decorate(super.then(onFulfilled, onRejected));\n  }\n  catch(onRejected) {\n    return this.#decorate(super.catch(onRejected));\n  }\n  finally(onfinally) {\n    return this.#decorate(super.finally(onfinally));\n  }\n  #decorate(promise) {\n    return Object.defineProperties(promise, {\n      resolve: { configurable: true, value: this.resolve },\n      reject: { configurable: true, value: this.reject }\n    });\n  }\n};\n\n// node_modules/.pnpm/@mswjs+interceptors@0.25.15/node_modules/@mswjs/interceptors/lib/browser/chunk-72HT65NX.mjs\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0;\n    const v = c == \"x\" ? r : r & 3 | 8;\n    return v.toString(16);\n  });\n}\nvar RequestController = class {\n  constructor(request) {\n    this.request = request;\n    this.responsePromise = new DeferredPromise();\n  }\n  respondWith(response) {\n    invariant(\n      this.responsePromise.state === \"pending\",\n      'Failed to respond to \"%s %s\" request: the \"request\" event has already been responded to.',\n      this.request.method,\n      this.request.url\n    );\n    this.responsePromise.resolve(response);\n  }\n};\nfunction toInteractiveRequest(request) {\n  const requestController = new RequestController(request);\n  Reflect.set(\n    request,\n    \"respondWith\",\n    requestController.respondWith.bind(requestController)\n  );\n  return {\n    interactiveRequest: request,\n    requestController\n  };\n}\nasync function emitAsync(emitter, eventName, ...data) {\n  const listners = emitter.listeners(eventName);\n  if (listners.length === 0) {\n    return;\n  }\n  for (const listener of listners) {\n    await listener.apply(emitter, data);\n  }\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.25.15/node_modules/@mswjs/interceptors/lib/browser/chunk-44V5AUD6.mjs\nfunction isPropertyAccessible(obj, key) {\n  try {\n    obj[key];\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction canParseUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch (_error) {\n    return false;\n  }\n}\nvar _FetchInterceptor = class extends Interceptor {\n  constructor() {\n    super(_FetchInterceptor.symbol);\n  }\n  checkEnvironment() {\n    return typeof globalThis !== \"undefined\" && typeof globalThis.fetch !== \"undefined\";\n  }\n  setup() {\n    const pureFetch = globalThis.fetch;\n    invariant(\n      !pureFetch[IS_PATCHED_MODULE],\n      'Failed to patch the \"fetch\" module: already patched.'\n    );\n    globalThis.fetch = async (input, init) => {\n      var _a;\n      const requestId = uuidv4();\n      const resolvedInput = typeof input === \"string\" && typeof location !== \"undefined\" && !canParseUrl(input) ? new URL(input, location.origin) : input;\n      const request = new Request(resolvedInput, init);\n      this.logger.info(\"[%s] %s\", request.method, request.url);\n      const { interactiveRequest, requestController } = toInteractiveRequest(request);\n      this.logger.info(\n        'emitting the \"request\" event for %d listener(s)...',\n        this.emitter.listenerCount(\"request\")\n      );\n      this.emitter.once(\"request\", ({ requestId: pendingRequestId }) => {\n        if (pendingRequestId !== requestId) {\n          return;\n        }\n        if (requestController.responsePromise.state === \"pending\") {\n          requestController.responsePromise.resolve(void 0);\n        }\n      });\n      this.logger.info(\"awaiting for the mocked response...\");\n      const signal = interactiveRequest.signal;\n      const requestAborted = new DeferredPromise();\n      signal.addEventListener(\n        \"abort\",\n        () => {\n          requestAborted.reject(signal.reason);\n        },\n        { once: true }\n      );\n      const resolverResult = await until(async () => {\n        const listenersFinished = emitAsync(this.emitter, \"request\", {\n          request: interactiveRequest,\n          requestId\n        });\n        await Promise.race([\n          requestAborted,\n          // Put the listeners invocation Promise in the same race condition\n          // with the request abort Promise because otherwise awaiting the listeners\n          // would always yield some response (or undefined).\n          listenersFinished,\n          requestController.responsePromise\n        ]);\n        this.logger.info(\"all request listeners have been resolved!\");\n        const mockedResponse2 = await requestController.responsePromise;\n        this.logger.info(\"event.respondWith called with:\", mockedResponse2);\n        return mockedResponse2;\n      });\n      if (requestAborted.state === \"rejected\") {\n        return Promise.reject(requestAborted.rejectionReason);\n      }\n      if (resolverResult.error) {\n        return Promise.reject(createNetworkError(resolverResult.error));\n      }\n      const mockedResponse = resolverResult.data;\n      if (mockedResponse && !((_a = request.signal) == null ? void 0 : _a.aborted)) {\n        this.logger.info(\"received mocked response:\", mockedResponse);\n        if (isPropertyAccessible(mockedResponse, \"type\") && mockedResponse.type === \"error\") {\n          this.logger.info(\n            \"received a network error response, rejecting the request promise...\"\n          );\n          return Promise.reject(createNetworkError(mockedResponse));\n        }\n        const responseClone = mockedResponse.clone();\n        this.emitter.emit(\"response\", {\n          response: responseClone,\n          isMockedResponse: true,\n          request: interactiveRequest,\n          requestId\n        });\n        const response = new Response(mockedResponse.body, mockedResponse);\n        Object.defineProperty(response, \"url\", {\n          writable: false,\n          enumerable: true,\n          configurable: false,\n          value: request.url\n        });\n        return response;\n      }\n      this.logger.info(\"no mocked response received!\");\n      return pureFetch(request).then((response) => {\n        const responseClone = response.clone();\n        this.logger.info(\"original fetch performed\", responseClone);\n        this.emitter.emit(\"response\", {\n          response: responseClone,\n          isMockedResponse: false,\n          request: interactiveRequest,\n          requestId\n        });\n        return response;\n      });\n    };\n    Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.fetch = pureFetch;\n      this.logger.info(\n        'restored native \"globalThis.fetch\"!',\n        globalThis.fetch.name\n      );\n    });\n  }\n};\nvar FetchInterceptor = _FetchInterceptor;\nFetchInterceptor.symbol = Symbol(\"fetch\");\nfunction createNetworkError(cause) {\n  return Object.assign(new TypeError(\"Failed to fetch\"), {\n    cause\n  });\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.25.15/node_modules/@mswjs/interceptors/lib/browser/chunk-DZVB7JEV.mjs\nfunction concatArrayBuffer(left, right) {\n  const result = new Uint8Array(left.byteLength + right.byteLength);\n  result.set(left, 0);\n  result.set(right, left.byteLength);\n  return result;\n}\nvar EventPolyfill = class {\n  constructor(type, options) {\n    this.AT_TARGET = 0;\n    this.BUBBLING_PHASE = 0;\n    this.CAPTURING_PHASE = 0;\n    this.NONE = 0;\n    this.type = \"\";\n    this.srcElement = null;\n    this.currentTarget = null;\n    this.eventPhase = 0;\n    this.isTrusted = true;\n    this.composed = false;\n    this.cancelable = true;\n    this.defaultPrevented = false;\n    this.bubbles = true;\n    this.lengthComputable = true;\n    this.loaded = 0;\n    this.total = 0;\n    this.cancelBubble = false;\n    this.returnValue = true;\n    this.type = type;\n    this.target = (options == null ? void 0 : options.target) || null;\n    this.currentTarget = (options == null ? void 0 : options.currentTarget) || null;\n    this.timeStamp = Date.now();\n  }\n  composedPath() {\n    return [];\n  }\n  initEvent(type, bubbles, cancelable) {\n    this.type = type;\n    this.bubbles = !!bubbles;\n    this.cancelable = !!cancelable;\n  }\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n  stopPropagation() {\n  }\n  stopImmediatePropagation() {\n  }\n};\nvar ProgressEventPolyfill = class extends EventPolyfill {\n  constructor(type, init) {\n    super(type);\n    this.lengthComputable = (init == null ? void 0 : init.lengthComputable) || false;\n    this.composed = (init == null ? void 0 : init.composed) || false;\n    this.loaded = (init == null ? void 0 : init.loaded) || 0;\n    this.total = (init == null ? void 0 : init.total) || 0;\n  }\n};\nvar SUPPORTS_PROGRESS_EVENT = typeof ProgressEvent !== \"undefined\";\nfunction createEvent(target, type, init) {\n  const progressEvents = [\n    \"error\",\n    \"progress\",\n    \"loadstart\",\n    \"loadend\",\n    \"load\",\n    \"timeout\",\n    \"abort\"\n  ];\n  const ProgressEventClass = SUPPORTS_PROGRESS_EVENT ? ProgressEvent : ProgressEventPolyfill;\n  const event = progressEvents.includes(type) ? new ProgressEventClass(type, {\n    lengthComputable: true,\n    loaded: (init == null ? void 0 : init.loaded) || 0,\n    total: (init == null ? void 0 : init.total) || 0\n  }) : new EventPolyfill(type, {\n    target,\n    currentTarget: target\n  });\n  return event;\n}\nfunction findPropertySource(target, propertyName) {\n  if (!(propertyName in target)) {\n    return null;\n  }\n  const hasProperty = Object.prototype.hasOwnProperty.call(target, propertyName);\n  if (hasProperty) {\n    return target;\n  }\n  const prototype = Reflect.getPrototypeOf(target);\n  return prototype ? findPropertySource(prototype, propertyName) : null;\n}\nfunction createProxy(target, options) {\n  const proxy = new Proxy(target, optionsToProxyHandler(options));\n  return proxy;\n}\nfunction optionsToProxyHandler(options) {\n  const { constructorCall, methodCall, getProperty, setProperty } = options;\n  const handler = {};\n  if (typeof constructorCall !== \"undefined\") {\n    handler.construct = function(target, args, newTarget) {\n      const next = Reflect.construct.bind(null, target, args, newTarget);\n      return constructorCall.call(newTarget, args, next);\n    };\n  }\n  handler.set = function(target, propertyName, nextValue) {\n    const next = () => {\n      const propertySource = findPropertySource(target, propertyName) || target;\n      const ownDescriptors = Reflect.getOwnPropertyDescriptor(\n        propertySource,\n        propertyName\n      );\n      if (typeof (ownDescriptors == null ? void 0 : ownDescriptors.set) !== \"undefined\") {\n        ownDescriptors.set.apply(target, [nextValue]);\n        return true;\n      }\n      return Reflect.defineProperty(propertySource, propertyName, {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: nextValue\n      });\n    };\n    if (typeof setProperty !== \"undefined\") {\n      return setProperty.call(target, [propertyName, nextValue], next);\n    }\n    return next();\n  };\n  handler.get = function(target, propertyName, receiver) {\n    const next = () => target[propertyName];\n    const value = typeof getProperty !== \"undefined\" ? getProperty.call(target, [propertyName, receiver], next) : next();\n    if (typeof value === \"function\") {\n      return (...args) => {\n        const next2 = value.bind(target, ...args);\n        if (typeof methodCall !== \"undefined\") {\n          return methodCall.call(target, [propertyName, args], next2);\n        }\n        return next2();\n      };\n    }\n    return value;\n  };\n  return handler;\n}\nfunction isDomParserSupportedType(type) {\n  const supportedTypes = [\n    \"application/xhtml+xml\",\n    \"application/xml\",\n    \"image/svg+xml\",\n    \"text/html\",\n    \"text/xml\"\n  ];\n  return supportedTypes.some((supportedType) => {\n    return type.startsWith(supportedType);\n  });\n}\nfunction parseJson(data) {\n  try {\n    const json = JSON.parse(data);\n    return json;\n  } catch (_) {\n    return null;\n  }\n}\nfunction createResponse(request, body) {\n  const responseBodyOrNull = isResponseWithoutBody(request.status) ? null : body;\n  return new Response(responseBodyOrNull, {\n    status: request.status,\n    statusText: request.statusText,\n    headers: createHeadersFromXMLHttpReqestHeaders(\n      request.getAllResponseHeaders()\n    )\n  });\n}\nfunction createHeadersFromXMLHttpReqestHeaders(headersString) {\n  const headers = new Headers();\n  const lines = headersString.split(/[\\r\\n]+/);\n  for (const line of lines) {\n    if (line.trim() === \"\") {\n      continue;\n    }\n    const [name, ...parts] = line.split(\": \");\n    const value = parts.join(\": \");\n    headers.append(name, value);\n  }\n  return headers;\n}\nvar IS_MOCKED_RESPONSE = Symbol(\"isMockedResponse\");\nvar IS_NODE2 = isNodeProcess();\nvar XMLHttpRequestController = class {\n  constructor(initialRequest, logger) {\n    this.initialRequest = initialRequest;\n    this.logger = logger;\n    this.method = \"GET\";\n    this.url = null;\n    this.events = /* @__PURE__ */ new Map();\n    this.requestId = uuidv4();\n    this.requestHeaders = new Headers();\n    this.responseBuffer = new Uint8Array();\n    this.request = createProxy(initialRequest, {\n      setProperty: ([propertyName, nextValue], invoke) => {\n        switch (propertyName) {\n          case \"ontimeout\": {\n            const eventName = propertyName.slice(\n              2\n            );\n            this.request.addEventListener(eventName, nextValue);\n            return invoke();\n          }\n          default: {\n            return invoke();\n          }\n        }\n      },\n      methodCall: ([methodName, args], invoke) => {\n        var _a;\n        switch (methodName) {\n          case \"open\": {\n            const [method, url] = args;\n            if (typeof url === \"undefined\") {\n              this.method = \"GET\";\n              this.url = toAbsoluteUrl(method);\n            } else {\n              this.method = method;\n              this.url = toAbsoluteUrl(url);\n            }\n            this.logger = this.logger.extend(`${this.method} ${this.url.href}`);\n            this.logger.info(\"open\", this.method, this.url.href);\n            return invoke();\n          }\n          case \"addEventListener\": {\n            const [eventName, listener] = args;\n            this.registerEvent(eventName, listener);\n            this.logger.info(\"addEventListener\", eventName, listener);\n            return invoke();\n          }\n          case \"setRequestHeader\": {\n            const [name, value] = args;\n            this.requestHeaders.set(name, value);\n            this.logger.info(\"setRequestHeader\", name, value);\n            return invoke();\n          }\n          case \"send\": {\n            const [body] = args;\n            if (body != null) {\n              this.requestBody = typeof body === \"string\" ? encodeBuffer(body) : body;\n            }\n            this.request.addEventListener(\"load\", () => {\n              if (typeof this.onResponse !== \"undefined\") {\n                const fetchResponse = createResponse(\n                  this.request,\n                  /**\n                   * The `response` property is the right way to read\n                   * the ambiguous response body, as the request's \"responseType\" may differ.\n                   * @see https://xhr.spec.whatwg.org/#the-response-attribute\n                   */\n                  this.request.response\n                );\n                this.onResponse.call(this, {\n                  response: fetchResponse,\n                  isMockedResponse: IS_MOCKED_RESPONSE in this.request,\n                  request: fetchRequest,\n                  requestId: this.requestId\n                });\n              }\n            });\n            const fetchRequest = this.toFetchApiRequest();\n            const onceRequestSettled = ((_a = this.onRequest) == null ? void 0 : _a.call(this, {\n              request: fetchRequest,\n              requestId: this.requestId\n            })) || Promise.resolve();\n            onceRequestSettled.finally(() => {\n              if (this.request.readyState < this.request.LOADING) {\n                this.logger.info(\n                  \"request callback settled but request has not been handled (readystate %d), performing as-is...\",\n                  this.request.readyState\n                );\n                if (IS_NODE2) {\n                  this.request.setRequestHeader(\"X-Request-Id\", this.requestId);\n                }\n                return invoke();\n              }\n            });\n            break;\n          }\n          default: {\n            return invoke();\n          }\n        }\n      }\n    });\n  }\n  registerEvent(eventName, listener) {\n    const prevEvents = this.events.get(eventName) || [];\n    const nextEvents = prevEvents.concat(listener);\n    this.events.set(eventName, nextEvents);\n    this.logger.info('registered event \"%s\"', eventName, listener);\n  }\n  /**\n   * Responds to the current request with the given\n   * Fetch API `Response` instance.\n   */\n  respondWith(response) {\n    this.logger.info(\n      \"responding with a mocked response: %d %s\",\n      response.status,\n      response.statusText\n    );\n    define(this.request, IS_MOCKED_RESPONSE, true);\n    define(this.request, \"status\", response.status);\n    define(this.request, \"statusText\", response.statusText);\n    define(this.request, \"responseURL\", this.url.href);\n    this.request.getResponseHeader = new Proxy(this.request.getResponseHeader, {\n      apply: (_, __, args) => {\n        this.logger.info(\"getResponseHeader\", args[0]);\n        if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n          this.logger.info(\"headers not received yet, returning null\");\n          return null;\n        }\n        const headerValue = response.headers.get(args[0]);\n        this.logger.info(\n          'resolved response header \"%s\" to',\n          args[0],\n          headerValue\n        );\n        return headerValue;\n      }\n    });\n    this.request.getAllResponseHeaders = new Proxy(\n      this.request.getAllResponseHeaders,\n      {\n        apply: () => {\n          this.logger.info(\"getAllResponseHeaders\");\n          if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n            this.logger.info(\"headers not received yet, returning empty string\");\n            return \"\";\n          }\n          const headersList = Array.from(response.headers.entries());\n          const allHeaders = headersList.map(([headerName, headerValue]) => {\n            return `${headerName}: ${headerValue}`;\n          }).join(\"\\r\\n\");\n          this.logger.info(\"resolved all response headers to\", allHeaders);\n          return allHeaders;\n        }\n      }\n    );\n    Object.defineProperties(this.request, {\n      response: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.response\n      },\n      responseText: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseText\n      },\n      responseXML: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseXML\n      }\n    });\n    const totalResponseBodyLength = response.headers.has(\"Content-Length\") ? Number(response.headers.get(\"Content-Length\")) : (\n      /**\n       * @todo Infer the response body length from the response body.\n       */\n      void 0\n    );\n    this.logger.info(\"calculated response body length\", totalResponseBodyLength);\n    this.trigger(\"loadstart\", {\n      loaded: 0,\n      total: totalResponseBodyLength\n    });\n    this.setReadyState(this.request.HEADERS_RECEIVED);\n    this.setReadyState(this.request.LOADING);\n    const finalizeResponse = () => {\n      this.logger.info(\"finalizing the mocked response...\");\n      this.setReadyState(this.request.DONE);\n      this.trigger(\"load\", {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n      this.trigger(\"loadend\", {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n    };\n    if (response.body) {\n      this.logger.info(\"mocked response has body, streaming...\");\n      const reader = response.body.getReader();\n      const readNextResponseBodyChunk = async () => {\n        const { value, done } = await reader.read();\n        if (done) {\n          this.logger.info(\"response body stream done!\");\n          finalizeResponse();\n          return;\n        }\n        if (value) {\n          this.logger.info(\"read response body chunk:\", value);\n          this.responseBuffer = concatArrayBuffer(this.responseBuffer, value);\n          this.trigger(\"progress\", {\n            loaded: this.responseBuffer.byteLength,\n            total: totalResponseBodyLength\n          });\n        }\n        readNextResponseBodyChunk();\n      };\n      readNextResponseBodyChunk();\n    } else {\n      finalizeResponse();\n    }\n  }\n  responseBufferToText() {\n    return decodeBuffer(this.responseBuffer);\n  }\n  get response() {\n    this.logger.info(\n      \"getResponse (responseType: %s)\",\n      this.request.responseType\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    switch (this.request.responseType) {\n      case \"json\": {\n        const responseJson = parseJson(this.responseBufferToText());\n        this.logger.info(\"resolved response JSON\", responseJson);\n        return responseJson;\n      }\n      case \"arraybuffer\": {\n        const arrayBuffer = toArrayBuffer(this.responseBuffer);\n        this.logger.info(\"resolved response ArrayBuffer\", arrayBuffer);\n        return arrayBuffer;\n      }\n      case \"blob\": {\n        const mimeType = this.request.getResponseHeader(\"Content-Type\") || \"text/plain\";\n        const responseBlob = new Blob([this.responseBufferToText()], {\n          type: mimeType\n        });\n        this.logger.info(\n          \"resolved response Blob (mime type: %s)\",\n          responseBlob,\n          mimeType\n        );\n        return responseBlob;\n      }\n      default: {\n        const responseText = this.responseBufferToText();\n        this.logger.info(\n          'resolving \"%s\" response type as text',\n          this.request.responseType,\n          responseText\n        );\n        return responseText;\n      }\n    }\n  }\n  get responseText() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"text\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.LOADING && this.request.readyState !== this.request.DONE) {\n      return \"\";\n    }\n    const responseText = this.responseBufferToText();\n    this.logger.info('getResponseText: \"%s\"', responseText);\n    return responseText;\n  }\n  get responseXML() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"document\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    const contentType = this.request.getResponseHeader(\"Content-Type\") || \"\";\n    if (typeof DOMParser === \"undefined\") {\n      console.warn(\n        \"Cannot retrieve XMLHttpRequest response body as XML: DOMParser is not defined. You are likely using an environment that is not browser or does not polyfill browser globals correctly.\"\n      );\n      return null;\n    }\n    if (isDomParserSupportedType(contentType)) {\n      return new DOMParser().parseFromString(\n        this.responseBufferToText(),\n        contentType\n      );\n    }\n    return null;\n  }\n  errorWith(error2) {\n    this.logger.info(\"responding with an error\");\n    this.setReadyState(this.request.DONE);\n    this.trigger(\"error\");\n    this.trigger(\"loadend\");\n  }\n  /**\n   * Transitions this request's `readyState` to the given one.\n   */\n  setReadyState(nextReadyState) {\n    this.logger.info(\n      \"setReadyState: %d -> %d\",\n      this.request.readyState,\n      nextReadyState\n    );\n    if (this.request.readyState === nextReadyState) {\n      this.logger.info(\"ready state identical, skipping transition...\");\n      return;\n    }\n    define(this.request, \"readyState\", nextReadyState);\n    this.logger.info(\"set readyState to: %d\", nextReadyState);\n    if (nextReadyState !== this.request.UNSENT) {\n      this.logger.info('triggerring \"readystatechange\" event...');\n      this.trigger(\"readystatechange\");\n    }\n  }\n  /**\n   * Triggers given event on the `XMLHttpRequest` instance.\n   */\n  trigger(eventName, options) {\n    const callback = this.request[`on${eventName}`];\n    const event = createEvent(this.request, eventName, options);\n    this.logger.info('trigger \"%s\"', eventName, options || \"\");\n    if (typeof callback === \"function\") {\n      this.logger.info('found a direct \"%s\" callback, calling...', eventName);\n      callback.call(this.request, event);\n    }\n    for (const [registeredEventName, listeners] of this.events) {\n      if (registeredEventName === eventName) {\n        this.logger.info(\n          'found %d listener(s) for \"%s\" event, calling...',\n          listeners.length,\n          eventName\n        );\n        listeners.forEach((listener) => listener.call(this.request, event));\n      }\n    }\n  }\n  /**\n   * Converts this `XMLHttpRequest` instance into a Fetch API `Request` instance.\n   */\n  toFetchApiRequest() {\n    this.logger.info(\"converting request to a Fetch API Request...\");\n    const fetchRequest = new Request(this.url.href, {\n      method: this.method,\n      headers: this.requestHeaders,\n      /**\n       * @see https://xhr.spec.whatwg.org/#cross-origin-credentials\n       */\n      credentials: this.request.withCredentials ? \"include\" : \"same-origin\",\n      body: [\"GET\", \"HEAD\"].includes(this.method) ? null : this.requestBody\n    });\n    const proxyHeaders = createProxy(fetchRequest.headers, {\n      methodCall: ([methodName, args], invoke) => {\n        switch (methodName) {\n          case \"append\":\n          case \"set\": {\n            const [headerName, headerValue] = args;\n            this.request.setRequestHeader(headerName, headerValue);\n            break;\n          }\n          case \"delete\": {\n            const [headerName] = args;\n            console.warn(\n              `XMLHttpRequest: Cannot remove a \"${headerName}\" header from the Fetch API representation of the \"${fetchRequest.method} ${fetchRequest.url}\" request. XMLHttpRequest headers cannot be removed.`\n            );\n            break;\n          }\n        }\n        return invoke();\n      }\n    });\n    define(fetchRequest, \"headers\", proxyHeaders);\n    this.logger.info(\"converted request to a Fetch API Request!\", fetchRequest);\n    return fetchRequest;\n  }\n};\nfunction toAbsoluteUrl(url) {\n  if (typeof location === \"undefined\") {\n    return new URL(url);\n  }\n  return new URL(url.toString(), location.href);\n}\nfunction define(target, property, value) {\n  Reflect.defineProperty(target, property, {\n    // Ensure writable properties to allow redefining readonly properties.\n    writable: true,\n    enumerable: true,\n    value\n  });\n}\nfunction createXMLHttpRequestProxy({\n  emitter,\n  logger\n}) {\n  const XMLHttpRequestProxy = new Proxy(globalThis.XMLHttpRequest, {\n    construct(target, args, newTarget) {\n      logger.info(\"constructed new XMLHttpRequest\");\n      const originalRequest = Reflect.construct(target, args, newTarget);\n      const prototypeDescriptors = Object.getOwnPropertyDescriptors(\n        target.prototype\n      );\n      for (const propertyName in prototypeDescriptors) {\n        Reflect.defineProperty(\n          originalRequest,\n          propertyName,\n          prototypeDescriptors[propertyName]\n        );\n      }\n      const xhrRequestController = new XMLHttpRequestController(\n        originalRequest,\n        logger\n      );\n      xhrRequestController.onRequest = async function({ request, requestId }) {\n        const { interactiveRequest, requestController } = toInteractiveRequest(request);\n        this.logger.info(\"awaiting mocked response...\");\n        emitter.once(\"request\", ({ requestId: pendingRequestId }) => {\n          if (pendingRequestId !== requestId) {\n            return;\n          }\n          if (requestController.responsePromise.state === \"pending\") {\n            requestController.respondWith(void 0);\n          }\n        });\n        const resolverResult = await until(async () => {\n          this.logger.info(\n            'emitting the \"request\" event for %s listener(s)...',\n            emitter.listenerCount(\"request\")\n          );\n          await emitAsync(emitter, \"request\", {\n            request: interactiveRequest,\n            requestId\n          });\n          this.logger.info('all \"request\" listeners settled!');\n          const mockedResponse2 = await requestController.responsePromise;\n          this.logger.info(\"event.respondWith called with:\", mockedResponse2);\n          return mockedResponse2;\n        });\n        if (resolverResult.error) {\n          this.logger.info(\n            \"request listener threw an exception, aborting request...\",\n            resolverResult.error\n          );\n          xhrRequestController.errorWith(resolverResult.error);\n          return;\n        }\n        const mockedResponse = resolverResult.data;\n        if (typeof mockedResponse !== \"undefined\") {\n          this.logger.info(\n            \"received mocked response: %d %s\",\n            mockedResponse.status,\n            mockedResponse.statusText\n          );\n          if (mockedResponse.type === \"error\") {\n            this.logger.info(\n              \"received a network error response, rejecting the request promise...\"\n            );\n            xhrRequestController.errorWith(new TypeError(\"Network error\"));\n            return;\n          }\n          return xhrRequestController.respondWith(mockedResponse);\n        }\n        this.logger.info(\n          \"no mocked response received, performing request as-is...\"\n        );\n      };\n      xhrRequestController.onResponse = async function({\n        response,\n        isMockedResponse,\n        request,\n        requestId\n      }) {\n        this.logger.info(\n          'emitting the \"response\" event for %s listener(s)...',\n          emitter.listenerCount(\"response\")\n        );\n        emitter.emit(\"response\", {\n          response,\n          isMockedResponse,\n          request,\n          requestId\n        });\n      };\n      return xhrRequestController.request;\n    }\n  });\n  return XMLHttpRequestProxy;\n}\nvar _XMLHttpRequestInterceptor = class extends Interceptor {\n  constructor() {\n    super(_XMLHttpRequestInterceptor.interceptorSymbol);\n  }\n  checkEnvironment() {\n    return typeof globalThis.XMLHttpRequest !== \"undefined\";\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info('patching \"XMLHttpRequest\" module...');\n    const PureXMLHttpRequest = globalThis.XMLHttpRequest;\n    invariant(\n      !PureXMLHttpRequest[IS_PATCHED_MODULE],\n      'Failed to patch the \"XMLHttpRequest\" module: already patched.'\n    );\n    globalThis.XMLHttpRequest = createXMLHttpRequestProxy({\n      emitter: this.emitter,\n      logger: this.logger\n    });\n    logger.info(\n      'native \"XMLHttpRequest\" module patched!',\n      globalThis.XMLHttpRequest.name\n    );\n    Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.XMLHttpRequest = PureXMLHttpRequest;\n      logger.info(\n        'native \"XMLHttpRequest\" module restored!',\n        globalThis.XMLHttpRequest.name\n      );\n    });\n  }\n};\nvar XMLHttpRequestInterceptor = _XMLHttpRequestInterceptor;\nXMLHttpRequestInterceptor.interceptorSymbol = Symbol(\"xhr\");\n\n// src/browser/setupWorker/start/createFallbackRequestListener.ts\nimport { handleRequest as handleRequest2 } from '../core/utils/handleRequest.mjs';\nfunction createFallbackRequestListener(context, options) {\n  const interceptor = new BatchInterceptor({\n    name: \"fallback\",\n    interceptors: [new FetchInterceptor(), new XMLHttpRequestInterceptor()]\n  });\n  interceptor.on(\"request\", async ({ request, requestId }) => {\n    const requestCloneForLogs = request.clone();\n    const response = await handleRequest2(\n      request,\n      requestId,\n      context.requestHandlers,\n      options,\n      context.emitter,\n      {\n        onMockedResponse(_, { handler, parsedResult }) {\n          if (!options.quiet) {\n            context.emitter.once(\"response:mocked\", ({ response: response2 }) => {\n              handler.log({\n                request: requestCloneForLogs,\n                response: response2,\n                parsedResult\n              });\n            });\n          }\n        }\n      }\n    );\n    if (response) {\n      request.respondWith(response);\n    }\n  });\n  interceptor.on(\n    \"response\",\n    ({ response, isMockedResponse, request, requestId }) => {\n      context.emitter.emit(\n        isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n        {\n          response,\n          request,\n          requestId\n        }\n      );\n    }\n  );\n  interceptor.apply();\n  return interceptor;\n}\n\n// src/browser/setupWorker/start/createFallbackStart.ts\nfunction createFallbackStart(context) {\n  return async function start(options) {\n    context.fallbackInterceptor = createFallbackRequestListener(\n      context,\n      options\n    );\n    printStartMessage({\n      message: \"Mocking enabled (fallback mode).\",\n      quiet: options.quiet\n    });\n    return void 0;\n  };\n}\n\n// src/browser/setupWorker/stop/createFallbackStop.ts\nfunction createFallbackStop(context) {\n  return function stop() {\n    context.fallbackInterceptor?.dispose();\n    printStopMessage({ quiet: context.startOptions?.quiet });\n  };\n}\n\n// src/browser/setupWorker/setupWorker.ts\nimport { devUtils as devUtils9 } from '../core/utils/internal/devUtils.mjs';\nimport { SetupApi } from '../core/SetupApi.mjs';\nimport { mergeRight as mergeRight2 } from '../core/utils/internal/mergeRight.mjs';\n\n// src/browser/utils/supportsReadableStreamTransfer.ts\nfunction supportsReadableStreamTransfer() {\n  try {\n    const stream = new ReadableStream({\n      start: (controller) => controller.close()\n    });\n    const message = new MessageChannel();\n    message.port1.postMessage(stream, [stream]);\n    return true;\n  } catch (error2) {\n    return false;\n  }\n}\n\n// src/browser/setupWorker/setupWorker.ts\nvar SetupWorkerApi = class extends SetupApi {\n  context;\n  startHandler = null;\n  stopHandler = null;\n  listeners;\n  constructor(...handlers) {\n    super(...handlers);\n    invariant(\n      !isNodeProcess(),\n      devUtils9.formatMessage(\n        \"Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.\"\n      )\n    );\n    this.listeners = [];\n    this.context = this.createWorkerContext();\n  }\n  createWorkerContext() {\n    const context = {\n      // Mocking is not considered enabled until the worker\n      // signals back the successful activation event.\n      isMockingEnabled: false,\n      startOptions: null,\n      worker: null,\n      registration: null,\n      requestHandlers: this.currentHandlers,\n      requests: /* @__PURE__ */ new Map(),\n      emitter: this.emitter,\n      workerChannel: {\n        on: (eventType, callback) => {\n          this.context.events.addListener(navigator.serviceWorker, \"message\", (event) => {\n            if (event.source !== this.context.worker) {\n              return;\n            }\n            const message = event.data;\n            if (!message) {\n              return;\n            }\n            if (message.type === eventType) {\n              callback(event, message);\n            }\n          });\n        },\n        send: (type) => {\n          this.context.worker?.postMessage(type);\n        }\n      },\n      events: {\n        addListener: (target, eventType, callback) => {\n          target.addEventListener(eventType, callback);\n          this.listeners.push({\n            eventType,\n            target,\n            callback\n          });\n          return () => {\n            target.removeEventListener(eventType, callback);\n          };\n        },\n        removeAllListeners: () => {\n          for (const { target, eventType, callback } of this.listeners) {\n            target.removeEventListener(eventType, callback);\n          }\n          this.listeners = [];\n        },\n        once: (eventType) => {\n          const bindings = [];\n          return new Promise((resolve, reject) => {\n            const handleIncomingMessage = (event) => {\n              try {\n                const message = event.data;\n                if (message.type === eventType) {\n                  resolve(message);\n                }\n              } catch (error2) {\n                reject(error2);\n              }\n            };\n            bindings.push(\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"message\",\n                handleIncomingMessage\n              ),\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"messageerror\",\n                reject\n              )\n            );\n          }).finally(() => {\n            bindings.forEach((unbind) => unbind());\n          });\n        }\n      },\n      supports: {\n        serviceWorkerApi: !(\"serviceWorker\" in navigator) || location.protocol === \"file:\",\n        readableStreamTransfer: supportsReadableStreamTransfer()\n      }\n    };\n    Object.defineProperties(context, {\n      requestHandlers: {\n        get: () => this.currentHandlers\n      }\n    });\n    this.startHandler = context.supports.serviceWorkerApi ? createFallbackStart(context) : createStartHandler(context);\n    this.stopHandler = context.supports.serviceWorkerApi ? createFallbackStop(context) : createStop(context);\n    return context;\n  }\n  async start(options = {}) {\n    if (options.waitUntilReady === true) {\n      devUtils9.warn(\n        'The \"waitUntilReady\" option has been deprecated. Please remove it from this \"worker.start()\" call. Follow the recommended Browser integration (https://mswjs.io/docs/integrations/browser) to eliminate any race conditions between the Service Worker registration and any requests made by your application on initial render.'\n      );\n    }\n    this.context.startOptions = mergeRight2(\n      DEFAULT_START_OPTIONS,\n      options\n    );\n    return await this.startHandler(this.context.startOptions, options);\n  }\n  stop() {\n    super.dispose();\n    this.context.events.removeAllListeners();\n    this.context.emitter.removeAllListeners();\n    this.stopHandler();\n  }\n};\nfunction setupWorker(...handlers) {\n  return new SetupWorkerApi(...handlers);\n}\nexport {\n  SetupWorkerApi,\n  setupWorker\n};\n//# sourceMappingURL=index.mjs.map","import { invariant } from \"outvariant\";\nimport { devUtils } from './devUtils.mjs';\nfunction checkGlobals() {\n  invariant(\n    typeof URL !== \"undefined\",\n    devUtils.formatMessage(\n      `Global \"URL\" class is not defined. This likely means that you're running MSW in an environment that doesn't support all Node.js standard API (e.g. React Native). If that's the case, please use an appropriate polyfill for the \"URL\" class, like \"react-native-url-polyfill\".`\n    )\n  );\n}\nexport {\n  checkGlobals\n};\n//# sourceMappingURL=checkGlobals.mjs.map","function isStringEqual(actual, expected) {\n  return actual.toLowerCase() === expected.toLowerCase();\n}\nexport {\n  isStringEqual\n};\n//# sourceMappingURL=isStringEqual.mjs.map","var StatusCodeColor = /* @__PURE__ */ ((StatusCodeColor2) => {\n  StatusCodeColor2[\"Success\"] = \"#69AB32\";\n  StatusCodeColor2[\"Warning\"] = \"#F0BB4B\";\n  StatusCodeColor2[\"Danger\"] = \"#E95F5D\";\n  return StatusCodeColor2;\n})(StatusCodeColor || {});\nfunction getStatusCodeColor(status) {\n  if (status < 300) {\n    return \"#69AB32\" /* Success */;\n  }\n  if (status < 400) {\n    return \"#F0BB4B\" /* Warning */;\n  }\n  return \"#E95F5D\" /* Danger */;\n}\nexport {\n  StatusCodeColor,\n  getStatusCodeColor\n};\n//# sourceMappingURL=getStatusCodeColor.mjs.map","function getTimestamp() {\n  const now = /* @__PURE__ */ new Date();\n  return [now.getHours(), now.getMinutes(), now.getSeconds()].map(String).map((chunk) => chunk.slice(0, 2)).map((chunk) => chunk.padStart(2, \"0\")).join(\":\");\n}\nexport {\n  getTimestamp\n};\n//# sourceMappingURL=getTimestamp.mjs.map","async function serializeRequest(request) {\n  const requestClone = request.clone();\n  const requestText = await requestClone.text();\n  return {\n    url: new URL(request.url),\n    method: request.method,\n    headers: Object.fromEntries(request.headers.entries()),\n    body: requestText\n  };\n}\nexport {\n  serializeRequest\n};\n//# sourceMappingURL=serializeRequest.mjs.map","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/statuses/codes.json\nvar require_codes = __commonJS({\n  \"node_modules/statuses/codes.json\"(exports, module) {\n    module.exports = {\n      \"100\": \"Continue\",\n      \"101\": \"Switching Protocols\",\n      \"102\": \"Processing\",\n      \"103\": \"Early Hints\",\n      \"200\": \"OK\",\n      \"201\": \"Created\",\n      \"202\": \"Accepted\",\n      \"203\": \"Non-Authoritative Information\",\n      \"204\": \"No Content\",\n      \"205\": \"Reset Content\",\n      \"206\": \"Partial Content\",\n      \"207\": \"Multi-Status\",\n      \"208\": \"Already Reported\",\n      \"226\": \"IM Used\",\n      \"300\": \"Multiple Choices\",\n      \"301\": \"Moved Permanently\",\n      \"302\": \"Found\",\n      \"303\": \"See Other\",\n      \"304\": \"Not Modified\",\n      \"305\": \"Use Proxy\",\n      \"307\": \"Temporary Redirect\",\n      \"308\": \"Permanent Redirect\",\n      \"400\": \"Bad Request\",\n      \"401\": \"Unauthorized\",\n      \"402\": \"Payment Required\",\n      \"403\": \"Forbidden\",\n      \"404\": \"Not Found\",\n      \"405\": \"Method Not Allowed\",\n      \"406\": \"Not Acceptable\",\n      \"407\": \"Proxy Authentication Required\",\n      \"408\": \"Request Timeout\",\n      \"409\": \"Conflict\",\n      \"410\": \"Gone\",\n      \"411\": \"Length Required\",\n      \"412\": \"Precondition Failed\",\n      \"413\": \"Payload Too Large\",\n      \"414\": \"URI Too Long\",\n      \"415\": \"Unsupported Media Type\",\n      \"416\": \"Range Not Satisfiable\",\n      \"417\": \"Expectation Failed\",\n      \"418\": \"I'm a Teapot\",\n      \"421\": \"Misdirected Request\",\n      \"422\": \"Unprocessable Entity\",\n      \"423\": \"Locked\",\n      \"424\": \"Failed Dependency\",\n      \"425\": \"Too Early\",\n      \"426\": \"Upgrade Required\",\n      \"428\": \"Precondition Required\",\n      \"429\": \"Too Many Requests\",\n      \"431\": \"Request Header Fields Too Large\",\n      \"451\": \"Unavailable For Legal Reasons\",\n      \"500\": \"Internal Server Error\",\n      \"501\": \"Not Implemented\",\n      \"502\": \"Bad Gateway\",\n      \"503\": \"Service Unavailable\",\n      \"504\": \"Gateway Timeout\",\n      \"505\": \"HTTP Version Not Supported\",\n      \"506\": \"Variant Also Negotiates\",\n      \"507\": \"Insufficient Storage\",\n      \"508\": \"Loop Detected\",\n      \"509\": \"Bandwidth Limit Exceeded\",\n      \"510\": \"Not Extended\",\n      \"511\": \"Network Authentication Required\"\n    };\n  }\n});\n\n// node_modules/statuses/index.js\nvar require_statuses = __commonJS({\n  \"node_modules/statuses/index.js\"(exports, module) {\n    \"use strict\";\n    var codes = require_codes();\n    module.exports = status2;\n    status2.message = codes;\n    status2.code = createMessageToStatusCodeMap(codes);\n    status2.codes = createStatusCodeList(codes);\n    status2.redirect = {\n      300: true,\n      301: true,\n      302: true,\n      303: true,\n      305: true,\n      307: true,\n      308: true\n    };\n    status2.empty = {\n      204: true,\n      205: true,\n      304: true\n    };\n    status2.retry = {\n      502: true,\n      503: true,\n      504: true\n    };\n    function createMessageToStatusCodeMap(codes2) {\n      var map = {};\n      Object.keys(codes2).forEach(function forEachCode(code) {\n        var message = codes2[code];\n        var status3 = Number(code);\n        map[message.toLowerCase()] = status3;\n      });\n      return map;\n    }\n    function createStatusCodeList(codes2) {\n      return Object.keys(codes2).map(function mapCode(code) {\n        return Number(code);\n      });\n    }\n    function getStatusCode(message) {\n      var msg = message.toLowerCase();\n      if (!Object.prototype.hasOwnProperty.call(status2.code, msg)) {\n        throw new Error('invalid status message: \"' + message + '\"');\n      }\n      return status2.code[msg];\n    }\n    function getStatusMessage(code) {\n      if (!Object.prototype.hasOwnProperty.call(status2.message, code)) {\n        throw new Error(\"invalid status code: \" + code);\n      }\n      return status2.message[code];\n    }\n    function status2(code) {\n      if (typeof code === \"number\") {\n        return getStatusMessage(code);\n      }\n      if (typeof code !== \"string\") {\n        throw new TypeError(\"code must be a number or string\");\n      }\n      var n = parseInt(code, 10);\n      if (!isNaN(n)) {\n        return getStatusMessage(n);\n      }\n      return getStatusCode(code);\n    }\n  }\n});\n\n// source.js\nvar import_statuses = __toESM(require_statuses(), 1);\nvar source_default = import_statuses.default;\nexport {\n  source_default as default\n};\n/*! Bundled license information:\n\nstatuses/index.js:\n  (*!\n   * statuses\n   * Copyright(c) 2014 Jonathan Ong\n   * Copyright(c) 2016 Douglas Christopher Wilson\n   * MIT Licensed\n   *)\n*/\n","import statuses from \"@bundled-es-modules/statuses\";\nconst { message } = statuses;\nasync function serializeResponse(response) {\n  const responseClone = response.clone();\n  const responseText = await responseClone.text();\n  const responseStatus = responseClone.status || 200;\n  const responseStatusText = responseClone.statusText || message[responseStatus] || \"OK\";\n  return {\n    status: responseStatus,\n    statusText: responseStatusText,\n    headers: Object.fromEntries(responseClone.headers.entries()),\n    body: responseText\n  };\n}\nexport {\n  serializeResponse\n};\n//# sourceMappingURL=serializeResponse.mjs.map","/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \".concat(i));\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \".concat(j));\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \".concat(j));\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \".concat(i));\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \".concat(i));\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\".concat(escapeString(options.delimiter || \"/#?\"), \"]+?\");\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\".concat(token.pattern, \")$\"), reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not repeat, but got an array\"));\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not be empty\"));\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to be \").concat(typeOfMessage));\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while (execResult) {\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\",\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d, _e = options.delimiter, delimiter = _e === void 0 ? \"/#?\" : _e, _f = options.endsWith, endsWith = _f === void 0 ? \"\" : _f;\n    var endsWithRe = \"[\".concat(escapeString(endsWith), \"]|$\");\n    var delimiterRe = \"[\".concat(escapeString(delimiter), \"]\");\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n                    }\n                    else {\n                        route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n                    }\n                }\n                else {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        route += \"((?:\".concat(token.pattern, \")\").concat(token.modifier, \")\");\n                    }\n                    else {\n                        route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n                    }\n                }\n            }\n            else {\n                route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += \"\".concat(delimiterRe, \"?\");\n        route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWithRe, \")\");\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n            : endToken === undefined;\n        if (!strict) {\n            route += \"(?:\".concat(delimiterRe, \"(?=\").concat(endsWithRe, \"))?\");\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\".concat(delimiterRe, \"|\").concat(endsWithRe, \")\");\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n//# sourceMappingURL=index.js.map","// src/utils/bufferUtils.ts\nvar encoder = new TextEncoder();\nfunction encodeBuffer(text) {\n  return encoder.encode(text);\n}\nfunction decodeBuffer(buffer, encoding) {\n  const decoder = new TextDecoder(encoding);\n  return decoder.decode(buffer);\n}\nfunction toArrayBuffer(array) {\n  return array.buffer.slice(\n    array.byteOffset,\n    array.byteOffset + array.byteLength\n  );\n}\n\n// src/utils/responseUtils.ts\nvar RESPONSE_STATUS_CODES_WITHOUT_BODY = /* @__PURE__ */ new Set([\n  101,\n  103,\n  204,\n  205,\n  304\n]);\nfunction isResponseWithoutBody(status) {\n  return RESPONSE_STATUS_CODES_WITHOUT_BODY.has(status);\n}\n\nexport {\n  encodeBuffer,\n  decodeBuffer,\n  toArrayBuffer,\n  isResponseWithoutBody\n};\n//# sourceMappingURL=chunk-UJZOJSMP.mjs.map","// src/index.ts\nfunction isNodeProcess() {\n  if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    return true;\n  }\n  if (typeof process !== \"undefined\") {\n    const type = process.type;\n    if (type === \"renderer\" || type === \"worker\") {\n      return false;\n    }\n    return !!(process.versions && process.versions.node);\n  }\n  return false;\n}\nexport {\n  isNodeProcess\n};\n//# sourceMappingURL=index.mjs.map","import {\n  decodeBuffer,\n  encodeBuffer,\n  isResponseWithoutBody\n} from \"./chunk-UJZOJSMP.mjs\";\nimport {\n  IS_PATCHED_MODULE,\n  Interceptor,\n  InterceptorReadyState,\n  deleteGlobalSymbol,\n  getGlobalSymbol\n} from \"./chunk-WZQN3FMY.mjs\";\n\n// src/BatchInterceptor.ts\nvar BatchInterceptor = class extends Interceptor {\n  constructor(options) {\n    BatchInterceptor.symbol = Symbol(options.name);\n    super(BatchInterceptor.symbol);\n    this.interceptors = options.interceptors;\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info(\"applying all %d interceptors...\", this.interceptors.length);\n    for (const interceptor of this.interceptors) {\n      logger.info('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      logger.info(\"adding interceptor dispose subscription\");\n      this.subscriptions.push(() => interceptor.dispose());\n    }\n  }\n  on(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.on(event, listener);\n    }\n    return this;\n  }\n  once(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.once(event, listener);\n    }\n    return this;\n  }\n  off(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.off(event, listener);\n    }\n    return this;\n  }\n  removeAllListeners(event) {\n    for (const interceptors of this.interceptors) {\n      interceptors.removeAllListeners(event);\n    }\n    return this;\n  }\n};\n\n// src/utils/getCleanUrl.ts\nfunction getCleanUrl(url, isAbsolute = true) {\n  return [isAbsolute && url.origin, url.pathname].filter(Boolean).join(\"\");\n}\nexport {\n  BatchInterceptor,\n  IS_PATCHED_MODULE,\n  Interceptor,\n  InterceptorReadyState,\n  decodeBuffer,\n  deleteGlobalSymbol,\n  encodeBuffer,\n  getCleanUrl,\n  getGlobalSymbol,\n  isResponseWithoutBody\n};\n//# sourceMappingURL=index.mjs.map","const REDUNDANT_CHARACTERS_EXP = /[\\?|#].*$/g;\nfunction getSearchParams(path) {\n  return new URL(`/${path}`, \"http://localhost\").searchParams;\n}\nfunction cleanUrl(path) {\n  return path.replace(REDUNDANT_CHARACTERS_EXP, \"\");\n}\nexport {\n  cleanUrl,\n  getSearchParams\n};\n//# sourceMappingURL=cleanUrl.mjs.map","function isAbsoluteUrl(url) {\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n}\nexport {\n  isAbsoluteUrl\n};\n//# sourceMappingURL=isAbsoluteUrl.mjs.map","import { isAbsoluteUrl } from './isAbsoluteUrl.mjs';\nfunction getAbsoluteUrl(path, baseUrl) {\n  if (isAbsoluteUrl(path)) {\n    return path;\n  }\n  if (path.startsWith(\"*\")) {\n    return path;\n  }\n  const origin = baseUrl || typeof document !== \"undefined\" && document.baseURI;\n  return origin ? (\n    // Encode and decode the path to preserve escaped characters.\n    decodeURI(new URL(encodeURI(path), origin).href)\n  ) : path;\n}\nexport {\n  getAbsoluteUrl\n};\n//# sourceMappingURL=getAbsoluteUrl.mjs.map","import { cleanUrl } from '../url/cleanUrl.mjs';\nimport { getAbsoluteUrl } from '../url/getAbsoluteUrl.mjs';\nfunction normalizePath(path, baseUrl) {\n  if (path instanceof RegExp) {\n    return path;\n  }\n  const maybeAbsoluteUrl = getAbsoluteUrl(path, baseUrl);\n  return cleanUrl(maybeAbsoluteUrl);\n}\nexport {\n  normalizePath\n};\n//# sourceMappingURL=normalizePath.mjs.map","import { match } from \"path-to-regexp\";\nimport { getCleanUrl } from \"@mswjs/interceptors\";\nimport { normalizePath } from './normalizePath.mjs';\nfunction coercePath(path) {\n  return path.replace(\n    /([:a-zA-Z_-]*)(\\*{1,2})+/g,\n    (_, parameterName, wildcard) => {\n      const expression = \"(.*)\";\n      if (!parameterName) {\n        return expression;\n      }\n      return parameterName.startsWith(\":\") ? `${parameterName}${wildcard}` : `${parameterName}${expression}`;\n    }\n  ).replace(/([^\\/])(:)(?=\\d+)/, \"$1\\\\$2\").replace(/^([^\\/]+)(:)(?=\\/\\/)/, \"$1\\\\$2\");\n}\nfunction matchRequestUrl(url, path, baseUrl) {\n  const normalizedPath = normalizePath(path, baseUrl);\n  const cleanPath = typeof normalizedPath === \"string\" ? coercePath(normalizedPath) : normalizedPath;\n  const cleanUrl = getCleanUrl(url);\n  const result = match(cleanPath, { decode: decodeURIComponent })(cleanUrl);\n  const params = result && result.params || {};\n  return {\n    matches: result !== false,\n    params\n  };\n}\nexport {\n  coercePath,\n  matchRequestUrl\n};\n//# sourceMappingURL=matchRequestUrl.mjs.map","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/cookie/index.js\nvar require_cookie = __commonJS({\n  \"node_modules/cookie/index.js\"(exports) {\n    \"use strict\";\n    exports.parse = parse;\n    exports.serialize = serialize;\n    var __toString = Object.prototype.toString;\n    var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    function parse(str, options) {\n      if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n      }\n      var obj = {};\n      var opt = options || {};\n      var dec = opt.decode || decode;\n      var index = 0;\n      while (index < str.length) {\n        var eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1) {\n          break;\n        }\n        var endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n          endIdx = str.length;\n        } else if (endIdx < eqIdx) {\n          index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n          continue;\n        }\n        var key = str.slice(index, eqIdx).trim();\n        if (void 0 === obj[key]) {\n          var val = str.slice(eqIdx + 1, endIdx).trim();\n          if (val.charCodeAt(0) === 34) {\n            val = val.slice(1, -1);\n          }\n          obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n      }\n      return obj;\n    }\n    function serialize(name, val, options) {\n      var opt = options || {};\n      var enc = opt.encode || encode;\n      if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n      }\n      if (!fieldContentRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n      }\n      var value = enc(val);\n      if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n      }\n      var str = name + \"=\" + value;\n      if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n          throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + Math.floor(maxAge);\n      }\n      if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n          throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n      }\n      if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n          throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n      }\n      if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n          throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n      }\n      if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n      }\n      if (opt.secure) {\n        str += \"; Secure\";\n      }\n      if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch (priority) {\n          case \"low\":\n            str += \"; Priority=Low\";\n            break;\n          case \"medium\":\n            str += \"; Priority=Medium\";\n            break;\n          case \"high\":\n            str += \"; Priority=High\";\n            break;\n          default:\n            throw new TypeError(\"option priority is invalid\");\n        }\n      }\n      if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n          case true:\n            str += \"; SameSite=Strict\";\n            break;\n          case \"lax\":\n            str += \"; SameSite=Lax\";\n            break;\n          case \"strict\":\n            str += \"; SameSite=Strict\";\n            break;\n          case \"none\":\n            str += \"; SameSite=None\";\n            break;\n          default:\n            throw new TypeError(\"option sameSite is invalid\");\n        }\n      }\n      return str;\n    }\n    function decode(str) {\n      return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n    }\n    function encode(val) {\n      return encodeURIComponent(val);\n    }\n    function isDate(val) {\n      return __toString.call(val) === \"[object Date]\" || val instanceof Date;\n    }\n    function tryDecode(str, decode2) {\n      try {\n        return decode2(str);\n      } catch (e) {\n        return str;\n      }\n    }\n  }\n});\n\n// source.js\nvar import_cookie = __toESM(require_cookie(), 1);\nvar source_default = import_cookie.default;\nexport {\n  source_default as default\n};\n/*! Bundled license information:\n\ncookie/index.js:\n  (*!\n   * cookie\n   * Copyright(c) 2012-2014 Roman Shtylman\n   * Copyright(c) 2015 Douglas Christopher Wilson\n   * MIT Licensed\n   *)\n*/\n","import cookieUtils from \"@bundled-es-modules/cookie\";\nimport { store } from \"@mswjs/cookies\";\nfunction getAllDocumentCookies() {\n  return cookieUtils.parse(document.cookie);\n}\nfunction getRequestCookies(request) {\n  if (typeof document === \"undefined\" || typeof location === \"undefined\") {\n    return {};\n  }\n  switch (request.credentials) {\n    case \"same-origin\": {\n      const url = new URL(request.url);\n      return location.origin === url.origin ? getAllDocumentCookies() : {};\n    }\n    case \"include\": {\n      return getAllDocumentCookies();\n    }\n    default: {\n      return {};\n    }\n  }\n}\nfunction getAllRequestCookies(request) {\n  const requestCookiesString = request.headers.get(\"cookie\");\n  const cookiesFromHeaders = requestCookiesString ? cookieUtils.parse(requestCookiesString) : {};\n  store.hydrate();\n  const cookiesFromStore = Array.from(store.get(request)?.entries()).reduce((cookies, [name, { value }]) => {\n    return Object.assign(cookies, { [name.trim()]: value });\n  }, {});\n  const cookiesFromDocument = getRequestCookies(request);\n  const forwardedCookies = {\n    ...cookiesFromDocument,\n    ...cookiesFromStore\n  };\n  for (const [name, value] of Object.entries(forwardedCookies)) {\n    request.headers.append(\"cookie\", cookieUtils.serialize(name, value));\n  }\n  return {\n    ...forwardedCookies,\n    ...cookiesFromHeaders\n  };\n}\nexport {\n  getAllRequestCookies,\n  getRequestCookies\n};\n//# sourceMappingURL=getRequestCookies.mjs.map","import { devUtils } from '../utils/internal/devUtils.mjs';\nimport { isStringEqual } from '../utils/internal/isStringEqual.mjs';\nimport { getStatusCodeColor } from '../utils/logging/getStatusCodeColor.mjs';\nimport { getTimestamp } from '../utils/logging/getTimestamp.mjs';\nimport { serializeRequest } from '../utils/logging/serializeRequest.mjs';\nimport { serializeResponse } from '../utils/logging/serializeResponse.mjs';\nimport {\n  matchRequestUrl\n} from '../utils/matching/matchRequestUrl.mjs';\nimport { toPublicUrl } from '../utils/request/toPublicUrl.mjs';\nimport { getAllRequestCookies } from '../utils/request/getRequestCookies.mjs';\nimport { cleanUrl, getSearchParams } from '../utils/url/cleanUrl.mjs';\nimport {\n  RequestHandler\n} from './RequestHandler.mjs';\nvar HttpMethods = /* @__PURE__ */ ((HttpMethods2) => {\n  HttpMethods2[\"HEAD\"] = \"HEAD\";\n  HttpMethods2[\"GET\"] = \"GET\";\n  HttpMethods2[\"POST\"] = \"POST\";\n  HttpMethods2[\"PUT\"] = \"PUT\";\n  HttpMethods2[\"PATCH\"] = \"PATCH\";\n  HttpMethods2[\"OPTIONS\"] = \"OPTIONS\";\n  HttpMethods2[\"DELETE\"] = \"DELETE\";\n  return HttpMethods2;\n})(HttpMethods || {});\nclass HttpHandler extends RequestHandler {\n  constructor(method, path, resolver, options) {\n    super({\n      info: {\n        header: `${method} ${path}`,\n        path,\n        method\n      },\n      resolver,\n      options\n    });\n    this.checkRedundantQueryParameters();\n  }\n  checkRedundantQueryParameters() {\n    const { method, path } = this.info;\n    if (path instanceof RegExp) {\n      return;\n    }\n    const url = cleanUrl(path);\n    if (url === path) {\n      return;\n    }\n    const searchParams = getSearchParams(path);\n    const queryParams = [];\n    searchParams.forEach((_, paramName) => {\n      queryParams.push(paramName);\n    });\n    devUtils.warn(\n      `Found a redundant usage of query parameters in the request handler URL for \"${method} ${path}\". Please match against a path instead and access query parameters in the response resolver function using \"req.url.searchParams\".`\n    );\n  }\n  async parse(args) {\n    const url = new URL(args.request.url);\n    const match = matchRequestUrl(\n      url,\n      this.info.path,\n      args.resolutionContext?.baseUrl\n    );\n    const cookies = getAllRequestCookies(args.request);\n    return {\n      match,\n      cookies\n    };\n  }\n  predicate(args) {\n    const hasMatchingMethod = this.matchMethod(args.request.method);\n    const hasMatchingUrl = args.parsedResult.match.matches;\n    return hasMatchingMethod && hasMatchingUrl;\n  }\n  matchMethod(actualMethod) {\n    return this.info.method instanceof RegExp ? this.info.method.test(actualMethod) : isStringEqual(this.info.method, actualMethod);\n  }\n  extendResolverArgs(args) {\n    return {\n      params: args.parsedResult.match?.params || {},\n      cookies: args.parsedResult.cookies\n    };\n  }\n  async log(args) {\n    const publicUrl = toPublicUrl(args.request.url);\n    const loggedRequest = await serializeRequest(args.request);\n    const loggedResponse = await serializeResponse(args.response);\n    const statusColor = getStatusCodeColor(loggedResponse.status);\n    console.groupCollapsed(\n      devUtils.formatMessage(\n        `${getTimestamp()} ${args.request.method} ${publicUrl} (%c${loggedResponse.status} ${loggedResponse.statusText}%c)`\n      ),\n      `color:${statusColor}`,\n      \"color:inherit\"\n    );\n    console.log(\"Request\", loggedRequest);\n    console.log(\"Handler:\", this);\n    console.log(\"Response\", loggedResponse);\n    console.groupEnd();\n  }\n}\nexport {\n  HttpHandler,\n  HttpMethods\n};\n//# sourceMappingURL=HttpHandler.mjs.map","import {\n  HttpMethods,\n  HttpHandler\n} from './handlers/HttpHandler.mjs';\nfunction createHttpHandler(method) {\n  return (path, resolver, options = {}) => {\n    return new HttpHandler(method, path, resolver, options);\n  };\n}\nconst http = {\n  all: createHttpHandler(/.+/),\n  head: createHttpHandler(HttpMethods.HEAD),\n  get: createHttpHandler(HttpMethods.GET),\n  post: createHttpHandler(HttpMethods.POST),\n  put: createHttpHandler(HttpMethods.PUT),\n  delete: createHttpHandler(HttpMethods.DELETE),\n  patch: createHttpHandler(HttpMethods.PATCH),\n  options: createHttpHandler(HttpMethods.OPTIONS)\n};\nexport {\n  http\n};\n//# sourceMappingURL=http.mjs.map","import statuses from \"@bundled-es-modules/statuses\";\nconst { message } = statuses;\nfunction normalizeResponseInit(init = {}) {\n  const status = init?.status || 200;\n  const statusText = init?.statusText || message[status] || \"\";\n  const headers = new Headers(init?.headers);\n  return {\n    ...init,\n    headers,\n    status,\n    statusText\n  };\n}\nfunction decorateResponse(response, init) {\n  if (init.type) {\n    Object.defineProperty(response, \"type\", {\n      value: init.type,\n      enumerable: true,\n      writable: false\n    });\n  }\n  if (typeof document !== \"undefined\") {\n    const responseCookies = init.headers.get(\"Set-Cookie\")?.split(\",\") || [];\n    for (const cookieString of responseCookies) {\n      document.cookie = cookieString;\n    }\n  }\n  return response;\n}\nexport {\n  decorateResponse,\n  normalizeResponseInit\n};\n//# sourceMappingURL=decorators.mjs.map","import {\n  decorateResponse,\n  normalizeResponseInit\n} from './utils/HttpResponse/decorators.mjs';\nclass HttpResponse extends Response {\n  constructor(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    super(body, responseInit);\n    decorateResponse(this, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"text/plain\"` body.\n   * @example\n   * HttpResponse.text('hello world')\n   * HttpResponse.text('Error', { status: 500 })\n   */\n  static text(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"text/plain\");\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/json\"` body.\n   * @example\n   * HttpResponse.json({ firstName: 'John' })\n   * HttpResponse.json({ error: 'Not Authorized' }, { status: 401 })\n   */\n  static json(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"application/json\");\n    }\n    return new HttpResponse(\n      JSON.stringify(body),\n      responseInit\n    );\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/xml\"` body.\n   * @example\n   * HttpResponse.xml(`<user name=\"John\" />`)\n   * HttpResponse.xml(`<article id=\"abc-123\" />`, { status: 201 })\n   */\n  static xml(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"text/xml\");\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with an `ArrayBuffer` body.\n   * @example\n   * const buffer = new ArrayBuffer(3)\n   * const view = new Uint8Array(buffer)\n   * view.set([1, 2, 3])\n   *\n   * HttpResponse.arrayBuffer(buffer)\n   */\n  static arrayBuffer(body, init) {\n    const responseInit = normalizeResponseInit(init);\n    if (body) {\n      responseInit.headers.set(\"Content-Length\", body.byteLength.toString());\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `FormData` body.\n   * @example\n   * const data = new FormData()\n   * data.set('name', 'Alice')\n   *\n   * HttpResponse.formData(data)\n   */\n  static formData(body, init) {\n    return new HttpResponse(body, normalizeResponseInit(init));\n  }\n}\nexport {\n  HttpResponse\n};\n//# sourceMappingURL=HttpResponse.mjs.map","import { isNodeProcess } from \"is-node-process\";\nconst SET_TIMEOUT_MAX_ALLOWED_INT = 2147483647;\nconst MIN_SERVER_RESPONSE_TIME = 100;\nconst MAX_SERVER_RESPONSE_TIME = 400;\nconst NODE_SERVER_RESPONSE_TIME = 5;\nfunction getRealisticResponseTime() {\n  if (isNodeProcess()) {\n    return NODE_SERVER_RESPONSE_TIME;\n  }\n  return Math.floor(\n    Math.random() * (MAX_SERVER_RESPONSE_TIME - MIN_SERVER_RESPONSE_TIME) + MIN_SERVER_RESPONSE_TIME\n  );\n}\nasync function delay(durationOrMode) {\n  let delayTime;\n  if (typeof durationOrMode === \"string\") {\n    switch (durationOrMode) {\n      case \"infinite\": {\n        delayTime = SET_TIMEOUT_MAX_ALLOWED_INT;\n        break;\n      }\n      case \"real\": {\n        delayTime = getRealisticResponseTime();\n        break;\n      }\n      default: {\n        throw new Error(\n          `Failed to delay a response: unknown delay mode \"${durationOrMode}\". Please make sure you provide one of the supported modes (\"real\", \"infinite\") or a number.`\n        );\n      }\n    }\n  } else if (typeof durationOrMode === \"undefined\") {\n    delayTime = getRealisticResponseTime();\n  } else {\n    if (durationOrMode > SET_TIMEOUT_MAX_ALLOWED_INT) {\n      throw new Error(\n        `Failed to delay a response: provided delay duration (${durationOrMode}) exceeds the maximum allowed duration for \"setTimeout\" (${SET_TIMEOUT_MAX_ALLOWED_INT}). This will cause the response to be returned immediately. Please use a number within the allowed range to delay the response by exact duration, or consider the \"infinite\" delay mode to delay the response indefinitely.`\n      );\n    }\n    delayTime = durationOrMode;\n  }\n  return new Promise((resolve) => setTimeout(resolve, delayTime));\n}\nexport {\n  MAX_SERVER_RESPONSE_TIME,\n  MIN_SERVER_RESPONSE_TIME,\n  NODE_SERVER_RESPONSE_TIME,\n  SET_TIMEOUT_MAX_ALLOWED_INT,\n  delay\n};\n//# sourceMappingURL=delay.mjs.map","import { checkGlobals } from './utils/internal/checkGlobals.mjs';\nimport { SetupApi } from './SetupApi.mjs';\nimport { RequestHandler } from './handlers/RequestHandler.mjs';\nimport { http } from './http.mjs';\nimport { HttpHandler, HttpMethods } from './handlers/HttpHandler.mjs';\nimport { graphql } from './graphql.mjs';\nimport { GraphQLHandler } from './handlers/GraphQLHandler.mjs';\nimport { matchRequestUrl } from './utils/matching/matchRequestUrl.mjs';\nexport * from './utils/handleRequest.mjs';\nimport { getResponse } from './getResponse.mjs';\nimport { cleanUrl } from './utils/url/cleanUrl.mjs';\nexport * from './HttpResponse.mjs';\nexport * from './delay.mjs';\nimport { bypass } from './bypass.mjs';\nimport { passthrough } from './passthrough.mjs';\ncheckGlobals();\nexport {\n  GraphQLHandler,\n  HttpHandler,\n  HttpMethods,\n  RequestHandler,\n  SetupApi,\n  bypass,\n  cleanUrl,\n  getResponse,\n  graphql,\n  http,\n  matchRequestUrl,\n  passthrough\n};\n//# sourceMappingURL=index.mjs.map","import { UnderOppfolgingData } from '../../api/datatyper/underOppfolgingData';\nimport { OppfolgingsstatusData } from '../../api/datatyper/oppfolgingsstatus';\nimport { YtelseData } from '../../api/datatyper/ytelse';\nimport { delay, http, HttpResponse, RequestHandler } from 'msw';\nimport { DEFAULT_DELAY_MILLISECONDS } from './index.ts';\n\nconst oppfolging: UnderOppfolgingData = {\n    erManuell: true,\n    underOppfolging: true\n};\n\nconst oppfolgingstatus: OppfolgingsstatusData = {\n    oppfolgingsenhet: {\n        navn: 'NAV TestHeim',\n        enhetId: '007'\n    },\n    veilederId: 'Z123456',\n    formidlingsgruppe: 'ARBS',\n    servicegruppe: 'BKART',\n    hovedmaalkode: 'BEHOLDEA'\n};\n\nconst ytelsestatus: YtelseData = {\n    vedtaksliste: [\n        {\n            aktivitetsfase: 'Under arbeidsavklaring',\n            fradato: {\n                day: '19',\n                month: '2',\n                year: '2018'\n            },\n            status: 'Iverksatt',\n            tildato: {\n                day: '12',\n                month: '10',\n                year: '2018'\n            },\n            vedtakstype: 'Eksamensgebyr / Ny rettighet'\n        },\n        {\n            aktivitetsfase: null,\n            fradato: {\n                day: '19',\n                month: '2',\n                year: '2018'\n            },\n            status: 'Iverksatt',\n            tildato: null,\n            vedtakstype: 'Arbeidsavklaringspenger / Endring'\n        },\n        {\n            aktivitetsfase: 'Under arbeidsavklaring',\n            fradato: {\n                day: '19',\n                month: '2',\n                year: '2018'\n            },\n            status: 'Avsluttet',\n            vedtakstype: 'Arbeidsavklaringspenger / Ny rettighet'\n        }\n    ]\n};\n\nexport const veilarboppfolgingHandlers: RequestHandler[] = [\n    http.post('/veilarboppfolging/api/v2/person/hent-oppfolgingsstatus', async () => {\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(oppfolgingstatus);\n    }),\n    http.post('/veilarboppfolging/api/v2/person/hent-ytelser', async () => {\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(ytelsestatus);\n    }),\n    http.post('/veilarboppfolging/api/v2/hent-underOppfolging', async () => {\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(oppfolging);\n    })\n];\n","import { delay, http, HttpResponse, RequestHandler } from 'msw';\nimport {\n    ArenaPerson,\n    FagdokumentType,\n    JobbprofilOppstartstype,\n    KursVarighetEnhet,\n    SprakNiva\n} from '../../api/datatyper/arenaperson';\nimport { AktorId } from '../../api/datatyper/aktor-id';\nimport { Gradering, PersonaliaInfo, RelasjonsBosted } from '../../api/datatyper/personalia';\nimport { VergemaalEllerFullmaktOmfangType, VergeOgFullmaktData, Vergetype } from '../../api/datatyper/vergeOgFullmakt';\nimport { TilrettelagtKommunikasjonData } from '../../api/datatyper/tilrettelagtKommunikasjon';\nimport { RegistreringsData } from '../../api/datatyper/registreringsData';\nimport { EndringIRegistreringsdata } from '../../api/datatyper/endringIRegistreringsData';\nimport { DEFAULT_DELAY_MILLISECONDS } from './index.ts';\n\nconst aktorId: AktorId = {\n    aktorId: '1234567'\n};\n\nconst cvOgJobbonsker: ArenaPerson = {\n    sistEndret: '2019-01-15T07:52:35.456+01:00',\n    sammendrag:\n        'Jeg er en maritime executive som har mastergrad og bachlorgrad. Har vært teknisk direktor i mange år og flyttet hjem til Norge hvor jeg søker arbeide innenfor then maritime sektor. Har gode referanser og variert seiling og onshore basert arbeid.',\n    arbeidserfaring: [\n        {\n            tittel: 'Maskinsjef',\n            arbeidsgiver: 'viola enviromental',\n            sted: 'Langtvekkistan',\n            beskrivelse: 'Beskrivelse av arbeidserfaring',\n            fraDato: '2010-04',\n            tilDato: '2017-06'\n        },\n        {\n            tittel: 'Arbeidskar',\n            arbeidsgiver: 'Lokale arbeidskarforening',\n            sted: 'Oppdal',\n            beskrivelse: 'Krever en kar å drive med arbeid',\n            fraDato: '2017-08',\n            tilDato: null\n        }\n    ],\n    fagdokumentasjoner: [\n        {\n            tittel: 'Mesterbrev baker',\n            type: FagdokumentType.MESTERBREV\n        },\n        {\n            tittel: 'Yrkeskompetanse helsesekretær',\n            type: FagdokumentType.SVENNEBREV_FAGBREV\n        }\n    ],\n    utdanning: [\n        {\n            tittel: 'Andre servicefag, andre, uspesifisert utdanningsgruppe, høyere nivå',\n            utdanningsnivaa: 'Doktorgrad',\n            studiested: 'Pasific University',\n            beskrivelse: 'Beskrivelse av utdanning',\n            fraDato: '1999-06',\n            tilDato: null\n        },\n        {\n            tittel: 'Cand.scient.-utdanning, mekanikk',\n            utdanningsnivaa: 'Høyere utdanning, 1-4 år',\n            studiested: 'Pasific university, kjempelangt studiested',\n            beskrivelse: null,\n            fraDato: '1999-06',\n            tilDato: '2003-06'\n        },\n        {\n            tittel: 'Teknisk fagskole, linje for maritime fag og fiskerifag, toårig',\n            utdanningsnivaa: 'Folkehøgskole',\n            studiested: 'arendal maritime hoyskole',\n            beskrivelse: null,\n            fraDato: '1989-06',\n            tilDato: '1993-06'\n        }\n    ],\n    annenErfaring: [\n        {\n            rolle: 'maskinsjef steam',\n            beskrivelse: 'maskinsjef steam for brovig tank rederi',\n            fraDato: '1988-02',\n            tilDato: null\n        },\n        {\n            rolle: 'vice presidet ',\n            beskrivelse: 'vice presidet  for new england pump and valve',\n            fraDato: '2007-08',\n            tilDato: '2009-05'\n        },\n        {\n            rolle: 'technical director',\n            beskrivelse: 'technical director for cunard cruise line',\n            fraDato: '2003-05',\n            tilDato: '2007-09'\n        },\n        {\n            rolle: 'technical director',\n            beskrivelse: 'technical director for norwegian cruise line',\n            fraDato: '2005-07',\n            tilDato: '2007-06'\n        },\n        {\n            rolle: 'maskinsjef',\n            beskrivelse: 'maskinsjef for crystal cruise',\n            fraDato: '1991-04',\n            tilDato: '2003-05'\n        }\n    ],\n    forerkort: [\n        {\n            klasse: 'B'\n        },\n        {\n            klasse: 'C1'\n        }\n    ],\n    kurs: [\n        {\n            tittel: 'huet',\n            arrangor: 'falk',\n            tidspunkt: '2016-10',\n            varighet: {\n                varighet: 1,\n                tidsenhet: KursVarighetEnhet.UKE\n            }\n        },\n        {\n            tittel: 'Brillekurs',\n            arrangor: 'Norsk Brilleslangeforbund',\n            tidspunkt: '2022-08-01',\n            varighet: {\n                varighet: 2,\n                tidsenhet: KursVarighetEnhet.MND\n            }\n        },\n\n        {\n            tittel: 'blå',\n            arrangor: 'falk',\n            tidspunkt: '2018-10'\n        },\n        {\n            tittel: 'dynamik posisjonering',\n            arrangor: 'kongsberg',\n            tidspunkt: '2010-08'\n        }\n    ],\n    godkjenninger: [\n        {\n            tittel: 'Autorisasjon som lege',\n            utsteder: 'Norsk legeforening',\n            gjennomfortDato: '2018-05-17',\n            utloperDato: '2118-12-31'\n        },\n        {\n            tittel: 'Bårførerbevis',\n            utsteder: null,\n            gjennomfortDato: '2020-02-02',\n            utloperDato: null\n        }\n    ],\n    andreGodkjenninger: [\n        {\n            tittel: 'Sikkerhetskurs: Diverse spesialkurs',\n            utsteder: 'Diverse spesialkurs A/S',\n            gjennomfortDato: '2018-05-04',\n            utloperDato: '2118-12-20'\n        },\n        {\n            tittel: 'Maskinoffisersertifikat: Klasse 1',\n            utsteder: 'Norsk maskinoffiserskole',\n            gjennomfortDato: '2014-12',\n            utloperDato: '2118-12'\n        },\n        {\n            tittel: 'Kjelpassersertifikat: Rødt sertifikat',\n            utsteder: null,\n            gjennomfortDato: '1974-07',\n            utloperDato: null\n        }\n    ],\n    sprak: [\n        {\n            sprak: 'Dansk',\n            muntligNiva: SprakNiva.FOERSTESPRAAK,\n            skriftligNiva: 'Godt'\n        },\n        {\n            sprak: 'Svensk',\n            muntligNiva: 'Godt',\n            skriftligNiva: 'Godt'\n        },\n        {\n            sprak: 'Engelsk',\n            muntligNiva: 'Godt',\n            skriftligNiva: 'Godt'\n        },\n        {\n            sprak: 'Tysk',\n            muntligNiva: 'Godt',\n            skriftligNiva: 'Godt'\n        }\n    ],\n    jobbprofil: {\n        sistEndret: '2019-01-15T07:52:35.462+01:00',\n        onsketYrke: [\n            {\n                tittel: 'Vinduspusser'\n            }\n        ],\n        onsketArbeidssted: [\n            {\n                stedsnavn: 'Søgne'\n            },\n            {\n                stedsnavn: 'Østfold'\n            },\n            {\n                stedsnavn: 'Akershus'\n            },\n            {\n                stedsnavn: 'Oslo'\n            },\n            {\n                stedsnavn: 'Oppland'\n            },\n            {\n                stedsnavn: 'Buskerud'\n            },\n            {\n                stedsnavn: 'Vestfold'\n            },\n            {\n                stedsnavn: 'Telemark'\n            },\n            {\n                stedsnavn: 'Aust-Agder'\n            },\n            {\n                stedsnavn: 'Vest-Agder'\n            },\n            {\n                stedsnavn: 'Rogaland'\n            },\n            {\n                stedsnavn: 'Hordaland'\n            },\n            {\n                stedsnavn: 'Sogn og Fjordane'\n            },\n            {\n                stedsnavn: 'Møre og Romsdal'\n            },\n            {\n                stedsnavn: 'Nordland'\n            },\n            {\n                stedsnavn: 'Finnmark'\n            },\n            {\n                stedsnavn: 'Øvrige områder'\n            },\n            {\n                stedsnavn: 'Trøndelag'\n            }\n        ],\n        onsketAnsettelsesform: [\n            {\n                tittel: 'VIKARIAT'\n            },\n            {\n                tittel: 'ENGASJEMENT'\n            },\n            {\n                tittel: 'PROSJEKT'\n            },\n            {\n                tittel: 'FAST'\n            },\n            {\n                tittel: 'SESONG'\n            },\n            {\n                tittel: 'LAERLING'\n            },\n            {\n                tittel: 'SELVSTENDIG_NAERINGSDRIVENDE'\n            },\n            {\n                tittel: 'FERIEJOBB'\n            },\n            {\n                tittel: 'ANNET'\n            }\n        ],\n        onsketArbeidstidsordning: [\n            {\n                tittel: 'DAGTID'\n            },\n            {\n                tittel: 'KVELD'\n            },\n            {\n                tittel: 'NATT'\n            }\n        ],\n\n        onsketArbeidsdagordning: [\n            {\n                tittel: 'UKEDAGER'\n            },\n            {\n                tittel: 'LOERDAG'\n            },\n            {\n                tittel: 'SOENDAG'\n            }\n        ],\n        onsketArbeidsskiftordning: [\n            {\n                tittel: 'SKIFT'\n            },\n            {\n                tittel: 'VAKT'\n            },\n            {\n                tittel: 'TURNUS'\n            }\n        ],\n        heltidDeltid: {\n            heltid: true,\n            deltid: true\n        },\n        kompetanse: [\n            {\n                tittel: 'Salg av utstyr til bakeribransjen'\n            },\n            {\n                tittel: 'Førstehjelpskurs for strømulykker'\n            }\n        ],\n        oppstart: JobbprofilOppstartstype.ETTER_TRE_MND\n    }\n};\n\nconst personalia: PersonaliaInfo = {\n    fornavn: 'Bruce',\n    fodselsnummer: '10108000398',\n    fodselsdato: '1974-09-16',\n    dodsdato: null,\n    barn: [\n        {\n            fornavn: 'Bruce',\n            fodselsdato: '2016-04-17',\n            gradering: Gradering.UKJENT,\n            erEgenAnsatt: false,\n            harVeilederTilgang: false,\n            dodsdato: null,\n            relasjonsBosted: RelasjonsBosted.ANNET_BOSTED\n        },\n        {\n            fornavn: 'Harry',\n            fodselsdato: '2014-05-24',\n            gradering: Gradering.UKJENT,\n            erEgenAnsatt: false,\n            harVeilederTilgang: false,\n            dodsdato: null,\n            relasjonsBosted: RelasjonsBosted.SAMME_BOSTED\n        },\n        {\n            fornavn: 'Satoshi',\n            fodselsdato: '2005-10-04',\n            erEgenAnsatt: false,\n            harVeilederTilgang: true,\n            gradering: Gradering.UKJENT,\n            dodsdato: '2023-11-11',\n            relasjonsBosted: RelasjonsBosted.UKJENT_BOSTED\n        }\n    ],\n    kontonummer: '12345678911',\n    geografiskEnhet: {\n        enhetsnummer: '0106',\n        navn: 'NAV Fredrikstad'\n    },\n    telefon: [\n        {\n            prioritet: '1',\n            telefonNr: '+4746333333',\n            registrertDato: '10.07.2008',\n            master: 'FREG'\n        },\n        {\n            prioritet: '2',\n            telefonNr: '80022222',\n            registrertDato: '10.04.2010',\n            master: 'KRR'\n        },\n        {\n            prioritet: '3',\n            telefonNr: '44222444',\n            registrertDato: null,\n            master: 'PDL'\n        }\n    ],\n    epost: {\n        epostAdresse: 'tester.scrambling@registre.no',\n        epostSistOppdatert: '10.04.2010',\n        master: 'KRR'\n    },\n    statsborgerskap: ['NORGE', 'POLEN'],\n    partner: {\n        gradering: Gradering.UKJENT,\n        erEgenAnsatt: true,\n        harSammeBosted: true,\n        harVeilederTilgang: false\n    },\n    sivilstandliste: [\n        {\n            sivilstand: 'Gift',\n            fraDato: '2012-08-20',\n            skjermet: null,\n            gradering: Gradering.UKJENT,\n            relasjonsBosted: RelasjonsBosted.SAMME_BOSTED,\n            master: 'Freg',\n            registrertDato: null\n        },\n        {\n            sivilstand: 'Separert_partner',\n            fraDato: '2019-06-01',\n            skjermet: false,\n            gradering: Gradering.UKJENT,\n            relasjonsBosted: null,\n            master: 'PDL',\n            registrertDato: '2019-06-15T10:30:44'\n        },\n        {\n            sivilstand: 'Skilt',\n            fraDato: '2020-09-03',\n            skjermet: true,\n            gradering: Gradering.UKJENT,\n            relasjonsBosted: RelasjonsBosted.UKJENT_BOSTED,\n            master: 'PDL',\n            registrertDato: '2020-09-05T11:30:15'\n        }\n    ],\n    bostedsadresse: {\n        coAdressenavn: 'CoAdresseNavn',\n        vegadresse: {\n            matrikkelId: null,\n            postnummer: '0000',\n            husnummer: '21',\n            husbokstav: 'A',\n            kommunenummer: '1111',\n            adressenavn: 'Arendalsegate',\n            tilleggsnavn: 'Arendal',\n            poststed: 'Posted',\n            kommune: 'Kommune'\n        },\n        matrikkeladresse: {\n            matrikkelId: null,\n            bruksenhetsnummer: 'H0101',\n            tilleggsnavn: 'Ja',\n            kommunenummer: '8008',\n            postnummer: '1337',\n            poststed: 'Sandvika',\n            kommune: 'Blærum'\n        },\n        utenlandskAdresse: {\n            adressenavnNummer: 'AdressenavnNummer?',\n            bygningEtasjeLeilighet: 'H4290',\n            postboksNummerNavn: '42',\n            postkode: '1337',\n            bySted: 'Shanghai',\n            regionDistriktOmraade: 'Shanghai',\n            landkode: 'CN'\n        },\n        ukjentBosted: {\n            bostedskommune: 'Vinje',\n            kommune: 'Kommune'\n        }\n    },\n    oppholdsadresse: null,\n    kontaktadresser: [\n        {\n            type: 'Utland',\n            coAdressenavn: null,\n            vegadresse: null,\n            postboksadresse: null,\n            postadresseIFrittFormat: null,\n            utenlandskAdresse: null,\n            utenlandskAdresseIFrittFormat: {\n                adresselinje1: 'C/O adresse2 Test',\n                adresselinje2: 'Adresselinje 2',\n                adresselinje3: 'Adresselinje 3',\n                byEllerStedsnavn: 'Stedsnavn',\n                postkode: '1234',\n                landkode: 'Landkode'\n            }\n        }\n    ],\n    kjonn: 'K',\n    malform: 'Polsk'\n};\n\nconst mockVergeOgFullmakt: VergeOgFullmaktData = {\n    vergemaalEllerFremtidsfullmakt: [\n        {\n            type: Vergetype.MINDREAARIG,\n            embete: 'Fylkesmannen i Agder',\n            vergeEllerFullmektig: {\n                navn: {\n                    fornavn: 'fornavn',\n                    mellomnavn: 'mellomnavn',\n                    etternavn: 'etternavn'\n                },\n                motpartsPersonident: '1234567890',\n                omfang: VergemaalEllerFullmaktOmfangType.OEKONOMISKE_INTERESSER\n            },\n            folkeregistermetadata: {\n                ajourholdstidspunkt: '2021-03-02T13:00:42',\n                gyldighetstidspunkt: null\n            }\n        }\n    ],\n    fullmakt: [\n        {\n            motpartsPersonident: '1234567890',\n            motpartsPersonNavn: {\n                fornavn: 'Ola',\n                mellomnavn: null,\n                etternavn: 'Nordmann',\n                forkortetNavn: 'Nordmann Ola'\n            },\n            motpartsRolle: 'FULLMEKTIG',\n            omraader: [\n                {\n                    kode: 'AAP',\n                    beskrivelse: 'Arbeidsavklaringspenger'\n                },\n                {\n                    kode: 'DAG',\n                    beskrivelse: 'Dagpenger'\n                }\n            ],\n            gyldigFraOgMed: '2021-03-02T13:00:42',\n            gyldigTilOgMed: '2021-03-03T13:00:42'\n        },\n        {\n            motpartsPersonident: '1234567891',\n            motpartsPersonNavn: {\n                fornavn: 'Ola',\n                mellomnavn: null,\n                etternavn: 'Nordmann',\n                forkortetNavn: 'Nordmann Ola'\n            },\n            motpartsRolle: 'FULLMAKTSGIVER',\n            omraader: [\n                {\n                    kode: '*',\n                    beskrivelse: 'alle ytelser'\n                }\n            ],\n            gyldigFraOgMed: '2021-03-04T13:00:42',\n            gyldigTilOgMed: '2021-03-05T13:00:42'\n        }\n    ]\n};\n\nconst mockTilrettelagtKommunikasjon: TilrettelagtKommunikasjonData = {\n    talespraak: 'Engelsk',\n    tegnspraak: 'Fransk'\n};\n\nconst ordinaerRegistering: RegistreringsData = {\n    type: 'ORDINAER',\n    registrering: {\n        opprettetDato: '2018-08-30T09:17:28.386804+02:00',\n        manueltRegistrertAv: {\n            ident: 'Z21345567',\n            enhet: {\n                id: '1234',\n                navn: 'NAV TESTHEIM'\n            }\n        },\n        besvarelse: {\n            utdanning: 'VIDEREGAENDE_FAGBREV_SVENNEBREV',\n            utdanningBestatt: 'JA',\n            utdanningGodkjent: 'JA',\n            helseHinder: 'NEI',\n            andreForhold: 'NEI',\n            sisteStilling: 'INGEN_SVAR',\n            dinSituasjon: 'DELTIDSJOBB_VIL_MER'\n        },\n        profilering: {\n            jobbetSammenhengendeSeksAvTolvSisteManeder: true,\n            innsatsgruppe: 'BEHOV_FOR_ARBEIDSEVNEVURDERING'\n        },\n        teksterForBesvarelse: [\n            {\n                sporsmalId: 'dinSituasjon',\n                sporsmal: 'Hvorfor registrerer du deg?',\n                svar: 'Jeg har deltidsjobb, men vil jobbe mer'\n            },\n            {\n                sporsmalId: 'sisteStilling',\n                sporsmal: 'Din siste jobb',\n                svar: 'Fotpleier'\n            },\n            {\n                sporsmalId: 'utdanning',\n                sporsmal: 'Hva er din høyeste fullførte utdanning?',\n                svar: 'Videregående, fagbrev eller svennebrev (3 år eller mer)'\n            },\n            {\n                sporsmalId: 'utdanningGodkjent',\n                sporsmal: 'Er utdanningen din godkjent i Norge?',\n                svar: 'Ja'\n            },\n            {\n                sporsmalId: 'utdanningBestatt',\n                sporsmal: 'Er utdanningen din bestått?',\n                svar: 'Ja'\n            },\n            {\n                sporsmalId: 'helseHinder',\n                sporsmal: 'Trenger du oppfølging i forbindelse med helseutfordringer?',\n                svar: 'Nei'\n            },\n            {\n                sporsmalId: 'andreForhold',\n                sporsmal: 'Trenger du oppfølging i forbindelse med andre utfordringer?',\n                svar: 'Nei'\n            }\n        ]\n    }\n};\n\n// Kan brukes for å teste sykmeldt registrering istedenfor ordinær registrering\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst sykmeldtRegistering: RegistreringsData = {\n    registrering: {\n        opprettetDato: '2018-08-30T09:17:28.386804+02:00',\n        besvarelse: {\n            fremtidigSituasjon: 'NY_ARBEIDSGIVER',\n            utdanning: 'VIDEREGAENDE_FAGBREV_SVENNEBREV',\n            utdanningBestatt: 'NEI',\n            utdanningGodkjentNorge: 'JA',\n            andreUtfordringer: 'NEI'\n        },\n        teksterForBesvarelse: [\n            {\n                sporsmalId: 'fremtidigSituasjon',\n                sporsmal: 'Hva tenker du om din fremtidige situasjon?',\n                svar: 'Jeg trenger ny jobb'\n            },\n            {\n                sporsmalId: 'utdanning',\n                sporsmal: 'Hva er din høyeste fullførte utdanning?',\n                svar: 'Videregående, fagbrev eller svennebrev (3 år eller mer)'\n            },\n            {\n                sporsmalId: 'utdanningGodkjent',\n                sporsmal: 'Er utdanningen din godkjent i Norge?',\n                svar: 'Ja'\n            },\n            {\n                sporsmalId: 'utdanningBestatt',\n                sporsmal: 'Er utdanningen din bestått?',\n                svar: 'Nei'\n            },\n            {\n                sporsmalId: 'andreForhold',\n                sporsmal: 'Er det noe annet enn helsen din som NAV bør ta hensyn til?',\n                svar: 'Nei'\n            }\n        ]\n    }\n};\n\nconst mockEndringIRegistreringsData: EndringIRegistreringsdata = {\n    erBesvarelsenEndret: true,\n    endretAv: 'BRUKER',\n    registreringsTidspunkt: '2023-07-17T11:27:25.299658',\n    registreringsId: 10004400,\n    opprettetAv: 'BRUKER',\n    endretTidspunkt: '2023-07-18T11:24:03.158629',\n    besvarelse: {\n        helseHinder: {\n            endretAv: null,\n            verdi: 'NEI',\n            gjelderTilDato: null,\n            gjelderFraDato: null,\n            endretTidspunkt: null\n        },\n        utdanning: {\n            verdi: 'HOYERE_UTDANNING_1_TIL_4',\n            gjelderFraDato: null,\n            gjelderTilDato: null,\n            endretAv: null,\n            endretTidspunkt: null\n        },\n        utdanningBestatt: {\n            verdi: 'JA',\n            gjelderFraDato: null,\n            gjelderTilDato: null,\n            endretAv: null,\n            endretTidspunkt: null\n        },\n        utdanningGodkjent: {\n            verdi: 'JA',\n            gjelderFraDato: null,\n            gjelderTilDato: null,\n            endretAv: null,\n            endretTidspunkt: null\n        },\n        andreForhold: {\n            verdi: 'NEI',\n            gjelderFraDato: null,\n            gjelderTilDato: null,\n            endretAv: null,\n            endretTidspunkt: null\n        },\n        sisteStilling: {\n            verdi: 'INGEN_SVAR',\n            gjelderFraDato: null,\n            gjelderTilDato: null,\n            endretAv: null,\n            endretTidspunkt: null\n        },\n        dinSituasjon: {\n            verdi: 'OPPSIGELSE',\n            tilleggsData: {\n                forsteArbeidsdagDato: null,\n                sisteArbeidsdagDato: '2023-07-31',\n                oppsigelseDato: '2023-07-19',\n                gjelderFraDato: null,\n                permitteringsProsent: null,\n                stillingsProsent: null,\n                permitteringForlenget: null,\n                harNyJobb: null\n            },\n            gjelderFraDato: null,\n            gjelderTilDato: null,\n            endretAv: 'BRUKER',\n            endretTidspunkt: '2023-07-18T11:24:03.136693338'\n        },\n        fremtidigSituasjon: {\n            verdi: null,\n            gjelderFraDato: null,\n            gjelderTilDato: null,\n            endretAv: null,\n            endretTidspunkt: null\n        },\n        tilbakeIArbeid: {\n            verdi: null,\n            gjelderFraDato: null,\n            gjelderTilDato: null,\n            endretAv: null,\n            endretTidspunkt: null\n        }\n    }\n};\n\nexport const veilarbpersonHandlers: RequestHandler[] = [\n    http.post('/veilarbperson/api/v3/person/hent-cv_jobbprofil', async () => {\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(cvOgJobbonsker);\n    }),\n    http.post('/veilarbperson/api/v3/person/hent-aktorid', async () => {\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(aktorId);\n    }),\n    http.post('/veilarbperson/api/v3/person/hent-registrering', async () => {\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(ordinaerRegistering);\n    }),\n    http.post('/veilarbperson/api/v3/person/registrering/hent-endringer', async () => {\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(mockEndringIRegistreringsData);\n    }),\n    http.post('/veilarbperson/api/v3/hent-person', async () => {\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(personalia);\n    }),\n    http.post('/veilarbperson/api/v3/person/hent-vergeOgFullmakt', async () => {\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(mockVergeOgFullmakt);\n    }),\n    http.post('/veilarbperson/api/v3/person/hent-tolk', async () => {\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(mockTilrettelagtKommunikasjon);\n    })\n];\n","import { delay, http, HttpResponse, RequestHandler } from 'msw';\nimport { VeilederData } from '../../api/datatyper/veileder';\nimport { DEFAULT_DELAY_MILLISECONDS } from './index.ts';\n\nconst veileder: VeilederData = {\n    etternavn: 'Veiledersen',\n    fornavn: 'Iskrem',\n    ident: 'Z123999',\n    navn: 'Iskrem Veiledersen'\n};\n\nexport const veilarbveilederHandlers: RequestHandler[] = [\n    http.get('/veilarbveileder/api/veileder/:veilederId', async () => {\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(veileder);\n    })\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LiveStorage = void 0;\nconst features = {\n    sessionStorage: typeof sessionStorage !== 'undefined',\n    broadcastChannel: typeof BroadcastChannel !== 'undefined',\n};\nclass LiveStorage {\n    constructor(id, initialValue) {\n        this.storageId = id;\n        const hydratedValue = this.hydrate();\n        this.value = hydratedValue || initialValue;\n        this.channel = features.broadcastChannel\n            ? new BroadcastChannel(id)\n            : undefined;\n        if (features.broadcastChannel) {\n            // Create a BroadcastChannel to sync the value updates between the clients.\n            this.channel = new BroadcastChannel(this.storageId);\n            this.channel.addEventListener('message', (event) => {\n                switch (event.data.type) {\n                    // Broadcast the current storage's value to all other storages\n                    // in case of the hydrate request.\n                    case 'HYDRATE': {\n                        this.broadcast(this.value);\n                        break;\n                    }\n                    case 'UPDATE': {\n                        this.value = event.data.payload.nextValue;\n                        // Persist the synced value, because each client keeps\n                        // the value in its own session storage. That way the\n                        // persistency layer auto-cleans itself when a client closes.\n                        this.persist();\n                        break;\n                    }\n                }\n            });\n            // Request hydration from other opened clients to pull in the value\n            // when there's no hydrated value in the current session.\n            if (!hydratedValue) {\n                this.postMessage('HYDRATE');\n            }\n        }\n    }\n    /**\n     * Broadcast the current value to other clients to inherit it.\n     */\n    broadcast(nextValue) {\n        this.postMessage('UPDATE', {\n            nextValue,\n        });\n    }\n    update(updater) {\n        const nextValue = updater(this.value);\n        this.value = nextValue;\n        if (features.broadcastChannel) {\n            this.persist();\n            this.broadcast(this.value);\n        }\n    }\n    getValue() {\n        return this.value;\n    }\n    serialize(value) {\n        return JSON.stringify(value);\n    }\n    deserialize(serializedValue) {\n        return JSON.parse(serializedValue);\n    }\n    /**\n     * Flush the value into the persistency layer.\n     */\n    persist() {\n        if (features.sessionStorage) {\n            sessionStorage.setItem(this.storageId, this.serialize(this.value));\n        }\n    }\n    /**\n     * Hydrate the value from the persistency layer.\n     */\n    hydrate() {\n        if (features.sessionStorage) {\n            const storedValue = sessionStorage.getItem(this.storageId);\n            return storedValue ? this.deserialize(storedValue) : null;\n        }\n        return this.value;\n    }\n    postMessage(type, ...rest) {\n        if (!this.channel) {\n            return;\n        }\n        this.channel.postMessage({\n            type,\n            payload: rest[0],\n        });\n    }\n}\nexports.LiveStorage = LiveStorage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LiveStorage = void 0;\nvar LiveStorage_1 = require(\"./LiveStorage\");\nObject.defineProperty(exports, \"LiveStorage\", { enumerable: true, get: function () { return LiveStorage_1.LiveStorage; } });\n","import { delay, http, HttpResponse, RequestHandler } from 'msw';\nimport { LiveStorage } from '@mswjs/storage';\nimport { overblikkVisningResponse } from '../../api/fetch';\nimport { DEFAULT_DELAY_MILLISECONDS } from './index.ts';\n\nconst chips: overblikkVisningResponse = {\n    overblikkVisning: ['CV', 'Jobbønsker', 'Registrering', 'Oppfølging', 'Ytelser', 'Personalia']\n};\n\nconst lagredeInformasjonsbokser = new LiveStorage<string[]>('lagredeInformasjonsbokser', chips.overblikkVisning);\n\nexport const veilarbfilterHandlers: RequestHandler[] = [\n    http.get('/veilarbfilter/api/overblikkvisning', async () => {\n        const data = lagredeInformasjonsbokser.getValue();\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return HttpResponse.json(data);\n    }),\n\n    http.post('/veilarbfilter/api/overblikkvisning', async ({ request }) => {\n        const requestBody = (await request.json()) as string[];\n        lagredeInformasjonsbokser.update(() => requestBody);\n        await delay(DEFAULT_DELAY_MILLISECONDS);\n        return new HttpResponse(null, { status: 204 });\n    })\n];\n","import { veilarboppfolgingHandlers } from './veilarboppfolging';\nimport { veilarbpersonHandlers } from './veilarbperson';\nimport { veilarbveilederHandlers } from './veilarbveileder';\nimport { veilarbfilterHandlers } from './veilarbfilter';\nimport { RequestHandler } from 'msw';\n\nexport const DEFAULT_DELAY_MILLISECONDS: number = 100;\n\nexport const allHandlers: RequestHandler[] = [\n    ...veilarbveilederHandlers,\n    ...veilarbpersonHandlers,\n    ...veilarboppfolgingHandlers,\n    ...veilarbfilterHandlers\n];\n","import { setupWorker } from 'msw/browser';\nimport { allHandlers } from './api';\n\n// This configures a Service Worker with the given request handlers.\nexport const worker = setupWorker(...allHandlers);\n"],"names":["POSITIONALS_EXP","serializePositional","positional","flag","json","format","message","positionals","positionalIndex","formattedMessage","match","isEscaped","_","value","STACK_FRAMES_TO_IGNORE","cleanErrorStack","error","nextStack","InvariantError","invariant","predicate","ErrorConstructor","formatMessage","LIBRARY_PREFIX","interpolatedMessage","warn","devUtils","SOURCE_FRAME","BUILD_FRAME","getCallFrame","stack","declarationFrame","frame","isIterable","fn","_RequestHandler","args","__publicField","callFrame","_args","parsedResult","request","existingClone","clonedRequest","_a","requestClone","_b","executeResolver","resolverExtras","mockedResponse","errorOrResponse","resolver","info","result","done","nextResponse","RequestHandler","until","promise","executeHandlers","requestId","handlers","resolutionContext","matchingHandler","handler","toPublicUrl","url","urlInstance","onUnhandledRequest","strategy","publicUrl","unhandledRequestMessage","applyStrategy","strategy2","__create","__defProp","__getOwnPropDesc","__getOwnPropNames","__getProtoOf","__hasOwnProp","__commonJS","cb","mod","__copyProps","to","from","except","desc","key","__toESM","isNodeMode","target","require_set_cookie","exports","module","defaultParseOptions","isNonEmptyString","str","parseString","setCookieValue","options","parts","nameValuePairStr","parsed","parseNameValuePair","name","e","cookie","part","sides","value2","nameValueArr","parse","input","sch","cookies","cookies2","splitCookiesString","cookiesString","cookiesStrings","pos","start","ch","lastComma","nextStart","cookiesSeparatorFound","skipWhitespace","notSpecialChar","import_set_cookie_parser","PERSISTENCY_KEY","supportsLocalStorage","testKey","isPropertyAccessible","object","method","CookieStore","response","requestUrl","responseCookies","now","parsedResponseCookies","maxAge","prevCookies","originCookies","persistedCookies","origin","token","expires","serializedCookies","store","readResponseCookies","handleRequest","emitter","handleRequestOptions","lookupResult","_c","_d","requiredLookupResult","transformedResponse","_e","_f","toResponseInit","isObject","mergeRight","left","right","rightValue","leftValue","MemoryLeakError","type","count","_Emitter","eventName","internalEventName","listener","listeners","index","onceListener","data","maxListeners","nextListeners","memoryLeakWarning","Emitter","pipeEvents","source","destination","rawEmit","sourceEmit","event","toReadonlyArray","clone","Disposable","subscription","SetupApi","initialHandlers","runtimeHandlers","nextHandlers","define_process_env_default","checkGlobals","isStringEqual","actual","expected","getStatusCodeColor","status","getTimestamp","chunk","serializeRequest","requestText","require_codes","require_statuses","codes","status2","createMessageToStatusCodeMap","createStatusCodeList","codes2","map","code","status3","getStatusCode","msg","getStatusMessage","n","import_statuses","source_default","statuses","serializeResponse","responseClone","responseText","responseStatus","responseStatusText","lexer","tokens","i","char","j","pattern","prefixes","defaultPattern","escapeString","path","tryConsume","mustConsume","nextType","consumeText","prefix","open","name_1","pattern_1","suffix","keys","re","pathToRegexp","regexpToFunction","decode","x","pathname","m","params","_loop_1","flags","regexpToRegexp","groupsRegex","execResult","arrayToRegexp","paths","stringToRegexp","tokensToRegexp","strict","end","encode","delimiter","endsWith","endsWithRe","delimiterRe","route","_i","tokens_1","endToken","isEndDelimited","isNodeProcess","getCleanUrl","isAbsolute","REDUNDANT_CHARACTERS_EXP","getSearchParams","cleanUrl","isAbsoluteUrl","getAbsoluteUrl","baseUrl","normalizePath","maybeAbsoluteUrl","coercePath","parameterName","wildcard","expression","matchRequestUrl","normalizedPath","cleanPath","require_cookie","serialize","__toString","fieldContentRegExp","obj","opt","dec","eqIdx","endIdx","val","tryDecode","enc","isDate","priority","sameSite","decode2","import_cookie","getAllDocumentCookies","cookieUtils","getRequestCookies","getAllRequestCookies","requestCookiesString","cookiesFromHeaders","cookiesFromStore","forwardedCookies","HttpMethods","HttpMethods2","HttpHandler","paramName","hasMatchingMethod","hasMatchingUrl","actualMethod","loggedRequest","loggedResponse","statusColor","createHttpHandler","http","normalizeResponseInit","init","statusText","headers","decorateResponse","cookieString","HttpResponse","body","responseInit","SET_TIMEOUT_MAX_ALLOWED_INT","MIN_SERVER_RESPONSE_TIME","MAX_SERVER_RESPONSE_TIME","NODE_SERVER_RESPONSE_TIME","getRealisticResponseTime","delay","durationOrMode","delayTime","resolve","oppfolging","oppfolgingstatus","ytelsestatus","veilarboppfolgingHandlers","DEFAULT_DELAY_MILLISECONDS","aktorId","cvOgJobbonsker","FagdokumentType","KursVarighetEnhet","SprakNiva","JobbprofilOppstartstype","personalia","Gradering","RelasjonsBosted","mockVergeOgFullmakt","Vergetype","VergemaalEllerFullmaktOmfangType","mockTilrettelagtKommunikasjon","ordinaerRegistering","mockEndringIRegistreringsData","veilarbpersonHandlers","veileder","veilarbveilederHandlers","LiveStorage_1","features","LiveStorage","id","initialValue","hydratedValue","nextValue","updater","serializedValue","storedValue","rest","require$$0","chips","lagredeInformasjonsbokser","veilarbfilterHandlers","requestBody","allHandlers","worker","setupWorker"],"mappings":"kpBACA,IAAIA,GAAkB,oBACtB,SAASC,GAAoBC,EAAYC,EAAM,CAC7C,OAAQA,EAAI,CACV,IAAK,IACH,OAAOD,EACT,IAAK,IACL,IAAK,IACH,OAAO,OAAOA,CAAU,EAC1B,IAAK,IACH,OAAO,KAAK,UAAUA,CAAU,EAClC,IAAK,IAAK,CACR,GAAI,OAAOA,GAAe,SACxB,OAAOA,EAET,MAAME,EAAO,KAAK,UAAUF,CAAU,EACtC,OAAIE,IAAS,MAAQA,IAAS,MAAQ,mBAAmB,KAAKA,CAAI,EACzDF,EAEFE,CACR,CACF,CACH,CACA,SAASC,GAAOC,KAAYC,EAAa,CACvC,GAAIA,EAAY,SAAW,EACzB,OAAOD,EAET,IAAIE,EAAkB,EAClBC,EAAmBH,EAAQ,QAC7BN,GACA,CAACU,EAAOC,EAAWC,EAAGT,IAAS,CAC7B,MAAMD,EAAaK,EAAYC,CAAe,EACxCK,EAAQZ,GAAoBC,EAAYC,CAAI,EAClD,OAAKQ,EAIED,GAHLF,IACOK,EAGV,CACL,EACE,OAAIL,EAAkBD,EAAY,SAChCE,GAAoB,IAAIF,EAAY,MAAMC,CAAe,EAAE,KAAK,GAAG,CAAC,IAEtEC,EAAmBA,EAAiB,QAAQ,UAAW,GAAG,EACnDA,CACT,CAGA,IAAIK,GAAyB,EAC7B,SAASC,GAAgBC,EAAO,CAC9B,GAAI,CAACA,EAAM,MACT,OAEF,MAAMC,EAAYD,EAAM,MAAM,MAAM;AAAA,CAAI,EACxCC,EAAU,OAAO,EAAGH,EAAsB,EAC1CE,EAAM,MAAQC,EAAU,KAAK;AAAA,CAAI,CACnC,CACA,IAAIC,GAAiB,cAAc,KAAM,CACvC,YAAYZ,KAAYC,EAAa,CACnC,MAAMD,CAAO,EACb,KAAK,QAAUA,EACf,KAAK,KAAO,sBACZ,KAAK,QAAUD,GAAOC,EAAS,GAAGC,CAAW,EAC7CQ,GAAgB,IAAI,CACrB,CACH,EACII,EAAY,CAACC,EAAWd,KAAYC,IAAgB,CACtD,GAAI,CAACa,EACH,MAAM,IAAIF,GAAeZ,EAAS,GAAGC,CAAW,CAEpD,EACAY,EAAU,GAAK,CAACE,EAAkBD,EAAWd,KAAYC,IAAgB,CACvE,GAAI,CAACa,EAAW,CACd,MAAME,EAAgBf,EAAY,SAAW,EAAID,EAAUD,GAAOC,EAASC,CAAW,EACtF,IAAIS,EACJ,GAAI,CACFA,EAAQ,QAAQ,UAAUK,EAAkB,CAACC,CAAa,CAAC,CAC5D,MAAa,CACZN,EAAQK,EAAiBC,CAAa,CACvC,CACD,MAAMN,CACP,CACH,ECjFA,MAAMO,GAAiB,QACvB,SAASD,GAAchB,KAAYC,EAAa,CAC9C,MAAMiB,EAAsBnB,GAAOC,EAAS,GAAGC,CAAW,EAC1D,MAAO,GAAGgB,EAAc,IAAIC,CAAmB,EACjD,CACA,SAASC,GAAKnB,KAAYC,EAAa,CACrC,QAAQ,KAAKe,GAAchB,EAAS,GAAGC,CAAW,CAAC,CACrD,CACA,SAASS,GAAMV,KAAYC,EAAa,CACtC,QAAQ,MAAMe,GAAchB,EAAS,GAAGC,CAAW,CAAC,CACtD,CACA,MAAMmB,EAAW,CACf,cAAAJ,GACF,KAAEG,GACF,MAAET,EACF,EChBMW,GAAe,+BACfC,GAAc,iFACpB,SAASC,GAAab,EAAO,CAC3B,MAAMc,EAAQd,EAAM,MACpB,GAAI,CAACc,EACH,OAGF,MAAMC,EADSD,EAAM,MAAM;AAAA,CAAI,EAAE,MAAM,CAAC,EACR,KAAME,GAC7B,EAAEL,GAAa,KAAKK,CAAK,GAAKJ,GAAY,KAAKI,CAAK,EAC5D,EACD,OAAKD,EAGmBA,EAAiB,QAAQ,0BAA2B,IAAI,EAAE,QAAQ,KAAM,EAAE,EAFhG,MAIJ,CChBA,SAASE,GAAWC,EAAI,CACtB,OAAKA,EAGE,OAAOA,EAAG,OAAO,QAAQ,GAAK,WAF5B,EAGX,CCFA,MAAMC,EAAN,MAAMA,CAAe,CAYnB,YAAYC,EAAM,CAVlBC,EAAA,aAKAA,EAAA,eACAA,EAAA,iBACAA,EAAA,0BACAA,EAAA,gCACAA,EAAA,gBAEE,KAAK,SAAWD,EAAK,SACrB,KAAK,QAAUA,EAAK,QACpB,MAAME,EAAYT,GAAa,IAAI,KAAO,EAC1C,KAAK,KAAO,CACV,GAAGO,EAAK,KACR,UAAAE,CACN,EACI,KAAK,OAAS,EACf,CAKD,MAAM,MAAMC,EAAO,CACjB,MAAO,EACR,CAQD,MAAM,KAAKH,EAAM,CACf,MAAMI,EAAe,MAAM,KAAK,MAAM,CACpC,QAASJ,EAAK,QACd,kBAAmBA,EAAK,iBAC9B,CAAK,EACD,OAAO,KAAK,UAAU,CACpB,QAASA,EAAK,QACd,aAAAI,EACA,kBAAmBJ,EAAK,iBAC9B,CAAK,CACF,CACD,mBAAmBG,EAAO,CACxB,MAAO,EACR,CAID,2BAA2BE,EAAS,CAClC,MAAMC,EAAgBP,EAAe,MAAM,IAAIM,CAAO,EACtD,GAAI,OAAOC,EAAkB,IAC3B,OAAOA,EAET,MAAMC,EAAgBF,EAAQ,QAC9B,OAAAN,EAAe,MAAM,IAAIM,EAASE,CAAa,EACxCA,CACR,CAKD,MAAM,IAAIP,EAAM,SACd,GAAI,KAAK,UAAUQ,EAAA,KAAK,UAAL,MAAAA,EAAc,MAC/B,OAAO,KAET,MAAMC,EAAe,KAAK,2BAA2BT,EAAK,OAAO,EAC3DI,EAAe,MAAM,KAAK,MAAM,CACpC,QAASJ,EAAK,QACd,kBAAmBA,EAAK,iBAC9B,CAAK,EASD,GAHI,CAL2B,KAAK,UAAU,CAC5C,QAASA,EAAK,QACd,aAAAI,EACA,kBAAmBJ,EAAK,iBAC9B,CAAK,GAIG,KAAK,UAAUU,EAAA,KAAK,UAAL,MAAAA,EAAc,MAC/B,OAAO,KAET,KAAK,OAAS,GACd,MAAMC,EAAkB,KAAK,aAAa,KAAK,QAAQ,EACjDC,EAAiB,KAAK,mBAAmB,CAC7C,QAASZ,EAAK,QACd,aAAAI,CACN,CAAK,EAWKS,EAAiB,MAVOF,EAAgB,CAC5C,GAAGC,EACH,UAAWZ,EAAK,UAChB,QAASA,EAAK,OACpB,CAAK,EAAE,MAAOc,GAAoB,CAC5B,GAAIA,aAA2B,SAC7B,OAAOA,EAET,MAAMA,CACZ,CAAK,EAUD,OARwB,KAAK,sBAAsB,CAGjD,QAASL,EACT,UAAWT,EAAK,UAChB,SAAUa,EACV,aAAAT,CACN,CAAK,CAEF,CACD,aAAaW,EAAU,CACrB,MAAO,OAAOC,GAAS,CACrB,MAAMC,EAAS,KAAK,mBAAqB,MAAMF,EAASC,CAAI,EAC5D,GAAInB,GAAWoB,CAAM,EAAG,CACtB,KAAK,OAAS,GACd,KAAM,CAAE,MAAAxC,EAAO,KAAAyC,GAASD,EAAO,OAAO,QAAQ,IAAI,OAC5CE,EAAe,MAAM1C,EAI3B,OAHIyC,IACF,KAAK,OAAS,IAEZ,CAACC,GAAgBD,GACnBnC,EACE,KAAK,wBACL,+FACZ,EACiB,KAAK,wBAAwB,UAEjC,KAAK,oBACR,KAAK,kBAAoBkC,GAEvBE,IACF,KAAK,wBAA0BA,GAAA,YAAAA,EAAc,SAExCA,EACR,CACD,OAAOF,CACb,CACG,CACD,sBAAsBjB,EAAM,CAC1B,MAAO,CACL,QAAS,KACT,QAASA,EAAK,QACd,UAAWA,EAAK,UAChB,SAAUA,EAAK,SACf,aAAcA,EAAK,YACzB,CACG,CACH,EArJEC,EADIF,EACG,QAAwB,IAAI,SADrC,IAAMqB,EAANrB,ECFA,IAAIsB,GAAQ,MAAOC,GAAY,CAC7B,GAAI,CAIF,MAAO,CAAE,MAAO,KAAM,KAHT,MAAMA,EAAS,EAAC,MAAO1C,GAAU,CAC5C,MAAMA,CACZ,CAAK,EAEF,OAAQA,EAAO,CACd,MAAO,CAAE,MAAAA,EAAO,KAAM,KACvB,CACH,ECVA,MAAM2C,GAAkB,MAAO,CAC7B,QAAAlB,EACA,UAAAmB,EACA,SAAAC,EACA,kBAAAC,CACF,IAAM,CACJ,IAAIC,EAAkB,KAClBV,EAAS,KACb,UAAWW,KAAWH,EAKpB,GAJAR,EAAS,MAAMW,EAAQ,IAAI,CAAE,QAAAvB,EAAS,UAAAmB,EAAW,kBAAAE,CAAiB,CAAE,EAChET,IAAW,OACbU,EAAkBC,GAEhBX,GAAA,MAAAA,EAAQ,SACV,MAGJ,OAAIU,EACK,CACL,QAASA,EACT,aAAcV,GAAA,YAAAA,EAAQ,aACtB,SAAUA,GAAA,YAAAA,EAAQ,QACxB,EAES,IACT,ECzBA,SAASY,GAAYC,EAAK,CACxB,GAAI,OAAO,SAAa,IACtB,OAAOA,EAAI,WAEb,MAAMC,EAAcD,aAAe,IAAMA,EAAM,IAAI,IAAIA,CAAG,EAC1D,OAAOC,EAAY,SAAW,SAAS,OAASA,EAAY,SAAWA,EAAY,OAASA,EAAY,QAC1G,CCJA,eAAeC,GAAmB3B,EAAS4B,EAAW,OAAQ,CAC5D,MAAMH,EAAM,IAAI,IAAIzB,EAAQ,GAAG,EACzB6B,EAAYL,GAAYC,CAAG,EAC3BK,EAA0B;AAAA;AAAA,MAEvB9B,EAAQ,MAAM,IAAI6B,CAAS;AAAA;AAAA;AAAA,wDAIpC,SAASE,EAAcC,EAAW,CAChC,OAAQA,EAAS,CACf,IAAK,QACH,MAAA/C,EAAS,MAAM,YAAa6C,CAAuB,EAC7C,IAAI,MACR7C,EAAS,cACP,8FACD,CACX,EAEM,IAAK,OAAQ,CACXA,EAAS,KAAK,cAAe6C,CAAuB,EACpD,KACD,CACD,IAAK,SACH,MACF,QACE,MAAM,IAAI,MACR7C,EAAS,cACP,4NACA+C,CACD,CACX,CACK,CACF,CACD,GAAI,OAAOJ,GAAa,WAAY,CAClCA,EAAS5B,EAAS,CAChB,QAAS+B,EAAc,KAAK,KAAM,MAAM,EACxC,MAAOA,EAAc,KAAK,KAAM,OAAO,CAC7C,CAAK,EACD,MACD,CACGN,EAAI,WAAa,SAGrBM,EAAcH,CAAQ,CACxB,CC/CA,IAAIK,GAAW,OAAO,OAClBC,GAAY,OAAO,eACnBC,GAAmB,OAAO,yBAC1BC,GAAoB,OAAO,oBAC3BC,GAAe,OAAO,eACtBC,GAAe,OAAO,UAAU,eAChCC,GAAa,CAACC,EAAIC,IAAQ,UAAqB,CACjD,OAAOA,MAAWD,EAAGJ,GAAkBI,CAAE,EAAE,CAAC,CAAC,IAAIC,EAAM,CAAE,QAAS,CAAA,IAAM,QAASA,CAAG,EAAGA,EAAI,OAC7F,EACIC,GAAc,CAACC,EAAIC,EAAMC,EAAQC,IAAS,CAC5C,GAAIF,GAAQ,OAAOA,GAAS,UAAY,OAAOA,GAAS,WACtD,QAASG,KAAOX,GAAkBQ,CAAI,EAChC,CAACN,GAAa,KAAKK,EAAII,CAAG,GAAKA,IAAQF,GACzCX,GAAUS,EAAII,EAAK,CAAE,IAAK,IAAMH,EAAKG,CAAG,EAAG,WAAY,EAAED,EAAOX,GAAiBS,EAAMG,CAAG,IAAMD,EAAK,UAAU,CAAE,EAEvH,OAAOH,CACT,EACIK,GAAU,CAACP,EAAKQ,EAAYC,KAAYA,EAAST,GAAO,KAAOR,GAASI,GAAaI,CAAG,CAAC,EAAI,CAAE,EAAEC,GACnGO,GAAc,CAACR,GAAO,CAACA,EAAI,WAAaP,GAAUgB,EAAQ,UAAW,CAAE,MAAOT,EAAK,WAAY,EAAI,CAAE,EAAIS,EACzGT,CACF,GAGIU,GAAqBZ,GAAW,CAClC,mDAAmDa,EAASC,EAAQ,CAElE,IAAIC,EAAsB,CACxB,aAAc,GACd,IAAK,GACL,OAAQ,EACd,EACI,SAASC,EAAiBC,EAAK,CAC7B,OAAO,OAAOA,GAAQ,UAAY,CAAC,CAACA,EAAI,KAAI,CAC7C,CACD,SAASC,EAAYC,EAAgBC,EAAS,CAC5C,IAAIC,EAAQF,EAAe,MAAM,GAAG,EAAE,OAAOH,CAAgB,EACzDM,EAAmBD,EAAM,QACzBE,EAASC,EAAmBF,CAAgB,EAC5CG,EAAOF,EAAO,KACd1F,EAAQ0F,EAAO,MACnBH,EAAUA,EAAU,OAAO,OAAO,CAAE,EAAEL,EAAqBK,CAAO,EAAIL,EACtE,GAAI,CACFlF,EAAQuF,EAAQ,aAAe,mBAAmBvF,CAAK,EAAIA,CAC5D,OAAQ6F,EAAG,CACV,QAAQ,MACN,8EAAgF7F,EAAQ,gEACxF6F,CACV,CACO,CACD,IAAIC,EAAS,CACX,KAAAF,EACA,MAAA5F,CACR,EACM,OAAAwF,EAAM,QAAQ,SAASO,EAAM,CAC3B,IAAIC,EAAQD,EAAK,MAAM,GAAG,EACtBpB,EAAMqB,EAAM,MAAO,EAAC,SAAQ,EAAG,cAC/BC,EAASD,EAAM,KAAK,GAAG,EACvBrB,IAAQ,UACVmB,EAAO,QAAU,IAAI,KAAKG,CAAM,EACvBtB,IAAQ,UACjBmB,EAAO,OAAS,SAASG,EAAQ,EAAE,EAC1BtB,IAAQ,SACjBmB,EAAO,OAAS,GACPnB,IAAQ,WACjBmB,EAAO,SAAW,GACTnB,IAAQ,WACjBmB,EAAO,SAAWG,EAElBH,EAAOnB,CAAG,EAAIsB,CAExB,CAAO,EACMH,CACR,CACD,SAASH,EAAmBF,EAAkB,CAC5C,IAAIG,EAAO,GACP5F,EAAQ,GACRkG,EAAeT,EAAiB,MAAM,GAAG,EAC7C,OAAIS,EAAa,OAAS,GACxBN,EAAOM,EAAa,QACpBlG,EAAQkG,EAAa,KAAK,GAAG,GAE7BlG,EAAQyF,EAEH,CAAE,KAAAG,EAAM,MAAA5F,EAChB,CACD,SAASmG,EAAMC,EAAOb,EAAS,CAE7B,GADAA,EAAUA,EAAU,OAAO,OAAO,CAAE,EAAEL,EAAqBK,CAAO,EAAIL,EAClE,CAACkB,EACH,OAAKb,EAAQ,IAGJ,GAFA,GAKX,GAAIa,EAAM,QACR,GAAI,OAAOA,EAAM,QAAQ,cAAiB,WACxCA,EAAQA,EAAM,QAAQ,uBACbA,EAAM,QAAQ,YAAY,EACnCA,EAAQA,EAAM,QAAQ,YAAY,MAC7B,CACL,IAAIC,EAAMD,EAAM,QAAQ,OAAO,KAAKA,EAAM,OAAO,EAAE,KAAK,SAASzB,EAAK,CACpE,OAAOA,EAAI,YAAa,IAAK,YAC9B,CAAA,CAAC,EACE,CAAC0B,GAAOD,EAAM,QAAQ,QAAU,CAACb,EAAQ,QAC3C,QAAQ,KACN,kOACd,EAEUa,EAAQC,CACT,CAMH,GAJK,MAAM,QAAQD,CAAK,IACtBA,EAAQ,CAACA,CAAK,GAEhBb,EAAUA,EAAU,OAAO,OAAO,CAAE,EAAEL,EAAqBK,CAAO,EAAIL,EACjEK,EAAQ,IAIN,CACL,IAAIe,EAAU,CAAA,EACd,OAAOF,EAAM,OAAOjB,CAAgB,EAAE,OAAO,SAASoB,EAAUnB,EAAK,CACnE,IAAIU,EAAST,EAAYD,EAAKG,CAAO,EACrC,OAAAgB,EAAST,EAAO,IAAI,EAAIA,EACjBS,CACR,EAAED,CAAO,CACX,KAVC,QAAOF,EAAM,OAAOjB,CAAgB,EAAE,IAAI,SAASC,EAAK,CACtD,OAAOC,EAAYD,EAAKG,CAAO,CACzC,CAAS,CASJ,CACD,SAASiB,EAAmBC,EAAe,CACzC,GAAI,MAAM,QAAQA,CAAa,EAC7B,OAAOA,EAET,GAAI,OAAOA,GAAkB,SAC3B,MAAO,GAET,IAAIC,EAAiB,CAAA,EACjBC,EAAM,EACNC,EACAC,EACAC,EACAC,EACAC,EACJ,SAASC,GAAiB,CACxB,KAAON,EAAMF,EAAc,QAAU,KAAK,KAAKA,EAAc,OAAOE,CAAG,CAAC,GACtEA,GAAO,EAET,OAAOA,EAAMF,EAAc,MAC5B,CACD,SAASS,GAAiB,CACxB,OAAAL,EAAKJ,EAAc,OAAOE,CAAG,EACtBE,IAAO,KAAOA,IAAO,KAAOA,IAAO,GAC3C,CACD,KAAOF,EAAMF,EAAc,QAAQ,CAGjC,IAFAG,EAAQD,EACRK,EAAwB,GACjBC,EAAc,GAEnB,GADAJ,EAAKJ,EAAc,OAAOE,CAAG,EACzBE,IAAO,IAAK,CAKd,IAJAC,EAAYH,EACZA,GAAO,EACPM,IACAF,EAAYJ,EACLA,EAAMF,EAAc,QAAUS,EAAc,GACjDP,GAAO,EAELA,EAAMF,EAAc,QAAUA,EAAc,OAAOE,CAAG,IAAM,KAC9DK,EAAwB,GACxBL,EAAMI,EACNL,EAAe,KAAKD,EAAc,UAAUG,EAAOE,CAAS,CAAC,EAC7DF,EAAQD,GAERA,EAAMG,EAAY,CAEhC,MACYH,GAAO,GAGP,CAACK,GAAyBL,GAAOF,EAAc,SACjDC,EAAe,KAAKD,EAAc,UAAUG,EAAOH,EAAc,MAAM,CAAC,CAE3E,CACD,OAAOC,CACR,CACDzB,EAAO,QAAUkB,EACjBlB,EAAO,QAAQ,MAAQkB,EACvBlB,EAAO,QAAQ,YAAcI,EAC7BJ,EAAO,QAAQ,mBAAqBuB,CACrC,CACH,CAAC,EAGGW,GAA2BvC,GAAQG,GAAkB,CAAE,EACvDqC,EAAkB,mBACtB,SAASC,IAAuB,CAC9B,GAAI,CACF,GAAI,cAAgB,KAClB,MAAO,GAET,MAAMC,EAAUF,EAAkB,QAClC,oBAAa,QAAQE,EAAS,MAAM,EACpC,aAAa,QAAQA,CAAO,EAC5B,aAAa,WAAWA,CAAO,EACxB,EACR,MAAe,CACd,MAAO,EACR,CACH,CACA,SAASC,GAAqBC,EAAQC,EAAQ,CAC5C,GAAI,CACF,OAAAD,EAAOC,CAAM,EACN,EACX,MAAU,CACN,MAAO,EACR,CACH,CACA,IAAIC,GAAc,KAAM,CACtB,aAAc,CACZ,KAAK,MAAwB,IAAI,GAClC,CACD,IAAI9F,EAAS+F,EAAU,CACrB,GAAIJ,GAAqB3F,EAAS,aAAa,GAAKA,EAAQ,cAAgB,OAC1E,OAEF,MAAMgG,EAAa,IAAI,IAAIhG,EAAQ,GAAG,EAChCiG,EAAkBF,EAAS,QAAQ,IAAI,YAAY,EACzD,GAAI,CAACE,EACH,OAEF,MAAMC,EAAM,KAAK,MACXC,KAA4BZ,GAAyB,OAAOU,CAAe,EAAE,IACjF,CAAC,CAAE,OAAAG,EAAQ,GAAGlC,MAAc,CAC1B,GAAGA,EACH,QAASkC,IAAW,OAASlC,EAAO,QAAU,IAAI,KAAKgC,EAAME,EAAS,GAAG,EACzE,OAAAA,CACR,EACA,EACUC,EAAc,KAAK,MAAM,IAAIL,EAAW,MAAM,GAAqB,IAAI,IAC7EG,EAAsB,QAASjC,GAAW,CACxC,KAAK,MAAM,IAAI8B,EAAW,OAAQK,EAAY,IAAInC,EAAO,KAAMA,CAAM,CAAC,CAC5E,CAAK,CACF,CACD,IAAIlE,EAAS,CACX,KAAK,qBAAoB,EACzB,MAAMgG,EAAa,IAAI,IAAIhG,EAAQ,GAAG,EAChCsG,EAAgB,KAAK,MAAM,IAAIN,EAAW,MAAM,GAAqB,IAAI,IAC/E,GAAI,CAACL,GAAqB3F,EAAS,aAAa,EAC9C,OAAOsG,EAET,OAAQtG,EAAQ,YAAW,CACzB,IAAK,UACH,OAAI,OAAO,SAAa,QAGIuF,GAAyB,OAAO,SAAS,MAAM,EAC3D,QAASrB,GAAW,CAClCoC,EAAc,IAAIpC,EAAO,KAAMA,CAAM,CAC/C,CAAS,EACMoC,EAET,IAAK,cACH,OAAOA,EAET,QACE,OAAuB,IAAI,GAC9B,CACF,CACD,QAAS,CACP,YAAK,qBAAoB,EAClB,KAAK,KACb,CACD,UAAUtG,EAAS,CACjB,MAAMgG,EAAa,IAAI,IAAIhG,EAAQ,GAAG,EACtC,KAAK,MAAM,OAAOgG,EAAW,MAAM,CACpC,CACD,OAAQ,CACN,KAAK,MAAM,OACZ,CACD,SAAU,CACR,GAAI,CAACP,GAAoB,EACvB,OAEF,MAAMc,EAAmB,aAAa,QAAQf,CAAe,EAC7D,GAAKe,EAGL,GAAI,CACoB,KAAK,MAAMA,CAAgB,EACnC,QAAQ,CAAC,CAACC,EAAQ9B,CAAO,IAAM,CAC3C,KAAK,MAAM,IACT8B,EACA,IAAI,IACF9B,EAAQ,IAAI,CAAC,CAAC+B,EAAO,CAAE,QAAAC,EAAS,GAAGxC,CAAM,CAAE,IAAM,CAC/CuC,EACAC,IAAY,OAASxC,EAAS,CAAE,GAAGA,EAAQ,QAAS,IAAI,KAAKwC,CAAO,CAAG,CACrF,CAAa,CACF,CACX,CACA,CAAO,CACF,OAAQnI,EAAO,CACd,QAAQ,KAAK;AAAA,+EAC4DiH,CAAe;AAAA;AAAA;AAAA,EAG5F,aAAa,QAAQA,CAAe,CAAC;AAAA;AAAA;AAAA,EAGrCjH,CAAK;AAAA;AAAA,gGAEyF,EAC1F,aAAa,WAAWiH,CAAe,CACxC,CACF,CACD,SAAU,CACR,GAAI,CAACC,GAAoB,EACvB,OAEF,MAAMkB,EAAoB,MAAM,KAAK,KAAK,MAAM,QAAS,CAAA,EAAE,IACzD,CAAC,CAACH,EAAQ9B,CAAO,IACR,CAAC8B,EAAQ,MAAM,KAAK9B,EAAQ,QAAS,CAAA,CAAC,CAErD,EACI,aAAa,QAAQc,EAAiB,KAAK,UAAUmB,CAAiB,CAAC,CACxE,CACD,sBAAuB,CACrB,MAAMT,EAAM,KAAK,MACjB,KAAK,MAAM,QAAQ,CAACI,EAAeE,IAAW,CAC5CF,EAAc,QAAQ,CAAC,CAAE,QAAAI,EAAS,KAAA1C,CAAI,IAAO,CACvC0C,IAAY,QAAUA,EAAQ,QAAO,GAAMR,GAC7CI,EAAc,OAAOtC,CAAI,CAEnC,CAAO,EACGsC,EAAc,OAAS,GACzB,KAAK,MAAM,OAAOE,CAAM,CAEhC,CAAK,CACF,CACH,EACII,EAAQ,IAAId,GChVhB,SAASe,GAAoB7G,EAAS+F,EAAU,CAC9Ca,EAAM,IAAI,CAAE,GAAG5G,EAAS,IAAKA,EAAQ,IAAI,SAAQ,GAAM+F,CAAQ,EAC/Da,EAAM,QAAO,CACf,CCAA,eAAeE,GAAc9G,EAASmB,EAAWC,EAAUuC,EAASoD,EAASC,EAAsB,iBAEjG,GADAD,EAAQ,KAAK,gBAAiB,CAAE,QAAA/G,EAAS,UAAAmB,CAAW,CAAA,EAChDnB,EAAQ,QAAQ,IAAI,iBAAiB,IAAM,SAAU,CACvD+G,EAAQ,KAAK,cAAe,CAAE,QAAA/G,EAAS,UAAAmB,CAAW,CAAA,GAClDhB,EAAA6G,GAAA,YAAAA,EAAsB,wBAAtB,MAAA7G,EAAA,KAAA6G,EAA8ChH,GAC9C,MACD,CACD,MAAMiH,EAAe,MAAMjG,GAAM,IACxBE,GAAgB,CACrB,QAAAlB,EACA,UAAAmB,EACA,SAAAC,EACA,kBAAmB4F,GAAA,YAAAA,EAAsB,iBAC/C,CAAK,CACF,EACD,GAAIC,EAAa,MACf,MAAAF,EAAQ,KAAK,qBAAsB,CACjC,MAAOE,EAAa,MACpB,QAAAjH,EACA,UAAAmB,CACN,CAAK,EACK8F,EAAa,MAErB,GAAI,CAACA,EAAa,KAAM,CACtB,MAAMtF,GAAmB3B,EAAS2D,EAAQ,kBAAkB,EAC5DoD,EAAQ,KAAK,oBAAqB,CAAE,QAAA/G,EAAS,UAAAmB,CAAW,CAAA,EACxD4F,EAAQ,KAAK,cAAe,CAAE,QAAA/G,EAAS,UAAAmB,CAAW,CAAA,GAClDd,EAAA2G,GAAA,YAAAA,EAAsB,wBAAtB,MAAA3G,EAAA,KAAA2G,EAA8ChH,GAC9C,MACD,CACD,KAAM,CAAE,SAAA+F,CAAQ,EAAKkB,EAAa,KAClC,GAAI,CAAClB,EAAU,CACbgB,EAAQ,KAAK,cAAe,CAAE,QAAA/G,EAAS,UAAAmB,CAAW,CAAA,GAClD+F,EAAAF,GAAA,YAAAA,EAAsB,wBAAtB,MAAAE,EAAA,KAAAF,EAA8ChH,GAC9C,MACD,CACD,GAAI+F,EAAS,SAAW,KAAOA,EAAS,QAAQ,IAAI,iBAAiB,IAAM,cAAe,CACxFgB,EAAQ,KAAK,cAAe,CAAE,QAAA/G,EAAS,UAAAmB,CAAW,CAAA,GAClDgG,EAAAH,GAAA,YAAAA,EAAsB,wBAAtB,MAAAG,EAAA,KAAAH,EAA8ChH,GAC9C,MACD,CACD6G,GAAoB7G,EAAS+F,CAAQ,EACrCgB,EAAQ,KAAK,gBAAiB,CAAE,QAAA/G,EAAS,UAAAmB,CAAW,CAAA,EACpD,MAAMiG,EAAuBH,EAAa,KACpCI,IAAsBC,EAAAN,GAAA,YAAAA,EAAsB,oBAAtB,YAAAM,EAAA,KAAAN,EAA0CjB,KAAaA,EACnF,OAAAwB,EAAAP,GAAA,YAAAA,EAAsB,mBAAtB,MAAAO,EAAA,KAAAP,EACEK,EACAD,GAEFL,EAAQ,KAAK,cAAe,CAAE,QAAA/G,EAAS,UAAAmB,CAAW,CAAA,EAC3CkG,CACT,CCvDA,SAASG,GAAezB,EAAU,CAChC,MAAO,CACL,OAAQA,EAAS,OACjB,WAAYA,EAAS,WACrB,QAAS,OAAO,YAAYA,EAAS,QAAQ,QAAO,CAAE,CAC1D,CACA,CCNA,SAAS0B,GAASrJ,EAAO,CACvB,OAAOA,GAAS,MAAQ,OAAOA,GAAU,UAAY,CAAC,MAAM,QAAQA,CAAK,CAC3E,CCDA,SAASsJ,GAAWC,EAAMC,EAAO,CAC/B,OAAO,OAAO,QAAQA,CAAK,EAAE,OAAO,CAAChH,EAAQ,CAACmC,EAAK8E,CAAU,IAAM,CACjE,MAAMC,EAAYlH,EAAOmC,CAAG,EAC5B,OAAI,MAAM,QAAQ+E,CAAS,GAAK,MAAM,QAAQD,CAAU,GACtDjH,EAAOmC,CAAG,EAAI+E,EAAU,OAAOD,CAAU,EAClCjH,GAEL6G,GAASK,CAAS,GAAKL,GAASI,CAAU,GAC5CjH,EAAOmC,CAAG,EAAI2E,GAAWI,EAAWD,CAAU,EACvCjH,IAETA,EAAOmC,CAAG,EAAI8E,EACPjH,EACR,EAAE,OAAO,OAAO,GAAI+G,CAAI,CAAC,CAC5B,CCdA,IAAII,GAAkB,cAAc,KAAM,CACxC,YAAYhB,EAASiB,EAAMC,EAAO,CAChC,MACE,+CAA+CA,CAAK,IAAID,EAAK,SAAU,CAAA,mEAC7E,EACI,KAAK,QAAUjB,EACf,KAAK,KAAOiB,EACZ,KAAK,MAAQC,EACb,KAAK,KAAO,6BACb,CACH,EAGIC,GAAW,KAAM,CACnB,OAAO,cAAcnB,EAASoB,EAAW,CACvC,OAAOpB,EAAQ,cAAcoB,CAAS,CACvC,CACD,aAAc,CACZ,KAAK,OAAyB,IAAI,IAClC,KAAK,aAAeD,GAAS,oBAC7B,KAAK,kCAAoC,EAC1C,CACD,mBAAmBE,EAAmBD,EAAWE,EAAU,CACzD,KAAK,KACHD,EACID,EAAWE,CACrB,CACG,CACD,cAAcF,EAAW,CACvB,OAAO,MAAM,UAAU,OAAO,MAAM,CAAE,EAAE,KAAK,OAAO,IAAIA,CAAS,CAAC,GAAK,CAAA,CACxE,CACD,gBAAgBG,EAAWD,EAAU,CACnC,MAAME,EAAQD,EAAU,QAAQD,CAAQ,EACxC,OAAIE,EAAQ,IACVD,EAAU,OAAOC,EAAO,CAAC,EAEpB,EACR,CACD,kBAAkBJ,EAAWE,EAAU,CACrC,MAAMG,EAAe,IAAIC,KACvB,KAAK,eAAeN,EAAWK,CAAY,EACpCH,EAAS,MAAM,KAAMI,CAAI,GAElC,cAAO,eAAeD,EAAc,OAAQ,CAAE,MAAOH,EAAS,IAAI,CAAE,EAC7DG,CACR,CACD,gBAAgBE,EAAc,CAC5B,YAAK,aAAeA,EACb,IACR,CAMD,iBAAkB,CAChB,OAAO,KAAK,YACb,CAKD,YAAa,CACX,OAAO,MAAM,KAAK,KAAK,OAAO,KAAM,CAAA,CACrC,CAUD,KAAKP,KAAcM,EAAM,CACvB,MAAMH,EAAY,KAAK,cAAcH,CAAS,EAC9C,OAAAG,EAAU,QAASD,GAAa,CAC9BA,EAAS,MAAM,KAAMI,CAAI,CAC/B,CAAK,EACMH,EAAU,OAAS,CAC3B,CACD,YAAYH,EAAWE,EAAU,CAC/B,KAAK,mBAAmB,cAAeF,EAAWE,CAAQ,EAC1D,MAAMM,EAAgB,KAAK,cAAcR,CAAS,EAAE,OAAOE,CAAQ,EAEnE,GADA,KAAK,OAAO,IAAIF,EAAWQ,CAAa,EACpC,KAAK,aAAe,GAAK,KAAK,cAAcR,CAAS,EAAI,KAAK,cAAgB,CAAC,KAAK,kCAAmC,CACzH,KAAK,kCAAoC,GACzC,MAAMS,EAAoB,IAAIb,GAC5B,KACAI,EACA,KAAK,cAAcA,CAAS,CACpC,EACM,QAAQ,KAAKS,CAAiB,CAC/B,CACD,OAAO,IACR,CACD,GAAGT,EAAWE,EAAU,CACtB,OAAO,KAAK,YAAYF,EAAWE,CAAQ,CAC5C,CACD,KAAKF,EAAWE,EAAU,CACxB,OAAO,KAAK,YACVF,EACA,KAAK,kBAAkBA,EAAWE,CAAQ,CAChD,CACG,CACD,gBAAgBF,EAAWE,EAAU,CACnC,MAAMC,EAAY,KAAK,cAAcH,CAAS,EAC9C,GAAIG,EAAU,OAAS,EAAG,CACxB,MAAMK,EAAgB,CAACN,CAAQ,EAAE,OAAOC,CAAS,EACjD,KAAK,OAAO,IAAIH,EAAWQ,CAAa,CAC9C,MACM,KAAK,OAAO,IAAIR,EAAWG,EAAU,OAAOD,CAAQ,CAAC,EAEvD,OAAO,IACR,CACD,oBAAoBF,EAAWE,EAAU,CACvC,OAAO,KAAK,gBACVF,EACA,KAAK,kBAAkBA,EAAWE,CAAQ,CAChD,CACG,CACD,eAAeF,EAAWE,EAAU,CAClC,MAAMC,EAAY,KAAK,cAAcH,CAAS,EAC9C,OAAIG,EAAU,OAAS,IACrB,KAAK,gBAAgBA,EAAWD,CAAQ,EACxC,KAAK,OAAO,IAAIF,EAAWG,CAAS,EACpC,KAAK,mBAAmB,iBAAkBH,EAAWE,CAAQ,GAExD,IACR,CAOD,IAAIF,EAAWE,EAAU,CACvB,OAAO,KAAK,eAAeF,EAAWE,CAAQ,CAC/C,CACD,mBAAmBF,EAAW,CAC5B,OAAIA,EACF,KAAK,OAAO,OAAOA,CAAS,EAE5B,KAAK,OAAO,QAEP,IACR,CAID,UAAUA,EAAW,CACnB,OAAO,MAAM,KAAK,KAAK,cAAcA,CAAS,CAAC,CAChD,CAID,cAAcA,EAAW,CACvB,OAAO,KAAK,cAAcA,CAAS,EAAE,MACtC,CACD,aAAaA,EAAW,CACtB,OAAO,KAAK,UAAUA,CAAS,CAChC,CACH,EACIU,GAAUX,GACdW,GAAQ,oBAAsB,GCrK9B,SAASC,GAAWC,EAAQC,EAAa,CACvC,MAAMC,EAAUF,EAAO,KACvB,GAAIE,EAAQ,SACV,OAEF,MAAMC,EAAa,SAAqBC,KAAUV,EAAM,CACtD,OAAAO,EAAY,KAAKG,EAAO,GAAGV,CAAI,EACxBQ,EAAQ,KAAK,KAAME,EAAO,GAAGV,CAAI,CAC5C,EACES,EAAW,SAAW,GACtBH,EAAO,KAAOG,CAChB,CCXA,SAASE,GAAgBL,EAAQ,CAC/B,MAAMM,EAAQ,CAAC,GAAGN,CAAM,EACxB,cAAO,OAAOM,CAAK,EACZA,CACT,CCJA,MAAMC,EAAW,CAAjB,cACE1J,EAAA,qBAAgB,CAAA,GAChB,MAAM,SAAU,CACd,MAAM,QAAQ,IAAI,KAAK,cAAc,IAAK2J,GAAiBA,EAAc,CAAA,CAAC,CAC3E,CACH,CCCA,MAAMC,WAAiBF,EAAW,CAMhC,eAAeG,EAAiB,CAC9B,QANF7J,EAAA,wBACAA,EAAA,wBACAA,EAAA,gBACAA,EAAA,sBACAA,EAAA,eAGElB,EACE,KAAK,iBAAiB+K,CAAe,EACrCxK,EAAS,cACP,6GACD,CACP,EACI,KAAK,gBAAkBmK,GAAgBK,CAAe,EACtD,KAAK,gBAAkB,CAAC,GAAGA,CAAe,EAC1C,KAAK,QAAU,IAAIZ,GACnB,KAAK,cAAgB,IAAIA,GACzBC,GAAW,KAAK,QAAS,KAAK,aAAa,EAC3C,KAAK,OAAS,KAAK,wBACnB,KAAK,cAAc,KAAK,IAAM,CAC5B,KAAK,QAAQ,qBACb,KAAK,cAAc,oBACzB,CAAK,CACF,CACD,iBAAiB1H,EAAU,CACzB,OAAOA,EAAS,MAAOG,GAAY,CAAC,MAAM,QAAQA,CAAO,CAAC,CAC3D,CACD,OAAOmI,EAAiB,CACtBhL,EACE,KAAK,iBAAiBgL,CAAe,EACrCzK,EAAS,cACP,gIACD,CACP,EACI,KAAK,gBAAgB,QAAQ,GAAGyK,CAAe,CAChD,CACD,iBAAkB,CAChB,KAAK,gBAAgB,QAASnI,GAAY,CACxCA,EAAQ,OAAS,EACvB,CAAK,CACF,CACD,iBAAiBoI,EAAc,CAC7B,KAAK,gBAAkBA,EAAa,OAAS,EAAI,CAAC,GAAGA,CAAY,EAAI,CAAC,GAAG,KAAK,eAAe,CAC9F,CACD,cAAe,CACb,OAAOP,GAAgB,KAAK,eAAe,CAC5C,CACD,uBAAwB,CACtB,MAAO,CACL,GAAI,IAAIzJ,IACC,KAAK,cAAc,GAAG,GAAGA,CAAI,EAEtC,eAAgB,IAAIA,IACX,KAAK,cAAc,eAAe,GAAGA,CAAI,EAElD,mBAAoB,IAAIA,IACf,KAAK,cAAc,mBAAmB,GAAGA,CAAI,CAE5D,CACG,CACH,CCnEA,IAACiK,GAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wuUCED,SAASC,IAAe,CACtBnL,EACE,OAAO,IAAQ,IACfO,EAAS,cACP,iRACD,CACL,CACA,CCTA,SAAS6K,GAAcC,EAAQC,EAAU,CACvC,OAAOD,EAAO,YAAW,IAAOC,EAAS,YAAW,CACtD,CCIA,SAASC,GAAmBC,EAAQ,CAClC,OAAIA,EAAS,IACJ,UAELA,EAAS,IACJ,UAEF,SACT,CCdA,SAASC,IAAe,CACtB,MAAMjE,EAAsB,IAAI,KAChC,MAAO,CAACA,EAAI,SAAU,EAAEA,EAAI,WAAU,EAAIA,EAAI,WAAU,CAAE,EAAE,IAAI,MAAM,EAAE,IAAKkE,GAAUA,EAAM,MAAM,EAAG,CAAC,CAAC,EAAE,IAAKA,GAAUA,EAAM,SAAS,EAAG,GAAG,CAAC,EAAE,KAAK,GAAG,CAC3J,CCHA,eAAeC,GAAiBrK,EAAS,CAEvC,MAAMsK,EAAc,MADCtK,EAAQ,QACU,OACvC,MAAO,CACL,IAAK,IAAI,IAAIA,EAAQ,GAAG,EACxB,OAAQA,EAAQ,OAChB,QAAS,OAAO,YAAYA,EAAQ,QAAQ,QAAO,CAAE,EACrD,KAAMsK,CACV,CACA,CCTA,IAAIrI,GAAW,OAAO,OAClBC,GAAY,OAAO,eACnBC,GAAmB,OAAO,yBAC1BC,GAAoB,OAAO,oBAC3BC,GAAe,OAAO,eACtBC,GAAe,OAAO,UAAU,eAChCC,GAAa,CAACC,EAAIC,IAAQ,UAAqB,CACjD,OAAOA,MAAWD,EAAGJ,GAAkBI,CAAE,EAAE,CAAC,CAAC,IAAIC,EAAM,CAAE,QAAS,CAAA,IAAM,QAASA,CAAG,EAAGA,EAAI,OAC7F,EACIC,GAAc,CAACC,EAAIC,EAAMC,EAAQC,IAAS,CAC5C,GAAIF,GAAQ,OAAOA,GAAS,UAAY,OAAOA,GAAS,WACtD,QAASG,KAAOX,GAAkBQ,CAAI,EAChC,CAACN,GAAa,KAAKK,EAAII,CAAG,GAAKA,IAAQF,GACzCX,GAAUS,EAAII,EAAK,CAAE,IAAK,IAAMH,EAAKG,CAAG,EAAG,WAAY,EAAED,EAAOX,GAAiBS,EAAMG,CAAG,IAAMD,EAAK,UAAU,CAAE,EAEvH,OAAOH,CACT,EACIK,GAAU,CAACP,EAAKQ,EAAYC,KAAYA,EAAST,GAAO,KAAOR,GAASI,GAAaI,CAAG,CAAC,EAAI,CAAE,EAAEC,GAKnGO,GAAc,CAACR,GAAO,CAACA,EAAI,WAAaP,GAAUgB,EAAQ,UAAW,CAAE,MAAOT,EAAK,WAAY,EAAI,CAAE,EAAIS,EACzGT,CACF,GAGI8H,GAAgBhI,GAAW,CAC7B,mCAAmCa,EAASC,EAAQ,CAClDA,EAAO,QAAU,CACf,IAAO,WACP,IAAO,sBACP,IAAO,aACP,IAAO,cACP,IAAO,KACP,IAAO,UACP,IAAO,WACP,IAAO,gCACP,IAAO,aACP,IAAO,gBACP,IAAO,kBACP,IAAO,eACP,IAAO,mBACP,IAAO,UACP,IAAO,mBACP,IAAO,oBACP,IAAO,QACP,IAAO,YACP,IAAO,eACP,IAAO,YACP,IAAO,qBACP,IAAO,qBACP,IAAO,cACP,IAAO,eACP,IAAO,mBACP,IAAO,YACP,IAAO,YACP,IAAO,qBACP,IAAO,iBACP,IAAO,gCACP,IAAO,kBACP,IAAO,WACP,IAAO,OACP,IAAO,kBACP,IAAO,sBACP,IAAO,oBACP,IAAO,eACP,IAAO,yBACP,IAAO,wBACP,IAAO,qBACP,IAAO,eACP,IAAO,sBACP,IAAO,uBACP,IAAO,SACP,IAAO,oBACP,IAAO,YACP,IAAO,mBACP,IAAO,wBACP,IAAO,oBACP,IAAO,kCACP,IAAO,gCACP,IAAO,wBACP,IAAO,kBACP,IAAO,cACP,IAAO,sBACP,IAAO,kBACP,IAAO,6BACP,IAAO,0BACP,IAAO,uBACP,IAAO,gBACP,IAAO,2BACP,IAAO,eACP,IAAO,iCACb,CACG,CACH,CAAC,EAGGmH,GAAmBjI,GAAW,CAChC,iCAAiCa,EAASC,EAAQ,CAEhD,IAAIoH,EAAQF,KACZlH,EAAO,QAAUqH,EACjBA,EAAQ,QAAUD,EAClBC,EAAQ,KAAOC,EAA6BF,CAAK,EACjDC,EAAQ,MAAQE,EAAqBH,CAAK,EAC1CC,EAAQ,SAAW,CACjB,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,EACX,EACIA,EAAQ,MAAQ,CACd,IAAK,GACL,IAAK,GACL,IAAK,EACX,EACIA,EAAQ,MAAQ,CACd,IAAK,GACL,IAAK,GACL,IAAK,EACX,EACI,SAASC,EAA6BE,EAAQ,CAC5C,IAAIC,EAAM,CAAA,EACV,cAAO,KAAKD,CAAM,EAAE,QAAQ,SAAqBE,EAAM,CACrD,IAAIlN,EAAUgN,EAAOE,CAAI,EACrBC,EAAU,OAAOD,CAAI,EACzBD,EAAIjN,EAAQ,YAAa,CAAA,EAAImN,CACrC,CAAO,EACMF,CACR,CACD,SAASF,EAAqBC,EAAQ,CACpC,OAAO,OAAO,KAAKA,CAAM,EAAE,IAAI,SAAiBE,EAAM,CACpD,OAAO,OAAOA,CAAI,CAC1B,CAAO,CACF,CACD,SAASE,EAAcpN,EAAS,CAC9B,IAAIqN,EAAMrN,EAAQ,cAClB,GAAI,CAAC,OAAO,UAAU,eAAe,KAAK6M,EAAQ,KAAMQ,CAAG,EACzD,MAAM,IAAI,MAAM,4BAA8BrN,EAAU,GAAG,EAE7D,OAAO6M,EAAQ,KAAKQ,CAAG,CACxB,CACD,SAASC,EAAiBJ,EAAM,CAC9B,GAAI,CAAC,OAAO,UAAU,eAAe,KAAKL,EAAQ,QAASK,CAAI,EAC7D,MAAM,IAAI,MAAM,wBAA0BA,CAAI,EAEhD,OAAOL,EAAQ,QAAQK,CAAI,CAC5B,CACD,SAASL,EAAQK,EAAM,CACrB,GAAI,OAAOA,GAAS,SAClB,OAAOI,EAAiBJ,CAAI,EAE9B,GAAI,OAAOA,GAAS,SAClB,MAAM,IAAI,UAAU,iCAAiC,EAEvD,IAAIK,EAAI,SAASL,EAAM,EAAE,EACzB,OAAK,MAAMK,CAAC,EAGLH,EAAcF,CAAI,EAFhBI,EAAiBC,CAAC,CAG5B,CACF,CACH,CAAC,EAGGC,GAAkBrI,GAAQwH,GAAkB,EAAE,CAAC,EAC/Cc,GAAiBD,GAAgB,QAIrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EC7KA,KAAM,CAAExN,QAAAA,EAAS,EAAG0N,GACpB,eAAeC,GAAkBzF,EAAU,CACzC,MAAM0F,EAAgB1F,EAAS,QACzB2F,EAAe,MAAMD,EAAc,OACnCE,EAAiBF,EAAc,QAAU,IACzCG,EAAqBH,EAAc,YAAc5N,GAAQ8N,CAAc,GAAK,KAClF,MAAO,CACL,OAAQA,EACR,WAAYC,EACZ,QAAS,OAAO,YAAYH,EAAc,QAAQ,QAAO,CAAE,EAC3D,KAAMC,CACV,CACA,CCVA,SAASG,GAAMrI,EAAK,CAGhB,QAFIsI,EAAS,CAAA,EACTC,EAAI,EACDA,EAAIvI,EAAI,QAAQ,CACnB,IAAIwI,EAAOxI,EAAIuI,CAAC,EAChB,GAAIC,IAAS,KAAOA,IAAS,KAAOA,IAAS,IAAK,CAC9CF,EAAO,KAAK,CAAE,KAAM,WAAY,MAAOC,EAAG,MAAOvI,EAAIuI,GAAG,CAAG,CAAA,EAC3D,QACH,CACD,GAAIC,IAAS,KAAM,CACfF,EAAO,KAAK,CAAE,KAAM,eAAgB,MAAOC,IAAK,MAAOvI,EAAIuI,GAAG,CAAG,CAAA,EACjE,QACH,CACD,GAAIC,IAAS,IAAK,CACdF,EAAO,KAAK,CAAE,KAAM,OAAQ,MAAOC,EAAG,MAAOvI,EAAIuI,GAAG,CAAG,CAAA,EACvD,QACH,CACD,GAAIC,IAAS,IAAK,CACdF,EAAO,KAAK,CAAE,KAAM,QAAS,MAAOC,EAAG,MAAOvI,EAAIuI,GAAG,CAAG,CAAA,EACxD,QACH,CACD,GAAIC,IAAS,IAAK,CAGd,QAFIhI,EAAO,GACPiI,EAAIF,EAAI,EACLE,EAAIzI,EAAI,QAAQ,CACnB,IAAIuH,EAAOvH,EAAI,WAAWyI,CAAC,EAC3B,GAEClB,GAAQ,IAAMA,GAAQ,IAElBA,GAAQ,IAAMA,GAAQ,IAEtBA,GAAQ,IAAMA,GAAQ,KAEvBA,IAAS,GAAI,CACb/G,GAAQR,EAAIyI,GAAG,EACf,QACH,CACD,KACH,CACD,GAAI,CAACjI,EACD,MAAM,IAAI,UAAU,6BAA6B,OAAO+H,CAAC,CAAC,EAC9DD,EAAO,KAAK,CAAE,KAAM,OAAQ,MAAOC,EAAG,MAAO/H,CAAI,CAAE,EACnD+H,EAAIE,EACJ,QACH,CACD,GAAID,IAAS,IAAK,CACd,IAAI/D,EAAQ,EACRiE,EAAU,GACVD,EAAIF,EAAI,EACZ,GAAIvI,EAAIyI,CAAC,IAAM,IACX,MAAM,IAAI,UAAU,oCAAsC,OAAOA,CAAC,CAAC,EAEvE,KAAOA,EAAIzI,EAAI,QAAQ,CACnB,GAAIA,EAAIyI,CAAC,IAAM,KAAM,CACjBC,GAAW1I,EAAIyI,GAAG,EAAIzI,EAAIyI,GAAG,EAC7B,QACH,CACD,GAAIzI,EAAIyI,CAAC,IAAM,KAEX,GADAhE,IACIA,IAAU,EAAG,CACbgE,IACA,KACH,UAEIzI,EAAIyI,CAAC,IAAM,MAChBhE,IACIzE,EAAIyI,EAAI,CAAC,IAAM,KACf,MAAM,IAAI,UAAU,uCAAuC,OAAOA,CAAC,CAAC,EAG5EC,GAAW1I,EAAIyI,GAAG,CACrB,CACD,GAAIhE,EACA,MAAM,IAAI,UAAU,yBAAyB,OAAO8D,CAAC,CAAC,EAC1D,GAAI,CAACG,EACD,MAAM,IAAI,UAAU,sBAAsB,OAAOH,CAAC,CAAC,EACvDD,EAAO,KAAK,CAAE,KAAM,UAAW,MAAOC,EAAG,MAAOG,CAAO,CAAE,EACzDH,EAAIE,EACJ,QACH,CACDH,EAAO,KAAK,CAAE,KAAM,OAAQ,MAAOC,EAAG,MAAOvI,EAAIuI,GAAG,CAAG,CAAA,CAC1D,CACD,OAAAD,EAAO,KAAK,CAAE,KAAM,MAAO,MAAOC,EAAG,MAAO,EAAE,CAAE,EACzCD,CACX,CAIO,SAASvH,GAAMf,EAAKG,EAAS,CAC5BA,IAAY,SAAUA,EAAU,CAAE,GA2BtC,QA1BImI,EAASD,GAAMrI,CAAG,EAClBrD,EAAKwD,EAAQ,SAAUwI,EAAWhM,IAAO,OAAS,KAAOA,EACzDiM,EAAiB,KAAK,OAAOC,EAAa1I,EAAQ,WAAa,KAAK,EAAG,KAAK,EAC5E/C,EAAS,CAAA,EACTmC,EAAM,EACNgJ,EAAI,EACJO,EAAO,GACPC,EAAa,SAAUvE,EAAM,CAC7B,GAAI+D,EAAID,EAAO,QAAUA,EAAOC,CAAC,EAAE,OAAS/D,EACxC,OAAO8D,EAAOC,GAAG,EAAE,KAC/B,EACQS,EAAc,SAAUxE,EAAM,CAC9B,IAAI5J,EAAQmO,EAAWvE,CAAI,EAC3B,GAAI5J,IAAU,OACV,OAAOA,EACX,IAAI+B,EAAK2L,EAAOC,CAAC,EAAGU,GAAWtM,EAAG,KAAMoI,GAAQpI,EAAG,MACnD,MAAM,IAAI,UAAU,cAAc,OAAOsM,GAAU,MAAM,EAAE,OAAOlE,GAAO,aAAa,EAAE,OAAOP,CAAI,CAAC,CAC5G,EACQ0E,EAAc,UAAY,CAG1B,QAFI9L,EAAS,GACTxC,EACIA,EAAQmO,EAAW,MAAM,GAAKA,EAAW,cAAc,GAC3D3L,GAAUxC,EAEd,OAAOwC,CACf,EACWmL,EAAID,EAAO,QAAQ,CACtB,IAAIE,EAAOO,EAAW,MAAM,EACxBvI,EAAOuI,EAAW,MAAM,EACxBL,EAAUK,EAAW,SAAS,EAClC,GAAIvI,GAAQkI,EAAS,CACjB,IAAIS,EAASX,GAAQ,GACjBG,EAAS,QAAQQ,CAAM,IAAM,KAC7BL,GAAQK,EACRA,EAAS,IAETL,IACA1L,EAAO,KAAK0L,CAAI,EAChBA,EAAO,IAEX1L,EAAO,KAAK,CACR,KAAMoD,GAAQjB,IACd,OAAQ4J,EACR,OAAQ,GACR,QAAST,GAAWE,EACpB,SAAUG,EAAW,UAAU,GAAK,EACpD,CAAa,EACD,QACH,CACD,IAAInO,EAAQ4N,GAAQO,EAAW,cAAc,EAC7C,GAAInO,EAAO,CACPkO,GAAQlO,EACR,QACH,CACGkO,IACA1L,EAAO,KAAK0L,CAAI,EAChBA,EAAO,IAEX,IAAIM,EAAOL,EAAW,MAAM,EAC5B,GAAIK,EAAM,CACN,IAAID,EAASD,IACTG,EAASN,EAAW,MAAM,GAAK,GAC/BO,EAAYP,EAAW,SAAS,GAAK,GACrCQ,EAASL,IACbF,EAAY,OAAO,EACnB5L,EAAO,KAAK,CACR,KAAMiM,IAAWC,EAAY/J,IAAQ,IACrC,QAAS8J,GAAU,CAACC,EAAYV,EAAiBU,EACjD,OAAQH,EACR,OAAQI,EACR,SAAUR,EAAW,UAAU,GAAK,EACpD,CAAa,EACD,QACH,CACDC,EAAY,KAAK,CACpB,CACD,OAAO5L,CACX,CAoEO,SAAS3C,GAAMuF,EAAKG,EAAS,CAChC,IAAIqJ,EAAO,CAAA,EACPC,EAAKC,GAAa1J,EAAKwJ,EAAMrJ,CAAO,EACxC,OAAOwJ,GAAiBF,EAAID,EAAMrJ,CAAO,CAC7C,CAIO,SAASwJ,GAAiBF,EAAID,EAAMrJ,EAAS,CAC5CA,IAAY,SAAUA,EAAU,CAAE,GACtC,IAAIxD,EAAKwD,EAAQ,OAAQyJ,EAASjN,IAAO,OAAS,SAAUkN,EAAG,CAAE,OAAOA,CAAE,EAAKlN,EAC/E,OAAO,SAAUmN,EAAU,CACvB,IAAIC,EAAIN,EAAG,KAAKK,CAAQ,EACxB,GAAI,CAACC,EACD,MAAO,GAgBX,QAfIjB,EAAOiB,EAAE,CAAC,EAAGhF,EAAQgF,EAAE,MACvBC,EAAS,OAAO,OAAO,IAAI,EAC3BC,EAAU,SAAU1B,EAAG,CACvB,GAAIwB,EAAExB,CAAC,IAAM,OACT,MAAO,WACX,IAAIhJ,EAAMiK,EAAKjB,EAAI,CAAC,EAChBhJ,EAAI,WAAa,KAAOA,EAAI,WAAa,IACzCyK,EAAOzK,EAAI,IAAI,EAAIwK,EAAExB,CAAC,EAAE,MAAMhJ,EAAI,OAASA,EAAI,MAAM,EAAE,IAAI,SAAU3E,EAAO,CACxE,OAAOgP,EAAOhP,EAAO2E,CAAG,CAC5C,CAAiB,EAGDyK,EAAOzK,EAAI,IAAI,EAAIqK,EAAOG,EAAExB,CAAC,EAAGhJ,CAAG,CAEnD,EACiBgJ,EAAI,EAAGA,EAAIwB,EAAE,OAAQxB,IAC1B0B,EAAQ1B,CAAC,EAEb,MAAO,CAAE,KAAMO,EAAM,MAAO/D,EAAO,OAAQiF,EACnD,CACA,CAIA,SAASnB,EAAa7I,EAAK,CACvB,OAAOA,EAAI,QAAQ,4BAA6B,MAAM,CAC1D,CAIA,SAASkK,GAAM/J,EAAS,CACpB,OAAOA,GAAWA,EAAQ,UAAY,GAAK,GAC/C,CAIA,SAASgK,GAAerB,EAAMU,EAAM,CAChC,GAAI,CAACA,EACD,OAAOV,EAIX,QAHIsB,EAAc,0BACdrF,EAAQ,EACRsF,EAAaD,EAAY,KAAKtB,EAAK,MAAM,EACtCuB,GACHb,EAAK,KAAK,CAEN,KAAMa,EAAW,CAAC,GAAKtF,IACvB,OAAQ,GACR,OAAQ,GACR,SAAU,GACV,QAAS,EACrB,CAAS,EACDsF,EAAaD,EAAY,KAAKtB,EAAK,MAAM,EAE7C,OAAOA,CACX,CAIA,SAASwB,GAAcC,EAAOf,EAAMrJ,EAAS,CACzC,IAAIC,EAAQmK,EAAM,IAAI,SAAUzB,EAAM,CAAE,OAAOY,GAAaZ,EAAMU,EAAMrJ,CAAO,EAAE,MAAS,CAAA,EAC1F,OAAO,IAAI,OAAO,MAAM,OAAOC,EAAM,KAAK,GAAG,EAAG,GAAG,EAAG8J,GAAM/J,CAAO,CAAC,CACxE,CAIA,SAASqK,GAAe1B,EAAMU,EAAMrJ,EAAS,CACzC,OAAOsK,GAAe1J,GAAM+H,EAAM3I,CAAO,EAAGqJ,EAAMrJ,CAAO,CAC7D,CAIO,SAASsK,GAAenC,EAAQkB,EAAMrJ,EAAS,CAC9CA,IAAY,SAAUA,EAAU,CAAE,GAMtC,QALIxD,EAAKwD,EAAQ,OAAQuK,EAAS/N,IAAO,OAAS,GAAQA,EAAIE,EAAKsD,EAAQ,MAAOqB,EAAQ3E,IAAO,OAAS,GAAOA,EAAI6G,EAAKvD,EAAQ,IAAKwK,EAAMjH,IAAO,OAAS,GAAOA,EAAIC,EAAKxD,EAAQ,OAAQyK,EAASjH,IAAO,OAAS,SAAUkG,GAAG,CAAE,OAAOA,EAAE,EAAKlG,EAAIG,EAAK3D,EAAQ,UAAW0K,EAAY/G,IAAO,OAAS,MAAQA,EAAIC,EAAK5D,EAAQ,SAAU2K,EAAW/G,IAAO,OAAS,GAAKA,EAC1WgH,EAAa,IAAI,OAAOlC,EAAaiC,CAAQ,EAAG,KAAK,EACrDE,EAAc,IAAI,OAAOnC,EAAagC,CAAS,EAAG,GAAG,EACrDI,EAAQzJ,EAAQ,IAAM,GAEjB0J,EAAK,EAAGC,EAAW7C,EAAQ4C,EAAKC,EAAS,OAAQD,IAAM,CAC5D,IAAIjI,EAAQkI,EAASD,CAAE,EACvB,GAAI,OAAOjI,GAAU,SACjBgI,GAASpC,EAAa+B,EAAO3H,CAAK,CAAC,MAElC,CACD,IAAIkG,EAASN,EAAa+B,EAAO3H,EAAM,MAAM,CAAC,EAC1CsG,EAASV,EAAa+B,EAAO3H,EAAM,MAAM,CAAC,EAC9C,GAAIA,EAAM,QAGN,GAFIuG,GACAA,EAAK,KAAKvG,CAAK,EACfkG,GAAUI,EACV,GAAItG,EAAM,WAAa,KAAOA,EAAM,WAAa,IAAK,CAClD,IAAIhE,EAAMgE,EAAM,WAAa,IAAM,IAAM,GACzCgI,GAAS,MAAM,OAAO9B,EAAQ,MAAM,EAAE,OAAOlG,EAAM,QAAS,MAAM,EAAE,OAAOsG,CAAM,EAAE,OAAOJ,EAAQ,KAAK,EAAE,OAAOlG,EAAM,QAAS,MAAM,EAAE,OAAOsG,EAAQ,GAAG,EAAE,OAAOtK,CAAG,CACxK,MAEGgM,GAAS,MAAM,OAAO9B,EAAQ,GAAG,EAAE,OAAOlG,EAAM,QAAS,GAAG,EAAE,OAAOsG,EAAQ,GAAG,EAAE,OAAOtG,EAAM,QAAQ,OAIvGA,EAAM,WAAa,KAAOA,EAAM,WAAa,IAC7CgI,GAAS,OAAO,OAAOhI,EAAM,QAAS,GAAG,EAAE,OAAOA,EAAM,SAAU,GAAG,EAGrEgI,GAAS,IAAI,OAAOhI,EAAM,QAAS,GAAG,EAAE,OAAOA,EAAM,QAAQ,OAKrEgI,GAAS,MAAM,OAAO9B,CAAM,EAAE,OAAOI,EAAQ,GAAG,EAAE,OAAOtG,EAAM,QAAQ,CAE9E,CACJ,CACD,GAAI0H,EACKD,IACDO,GAAS,GAAG,OAAOD,EAAa,GAAG,GACvCC,GAAU9K,EAAQ,SAAiB,MAAM,OAAO4K,EAAY,GAAG,EAAlC,QAE5B,CACD,IAAIK,EAAW9C,EAAOA,EAAO,OAAS,CAAC,EACnC+C,GAAiB,OAAOD,GAAa,SACnCJ,EAAY,QAAQI,EAASA,EAAS,OAAS,CAAC,CAAC,EAAI,GACrDA,IAAa,OACdV,IACDO,GAAS,MAAM,OAAOD,EAAa,KAAK,EAAE,OAAOD,EAAY,KAAK,GAEjEM,KACDJ,GAAS,MAAM,OAAOD,EAAa,GAAG,EAAE,OAAOD,EAAY,GAAG,EAErE,CACD,OAAO,IAAI,OAAOE,EAAOf,GAAM/J,CAAO,CAAC,CAC3C,CAQO,SAASuJ,GAAaZ,EAAMU,EAAMrJ,EAAS,CAC9C,OAAI2I,aAAgB,OACTqB,GAAerB,EAAMU,CAAI,EAChC,MAAM,QAAQV,CAAI,EACXwB,GAAcxB,EAAMU,EAAMrJ,CAAO,EACrCqK,GAAe1B,EAAMU,EAAMrJ,CAAO,CAC7C,CC7Yc,IAAI,YCAlB,SAASmL,IAAgB,CACvB,GAAI,OAAO,UAAc,KAAe,UAAU,UAAY,cAC5D,MAAO,GAET,GAAI,OAAO,QAAY,IAAa,CAClC,MAAM9G,EAAO,QAAQ,KACrB,OAAIA,IAAS,YAAcA,IAAS,SAC3B,GAEF,CAAC,EAAE,QAAQ,UAAY,QAAQ,SAAS,KAChD,CACD,MAAO,EACT,mYC4CA,SAAS+G,GAAYtN,EAAKuN,EAAa,GAAM,CAC3C,MAAO,CAACA,GAAcvN,EAAI,OAAQA,EAAI,QAAQ,EAAE,OAAO,OAAO,EAAE,KAAK,EAAE,CACzE,CC3DA,MAAMwN,GAA2B,aACjC,SAASC,GAAgB5C,EAAM,CAC7B,OAAO,IAAI,IAAI,IAAIA,CAAI,GAAI,kBAAkB,EAAE,YACjD,CACA,SAAS6C,GAAS7C,EAAM,CACtB,OAAOA,EAAK,QAAQ2C,GAA0B,EAAE,CAClD,CCNA,SAASG,GAAc3N,EAAK,CAC1B,MAAO,gCAAgC,KAAKA,CAAG,CACjD,CCDA,SAAS4N,GAAe/C,EAAMgD,EAAS,CAIrC,GAHIF,GAAc9C,CAAI,GAGlBA,EAAK,WAAW,GAAG,EACrB,OAAOA,EAET,MAAM9F,EAAS8I,GAAW,OAAO,SAAa,KAAe,SAAS,QACtE,OAAO9I,EAEL,UAAU,IAAI,IAAI,UAAU8F,CAAI,EAAG9F,CAAM,EAAE,IAAI,EAC7C8F,CACN,CCXA,SAASiD,GAAcjD,EAAMgD,EAAS,CACpC,GAAIhD,aAAgB,OAClB,OAAOA,EAET,MAAMkD,EAAmBH,GAAe/C,EAAMgD,CAAO,EACrD,OAAOH,GAASK,CAAgB,CAClC,CCLA,SAASC,GAAWnD,EAAM,CACxB,OAAOA,EAAK,QACV,4BACA,CAACnO,EAAGuR,EAAeC,IAAa,CAC9B,MAAMC,EAAa,OACnB,OAAKF,EAGEA,EAAc,WAAW,GAAG,EAAI,GAAGA,CAAa,GAAGC,CAAQ,GAAK,GAAGD,CAAa,GAAGE,CAAU,GAF3FA,CAGV,CACL,EAAI,QAAQ,oBAAqB,QAAQ,EAAE,QAAQ,uBAAwB,QAAQ,CACnF,CACA,SAASC,GAAgBpO,EAAK6K,EAAMgD,EAAS,CAC3C,MAAMQ,EAAiBP,GAAcjD,EAAMgD,CAAO,EAC5CS,EAAY,OAAOD,GAAmB,SAAWL,GAAWK,CAAc,EAAIA,EAC9EX,EAAWJ,GAAYtN,CAAG,EAC1Bb,EAAS3C,GAAM8R,EAAW,CAAE,OAAQ,kBAAoB,CAAA,EAAEZ,CAAQ,EAClE3B,EAAS5M,GAAUA,EAAO,QAAU,CAAA,EAC1C,MAAO,CACL,QAASA,IAAW,GACpB,OAAA4M,CACJ,CACA,CCzBA,IAAIvL,GAAW,OAAO,OAClBC,GAAY,OAAO,eACnBC,GAAmB,OAAO,yBAC1BC,GAAoB,OAAO,oBAC3BC,GAAe,OAAO,eACtBC,GAAe,OAAO,UAAU,eAChCC,GAAa,CAACC,EAAIC,IAAQ,UAAqB,CACjD,OAAOA,MAAWD,EAAGJ,GAAkBI,CAAE,EAAE,CAAC,CAAC,IAAIC,EAAM,CAAE,QAAS,CAAA,IAAM,QAASA,CAAG,EAAGA,EAAI,OAC7F,EACIC,GAAc,CAACC,EAAIC,EAAMC,EAAQC,IAAS,CAC5C,GAAIF,GAAQ,OAAOA,GAAS,UAAY,OAAOA,GAAS,WACtD,QAASG,KAAOX,GAAkBQ,CAAI,EAChC,CAACN,GAAa,KAAKK,EAAII,CAAG,GAAKA,IAAQF,GACzCX,GAAUS,EAAII,EAAK,CAAE,IAAK,IAAMH,EAAKG,CAAG,EAAG,WAAY,EAAED,EAAOX,GAAiBS,EAAMG,CAAG,IAAMD,EAAK,UAAU,CAAE,EAEvH,OAAOH,CACT,EACIK,GAAU,CAACP,EAAKQ,EAAYC,KAAYA,EAAST,GAAO,KAAOR,GAASI,GAAaI,CAAG,CAAC,EAAI,CAAE,EAAEC,GAKnGO,GAAc,CAACR,GAAO,CAACA,EAAI,WAAaP,GAAUgB,EAAQ,UAAW,CAAE,MAAOT,EAAK,WAAY,EAAI,CAAE,EAAIS,EACzGT,CACF,GAGIuN,GAAiBzN,GAAW,CAC9B,+BAA+Ba,EAAS,CAEtCA,EAAQ,MAAQmB,EAChBnB,EAAQ,UAAY6M,EACpB,IAAIC,EAAa,OAAO,UAAU,SAC9BC,EAAqB,wCACzB,SAAS5L,EAAMf,EAAKG,EAAS,CAC3B,GAAI,OAAOH,GAAQ,SACjB,MAAM,IAAI,UAAU,+BAA+B,EAMrD,QAJI4M,EAAM,CAAA,EACNC,EAAM1M,GAAW,GACjB2M,EAAMD,EAAI,QAAUjD,EACpB7E,EAAQ,EACLA,EAAQ/E,EAAI,QAAQ,CACzB,IAAI+M,EAAQ/M,EAAI,QAAQ,IAAK+E,CAAK,EAClC,GAAIgI,IAAU,GACZ,MAEF,IAAIC,EAAShN,EAAI,QAAQ,IAAK+E,CAAK,EACnC,GAAIiI,IAAW,GACbA,EAAShN,EAAI,eACJgN,EAASD,EAAO,CACzBhI,EAAQ/E,EAAI,YAAY,IAAK+M,EAAQ,CAAC,EAAI,EAC1C,QACD,CACD,IAAIxN,EAAMS,EAAI,MAAM+E,EAAOgI,CAAK,EAAE,OAClC,GAAeH,EAAIrN,CAAG,IAAlB,OAAqB,CACvB,IAAI0N,EAAMjN,EAAI,MAAM+M,EAAQ,EAAGC,CAAM,EAAE,OACnCC,EAAI,WAAW,CAAC,IAAM,KACxBA,EAAMA,EAAI,MAAM,EAAG,EAAE,GAEvBL,EAAIrN,CAAG,EAAI2N,EAAUD,EAAKH,CAAG,CAC9B,CACD/H,EAAQiI,EAAS,CAClB,CACD,OAAOJ,CACR,CACD,SAASH,EAAUjM,EAAMyM,EAAK9M,EAAS,CACrC,IAAI0M,EAAM1M,GAAW,GACjBgN,EAAMN,EAAI,QAAUjC,EACxB,GAAI,OAAOuC,GAAQ,WACjB,MAAM,IAAI,UAAU,0BAA0B,EAEhD,GAAI,CAACR,EAAmB,KAAKnM,CAAI,EAC/B,MAAM,IAAI,UAAU,0BAA0B,EAEhD,IAAI5F,EAAQuS,EAAIF,CAAG,EACnB,GAAIrS,GAAS,CAAC+R,EAAmB,KAAK/R,CAAK,EACzC,MAAM,IAAI,UAAU,yBAAyB,EAE/C,IAAIoF,EAAMQ,EAAO,IAAM5F,EACvB,GAAYiS,EAAI,QAAZ,KAAoB,CACtB,IAAIjK,EAASiK,EAAI,OAAS,EAC1B,GAAI,MAAMjK,CAAM,GAAK,CAAC,SAASA,CAAM,EACnC,MAAM,IAAI,UAAU,0BAA0B,EAEhD5C,GAAO,aAAe,KAAK,MAAM4C,CAAM,CACxC,CACD,GAAIiK,EAAI,OAAQ,CACd,GAAI,CAACF,EAAmB,KAAKE,EAAI,MAAM,EACrC,MAAM,IAAI,UAAU,0BAA0B,EAEhD7M,GAAO,YAAc6M,EAAI,MAC1B,CACD,GAAIA,EAAI,KAAM,CACZ,GAAI,CAACF,EAAmB,KAAKE,EAAI,IAAI,EACnC,MAAM,IAAI,UAAU,wBAAwB,EAE9C7M,GAAO,UAAY6M,EAAI,IACxB,CACD,GAAIA,EAAI,QAAS,CACf,IAAI3J,EAAU2J,EAAI,QAClB,GAAI,CAACO,EAAOlK,CAAO,GAAK,MAAMA,EAAQ,QAAO,CAAE,EAC7C,MAAM,IAAI,UAAU,2BAA2B,EAEjDlD,GAAO,aAAekD,EAAQ,aAC/B,CAOD,GANI2J,EAAI,WACN7M,GAAO,cAEL6M,EAAI,SACN7M,GAAO,YAEL6M,EAAI,SAAU,CAChB,IAAIQ,EAAW,OAAOR,EAAI,UAAa,SAAWA,EAAI,SAAS,YAAW,EAAKA,EAAI,SACnF,OAAQQ,EAAQ,CACd,IAAK,MACHrN,GAAO,iBACP,MACF,IAAK,SACHA,GAAO,oBACP,MACF,IAAK,OACHA,GAAO,kBACP,MACF,QACE,MAAM,IAAI,UAAU,4BAA4B,CACnD,CACF,CACD,GAAI6M,EAAI,SAAU,CAChB,IAAIS,EAAW,OAAOT,EAAI,UAAa,SAAWA,EAAI,SAAS,YAAW,EAAKA,EAAI,SACnF,OAAQS,EAAQ,CACd,IAAK,GACHtN,GAAO,oBACP,MACF,IAAK,MACHA,GAAO,iBACP,MACF,IAAK,SACHA,GAAO,oBACP,MACF,IAAK,OACHA,GAAO,kBACP,MACF,QACE,MAAM,IAAI,UAAU,4BAA4B,CACnD,CACF,CACD,OAAOA,CACR,CACD,SAAS4J,EAAO5J,EAAK,CACnB,OAAOA,EAAI,QAAQ,GAAG,IAAM,GAAK,mBAAmBA,CAAG,EAAIA,CAC5D,CACD,SAAS4K,EAAOqC,EAAK,CACnB,OAAO,mBAAmBA,CAAG,CAC9B,CACD,SAASG,EAAOH,EAAK,CACnB,OAAOP,EAAW,KAAKO,CAAG,IAAM,iBAAmBA,aAAe,IACnE,CACD,SAASC,EAAUlN,EAAKuN,EAAS,CAC/B,GAAI,CACF,OAAOA,EAAQvN,CAAG,CACnB,MAAW,CACV,OAAOA,CACR,CACF,CACF,CACH,CAAC,EAGGwN,GAAgBhO,GAAQgN,GAAgB,EAAE,CAAC,EAC3C1E,GAAiB0F,GAAc,QAInC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EC5KA,SAASC,IAAwB,CAC/B,OAAOC,GAAY,MAAM,SAAS,MAAM,CAC1C,CACA,SAASC,GAAkBnR,EAAS,CAClC,GAAI,OAAO,SAAa,KAAe,OAAO,SAAa,IACzD,MAAO,GAET,OAAQA,EAAQ,YAAW,CACzB,IAAK,cAAe,CAClB,MAAMyB,EAAM,IAAI,IAAIzB,EAAQ,GAAG,EAC/B,OAAO,SAAS,SAAWyB,EAAI,OAASwP,GAAuB,EAAG,EACnE,CACD,IAAK,UACH,OAAOA,GAAqB,EAE9B,QACE,MAAO,EAEV,CACH,CACA,SAASG,GAAqBpR,EAAS,OACrC,MAAMqR,EAAuBrR,EAAQ,QAAQ,IAAI,QAAQ,EACnDsR,EAAqBD,EAAuBH,GAAY,MAAMG,CAAoB,EAAI,GAC5FzK,EAAM,QAAO,EACb,MAAM2K,EAAmB,MAAM,MAAKpR,EAAAyG,EAAM,IAAI5G,CAAO,IAAjB,YAAAG,EAAoB,SAAS,EAAE,OAAO,CAACuE,EAAS,CAACV,EAAM,CAAE,MAAA5F,CAAK,CAAE,IAC3F,OAAO,OAAOsG,EAAS,CAAE,CAACV,EAAK,KAAI,CAAE,EAAG5F,CAAK,CAAE,EACrD,CAAE,CAAA,EAECoT,EAAmB,CACvB,GAF0BL,GAAkBnR,CAAO,EAGnD,GAAGuR,CACP,EACE,SAAW,CAACvN,EAAM5F,CAAK,IAAK,OAAO,QAAQoT,CAAgB,EACzDxR,EAAQ,QAAQ,OAAO,SAAUkR,GAAY,UAAUlN,EAAM5F,CAAK,CAAC,EAErE,MAAO,CACL,GAAGoT,EACH,GAAGF,CACP,CACA,CC1BA,IAAIG,GAAgCC,IAClCA,EAAa,KAAU,OACvBA,EAAa,IAAS,MACtBA,EAAa,KAAU,OACvBA,EAAa,IAAS,MACtBA,EAAa,MAAW,QACxBA,EAAa,QAAa,UAC1BA,EAAa,OAAY,SAClBA,IACND,GAAe,CAAA,CAAE,EACpB,MAAME,WAAoB5Q,CAAe,CACvC,YAAY8E,EAAQyG,EAAM5L,EAAUiD,EAAS,CAC3C,MAAM,CACJ,KAAM,CACJ,OAAQ,GAAGkC,CAAM,IAAIyG,CAAI,GACzB,KAAAA,EACA,OAAAzG,CACD,EACD,SAAAnF,EACA,QAAAiD,CACN,CAAK,EACD,KAAK,8BAA6B,CACnC,CACD,+BAAgC,CAC9B,KAAM,CAAE,OAAAkC,EAAQ,KAAAyG,GAAS,KAAK,KAK9B,GAJIA,aAAgB,QAGR6C,GAAS7C,CAAI,IACbA,EACV,OAEmB4C,GAAgB5C,CAAI,EAE5B,QAAQ,CAACnO,EAAGyT,IAAc,CAE3C,CAAK,EACD3S,EAAS,KACP,+EAA+E4G,CAAM,IAAIyG,CAAI,oIACnG,CACG,CACD,MAAM,MAAM3M,EAAM,OAChB,MAAM8B,EAAM,IAAI,IAAI9B,EAAK,QAAQ,GAAG,EAC9B1B,EAAQ4R,GACZpO,EACA,KAAK,KAAK,MACVtB,EAAAR,EAAK,oBAAL,YAAAQ,EAAwB,OAC9B,EACUuE,EAAU0M,GAAqBzR,EAAK,OAAO,EACjD,MAAO,CACL,MAAA1B,EACA,QAAAyG,CACN,CACG,CACD,UAAU/E,EAAM,CACd,MAAMkS,EAAoB,KAAK,YAAYlS,EAAK,QAAQ,MAAM,EACxDmS,EAAiBnS,EAAK,aAAa,MAAM,QAC/C,OAAOkS,GAAqBC,CAC7B,CACD,YAAYC,EAAc,CACxB,OAAO,KAAK,KAAK,kBAAkB,OAAS,KAAK,KAAK,OAAO,KAAKA,CAAY,EAAIjI,GAAc,KAAK,KAAK,OAAQiI,CAAY,CAC/H,CACD,mBAAmBpS,EAAM,OACvB,MAAO,CACL,SAAQQ,EAAAR,EAAK,aAAa,QAAlB,YAAAQ,EAAyB,SAAU,CAAE,EAC7C,QAASR,EAAK,aAAa,OACjC,CACG,CACD,MAAM,IAAIA,EAAM,CACd,MAAMkC,EAAYL,GAAY7B,EAAK,QAAQ,GAAG,EACxCqS,EAAgB,MAAM3H,GAAiB1K,EAAK,OAAO,EACnDsS,EAAiB,MAAMzG,GAAkB7L,EAAK,QAAQ,EACtDuS,EAAcjI,GAAmBgI,EAAe,MAAM,EAC5D,QAAQ,eACNhT,EAAS,cACP,GAAGkL,GAAY,CAAE,IAAIxK,EAAK,QAAQ,MAAM,IAAIkC,CAAS,OAAOoQ,EAAe,MAAM,IAAIA,EAAe,UAAU,KAC/G,EACD,SAASC,CAAW,GACpB,eACN,EACI,QAAQ,IAAI,UAAWF,CAAa,EACpC,QAAQ,IAAI,WAAY,IAAI,EAC5B,QAAQ,IAAI,WAAYC,CAAc,EACtC,QAAQ,SAAQ,CACjB,CACH,CChGA,SAASE,EAAkBtM,EAAQ,CACjC,MAAO,CAACyG,EAAM5L,EAAUiD,EAAU,CAAA,IACzB,IAAIgO,GAAY9L,EAAQyG,EAAM5L,EAAUiD,CAAO,CAE1D,CACA,MAAMyO,EAAO,CACX,IAAKD,EAAkB,IAAI,EAC3B,KAAMA,EAAkBV,EAAY,IAAI,EACxC,IAAKU,EAAkBV,EAAY,GAAG,EACtC,KAAMU,EAAkBV,EAAY,IAAI,EACxC,IAAKU,EAAkBV,EAAY,GAAG,EACtC,OAAQU,EAAkBV,EAAY,MAAM,EAC5C,MAAOU,EAAkBV,EAAY,KAAK,EAC1C,QAASU,EAAkBV,EAAY,OAAO,CAChD,ECjBM,CAAE,QAAA5T,EAAS,EAAG0N,GACpB,SAAS8G,EAAsBC,EAAO,GAAI,CACxC,MAAMpI,GAASoI,GAAA,YAAAA,EAAM,SAAU,IACzBC,GAAaD,GAAA,YAAAA,EAAM,aAAczU,GAAQqM,CAAM,GAAK,GACpDsI,EAAU,IAAI,QAAQF,GAAA,YAAAA,EAAM,OAAO,EACzC,MAAO,CACL,GAAGA,EACH,QAAAE,EACA,OAAAtI,EACA,WAAAqI,CACJ,CACA,CACA,SAASE,GAAiB1M,EAAUuM,EAAM,OAQxC,GAPIA,EAAK,MACP,OAAO,eAAevM,EAAU,OAAQ,CACtC,MAAOuM,EAAK,KACZ,WAAY,GACZ,SAAU,EAChB,CAAK,EAEC,OAAO,SAAa,IAAa,CACnC,MAAMrM,IAAkB9F,EAAAmS,EAAK,QAAQ,IAAI,YAAY,IAA7B,YAAAnS,EAAgC,MAAM,OAAQ,GACtE,UAAWuS,KAAgBzM,EACzB,SAAS,OAASyM,CAErB,CACD,OAAO3M,CACT,CCxBA,MAAM4M,UAAqB,QAAS,CAClC,YAAYC,EAAMN,EAAM,CACtB,MAAMO,EAAeR,EAAsBC,CAAI,EAC/C,MAAMM,EAAMC,CAAY,EACxBJ,GAAiB,KAAMI,CAAY,CACpC,CAOD,OAAO,KAAKD,EAAMN,EAAM,CACtB,MAAMO,EAAeR,EAAsBC,CAAI,EAC/C,OAAKO,EAAa,QAAQ,IAAI,cAAc,GAC1CA,EAAa,QAAQ,IAAI,eAAgB,YAAY,EAEhD,IAAIF,EAAaC,EAAMC,CAAY,CAC3C,CAOD,OAAO,KAAKD,EAAMN,EAAM,CACtB,MAAMO,EAAeR,EAAsBC,CAAI,EAC/C,OAAKO,EAAa,QAAQ,IAAI,cAAc,GAC1CA,EAAa,QAAQ,IAAI,eAAgB,kBAAkB,EAEtD,IAAIF,EACT,KAAK,UAAUC,CAAI,EACnBC,CACN,CACG,CAOD,OAAO,IAAID,EAAMN,EAAM,CACrB,MAAMO,EAAeR,EAAsBC,CAAI,EAC/C,OAAKO,EAAa,QAAQ,IAAI,cAAc,GAC1CA,EAAa,QAAQ,IAAI,eAAgB,UAAU,EAE9C,IAAIF,EAAaC,EAAMC,CAAY,CAC3C,CAUD,OAAO,YAAYD,EAAMN,EAAM,CAC7B,MAAMO,EAAeR,EAAsBC,CAAI,EAC/C,OAAIM,GACFC,EAAa,QAAQ,IAAI,iBAAkBD,EAAK,WAAW,SAAQ,CAAE,EAEhE,IAAID,EAAaC,EAAMC,CAAY,CAC3C,CASD,OAAO,SAASD,EAAMN,EAAM,CAC1B,OAAO,IAAIK,EAAaC,EAAMP,EAAsBC,CAAI,CAAC,CAC1D,CACH,CC9EA,MAAMQ,GAA8B,WAC9BC,GAA2B,IAC3BC,GAA2B,IAC3BC,GAA4B,EAClC,SAASC,IAA2B,CAClC,OAAIpE,GAAa,EACRmE,GAEF,KAAK,MACV,KAAK,OAAQ,GAAID,GAA2BD,IAA4BA,EAC5E,CACA,CACA,eAAeI,EAAMC,EAAgB,CACnC,IAAIC,EACJ,GAAI,OAAOD,GAAmB,SAC5B,OAAQA,EAAc,CACpB,IAAK,WAAY,CACfC,EAAYP,GACZ,KACD,CACD,IAAK,OAAQ,CACXO,EAAYH,GAAwB,EACpC,KACD,CACD,QACE,MAAM,IAAI,MACR,mDAAmDE,CAAc,8FAC3E,CAEK,SACQ,OAAOA,EAAmB,IACnCC,EAAYH,GAAwB,MAC/B,CACL,GAAIE,EAAiBN,GACnB,MAAM,IAAI,MACR,wDAAwDM,CAAc,4DAA4DN,EAA2B,6NACrK,EAEIO,EAAYD,CACb,CACD,OAAO,IAAI,QAASE,GAAY,WAAWA,EAASD,CAAS,CAAC,CAChE,CC3BAxJ,GAAc,ECTd,MAAM0J,GAAkC,CACpC,UAAW,GACX,gBAAiB,EACrB,EAEMC,GAA0C,CAC5C,iBAAkB,CACd,KAAM,eACN,QAAS,KACb,EACA,WAAY,UACZ,kBAAmB,OACnB,cAAe,QACf,cAAe,UACnB,EAEMC,GAA2B,CAC7B,aAAc,CACV,CACI,eAAgB,yBAChB,QAAS,CACL,IAAK,KACL,MAAO,IACP,KAAM,MACV,EACA,OAAQ,YACR,QAAS,CACL,IAAK,KACL,MAAO,KACP,KAAM,MACV,EACA,YAAa,8BACjB,EACA,CACI,eAAgB,KAChB,QAAS,CACL,IAAK,KACL,MAAO,IACP,KAAM,MACV,EACA,OAAQ,YACR,QAAS,KACT,YAAa,mCACjB,EACA,CACI,eAAgB,yBAChB,QAAS,CACL,IAAK,KACL,MAAO,IACP,KAAM,MACV,EACA,OAAQ,YACR,YAAa,wCACjB,CACJ,CACJ,EAEaC,GAA8C,CACvDtB,EAAK,KAAK,0DAA2D,UACjE,MAAMe,EAAMQ,CAA0B,EAC/BhB,EAAa,KAAKa,EAAgB,EAC5C,EACDpB,EAAK,KAAK,gDAAiD,UACvD,MAAMe,EAAMQ,CAA0B,EAC/BhB,EAAa,KAAKc,EAAY,EACxC,EACDrB,EAAK,KAAK,iDAAkD,UACxD,MAAMe,EAAMQ,CAA0B,EAC/BhB,EAAa,KAAKY,EAAU,EACtC,CACL,EC5DMK,GAAmB,CACrB,QAAS,SACb,EAEMC,GAA8B,CAChC,WAAY,gCACZ,WACI,wPACJ,gBAAiB,CACb,CACI,OAAQ,aACR,aAAc,qBACd,KAAM,iBACN,YAAa,iCACb,QAAS,UACT,QAAS,SACb,EACA,CACI,OAAQ,aACR,aAAc,4BACd,KAAM,SACN,YAAa,mCACb,QAAS,UACT,QAAS,IACb,CACJ,EACA,mBAAoB,CAChB,CACI,OAAQ,mBACR,KAAMC,GAAgB,UAC1B,EACA,CACI,OAAQ,gCACR,KAAMA,GAAgB,kBAC1B,CACJ,EACA,UAAW,CACP,CACI,OAAQ,sEACR,gBAAiB,aACjB,WAAY,qBACZ,YAAa,2BACb,QAAS,UACT,QAAS,IACb,EACA,CACI,OAAQ,mCACR,gBAAiB,2BACjB,WAAY,6CACZ,YAAa,KACb,QAAS,UACT,QAAS,SACb,EACA,CACI,OAAQ,iEACR,gBAAiB,gBACjB,WAAY,4BACZ,YAAa,KACb,QAAS,UACT,QAAS,SACb,CACJ,EACA,cAAe,CACX,CACI,MAAO,mBACP,YAAa,0CACb,QAAS,UACT,QAAS,IACb,EACA,CACI,MAAO,iBACP,YAAa,gDACb,QAAS,UACT,QAAS,SACb,EACA,CACI,MAAO,qBACP,YAAa,4CACb,QAAS,UACT,QAAS,SACb,EACA,CACI,MAAO,qBACP,YAAa,+CACb,QAAS,UACT,QAAS,SACb,EACA,CACI,MAAO,aACP,YAAa,gCACb,QAAS,UACT,QAAS,SACb,CACJ,EACA,UAAW,CACP,CACI,OAAQ,GACZ,EACA,CACI,OAAQ,IACZ,CACJ,EACA,KAAM,CACF,CACI,OAAQ,OACR,SAAU,OACV,UAAW,UACX,SAAU,CACN,SAAU,EACV,UAAWC,GAAkB,GACjC,CACJ,EACA,CACI,OAAQ,aACR,SAAU,4BACV,UAAW,aACX,SAAU,CACN,SAAU,EACV,UAAWA,GAAkB,GACjC,CACJ,EAEA,CACI,OAAQ,MACR,SAAU,OACV,UAAW,SACf,EACA,CACI,OAAQ,wBACR,SAAU,YACV,UAAW,SACf,CACJ,EACA,cAAe,CACX,CACI,OAAQ,wBACR,SAAU,qBACV,gBAAiB,aACjB,YAAa,YACjB,EACA,CACI,OAAQ,gBACR,SAAU,KACV,gBAAiB,aACjB,YAAa,IACjB,CACJ,EACA,mBAAoB,CAChB,CACI,OAAQ,sCACR,SAAU,0BACV,gBAAiB,aACjB,YAAa,YACjB,EACA,CACI,OAAQ,oCACR,SAAU,2BACV,gBAAiB,UACjB,YAAa,SACjB,EACA,CACI,OAAQ,wCACR,SAAU,KACV,gBAAiB,UACjB,YAAa,IACjB,CACJ,EACA,MAAO,CACH,CACI,MAAO,QACP,YAAaC,GAAU,cACvB,cAAe,MACnB,EACA,CACI,MAAO,SACP,YAAa,OACb,cAAe,MACnB,EACA,CACI,MAAO,UACP,YAAa,OACb,cAAe,MACnB,EACA,CACI,MAAO,OACP,YAAa,OACb,cAAe,MACnB,CACJ,EACA,WAAY,CACR,WAAY,gCACZ,WAAY,CACR,CACI,OAAQ,cACZ,CACJ,EACA,kBAAmB,CACf,CACI,UAAW,OACf,EACA,CACI,UAAW,SACf,EACA,CACI,UAAW,UACf,EACA,CACI,UAAW,MACf,EACA,CACI,UAAW,SACf,EACA,CACI,UAAW,UACf,EACA,CACI,UAAW,UACf,EACA,CACI,UAAW,UACf,EACA,CACI,UAAW,YACf,EACA,CACI,UAAW,YACf,EACA,CACI,UAAW,UACf,EACA,CACI,UAAW,WACf,EACA,CACI,UAAW,kBACf,EACA,CACI,UAAW,iBACf,EACA,CACI,UAAW,UACf,EACA,CACI,UAAW,UACf,EACA,CACI,UAAW,gBACf,E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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,48,49]}